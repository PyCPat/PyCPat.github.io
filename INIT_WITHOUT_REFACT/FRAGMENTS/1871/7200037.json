{"BEFORE":"        return output\n","AFTER":"        input = input.to(self.device)\n        for i in range(self.agents):\n            # Common layers\n            x = input[:, i]\n\n            x = self.conv0(x)\n            x = self.prelu0(x)\n\n            x = self.maxpool0(x)\n\n            x = self.conv1(x)\n            x = self.prelu1(x)\n            x = self.maxpool1(x)\n            x = self.conv2(x)\n            x = self.prelu2(x)\n            x = self.maxpool2(x)\n            #print(\"x.shape maxpool2\",x.shape)\n            #x = self.conv3(x)\n            #print(\"x.shape conv3\",x.shape)\n            #x = self.prelu3(x)\n            x = x.view(-1, 512)\n            # Individual layers\n            x = self.fc1[i](x)\n            x = self.prelu4[i](x)\n            x = self.fc2[i](x)\n            x = self.prelu5[i](x)\n            x = self.fc3[i](x)\n            if i == 0:\n                output = x.unsqueeze(0)\n            else:\n                output = torch.cat((output, x.unsqueeze(0)), dim=1)\n        return output.cpu()\n"}