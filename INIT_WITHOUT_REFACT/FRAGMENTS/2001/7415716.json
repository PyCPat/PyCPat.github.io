{"BEFORE":"\t\t\tassignment = Categorical(logits=self.img_factor_embeddings[f](img_id))\n\n\t\t\tfactor_code = (\n\t\t\t\tself.factor_embeddings[f](factors[:, f]) * label_masks[:, [f]]\n\t\t\t\t+ torch.matmul(assignment.probs, self.factor_embeddings[f].weight) * (~label_masks[:, [f]])\n","AFTER":"\t\tfor f in range(self.config['n_factors']):\n\t\t\tassignment = Categorical(logits=self.img_factor_embeddings[f](img_id))\n\n\t\t\twith torch.no_grad():\n\t\t\t\tfactor_values = torch.arange(self.config['factor_sizes'][f], dtype=torch.int64).to(img_id.device)\n\t\t\t\tfactor_embeddings = self.factor_embeddings[f](factor_values)\n\n\t\t\tfactor_code = (\n\t\t\t\tself.factor_embeddings[f](factors[:, f]) * label_masks[:, [f]]\n\t\t\t\t+ torch.matmul(assignment.probs, factor_embeddings) * (~label_masks[:, [f]])\n"}