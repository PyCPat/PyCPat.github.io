{"BEFORE":"        self.input_name_1 = set_default(_look='input_name_1', _dict=config, _default='x')\n        self.input_name_2 = set_default(_look='input_name_2', _dict=config, _default='x')\n        self.output_name = set_default(_look='output_name', _dict=config, _default='x')\n        self.merge_name = set_default(_look='merge_type', _dict=config, _default='add')\n\n        self.input_dim_1 = _streams[self.input_name_1][-1]\n        len_input_1 = _streams[self.input_name_1][-2]\n        self.input_dim_2 = _streams[self.input_name_2][-1]\n        len_input_2 = _streams[self.input_name_2][-2]\n\n        assert len_input_1 == len_input_2, f\"Merging streams must have the same length!\"\n\n        if (self.merge_name == 'add') or (self.merge_name == 'mult'):\n            assert self.input_dim_1 == self.input_dim_2, f\"When merging streams with 'add' or 'mult', the two input\" \\\n                                                         f\" streams must have the same number of features.\"\n            self.output_dim = self.input_dim_1\n        elif self.merge_name == 'cat':\n            self.output_dim = self.input_dim_1 + self.input_dim_2\n        else:\n            print(f'{self.merge_name} did not match any options.')\n\n        # Prepare streams info\n        self.streams_in_module = {'inputs': [[self.input_name_1, ['BSZ', len_input_1, self.input_dim_1]],\n                                             [self.input_name_2, ['BSZ', len_input_2, self.input_dim_2]],\n                                             ],\n\n                                  'outputs': [[self.output_name, ['BSZ', len_input_1, self.output_dim]],\n","AFTER":"        self.input_shape_1 = _streams[self.input_name_1]\n        self.input_shape_2 = _streams[self.input_name_2]\n\n        assert (self.merge_name == 'add') or (self.merge_name == 'multiply') or (self.merge_name == 'subtract'), \\\n            f\"Merge stream operations available are: 'add', 'multiply', and 'subtract'!\"\n\n        if len(self.input_shape_1) < len(self.input_shape_2):\n            self.output_shape = self.input_shape_2\n        else:\n            self.output_shape = self.input_shape_1\n\n        # Prepare streams info\n        self.streams_in_module = {'inputs': [[self.input_name_1, self.input_shape_1],\n                                             [self.input_name_2, self.input_shape_2],\n                                             ],\n\n                                  'outputs': [[self.output_name, self.output_shape],\n"}