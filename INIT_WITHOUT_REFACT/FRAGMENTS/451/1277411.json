{"BEFORE":"        print('stage contains ',block_num, ' blocks')\n\n        # 构建block\n        self.resblock_list = nn.ModuleList([])\n        for index in range(self.block_num):\n            if index == 0:\n                self.resblock_list.append(ResBlock(in_channels, middle_channels, out_channels, dim=dim))\n            else:\n                self.resblock_list.append(ResBlock(out_channels, middle_channels, out_channels, dim=dim))\n\n    def forward(self, x):\n","AFTER":"    def __init__(self, type, in_channels, middle_channels, out_channels, block_num=2, norm='bn', active='relu', gn_c=8, dim=2):\n        super().__init__()\n        self.type = type\n        self.in_channels = in_channels\n        self.middle_channels = middle_channels\n        self.out_channels = out_channels\n        self.block_num = block_num\n        self.dim = dim\n\n        print('ResStage stage contains ', block_num, ' blocks')\n\n        # 构建block\n        if type == '33':\n            self.block_list = nn.ModuleList([])\n            for index in range(self.block_num):\n                if index == 0:\n                    self.block_list.append(ResBlock(type, in_channels, None, out_channels, norm=norm, active=active, gn_c=gn_c, dim=dim))\n                else:\n                    self.block_list.append(ResBlock(type, out_channels, None, out_channels, norm=norm, active=active, gn_c=gn_c, dim=dim))\n        elif type == '131':\n            self.block_list = nn.ModuleList([])\n            for index in range(self.block_num):\n                if index == 0:\n                    self.block_list.append(ResBlock(type, in_channels, middle_channels, out_channels, norm=norm, active=active, gn_c = gn_c, dim = dim))\n                else:\n                    self.block_list.append(ResBlock(type, out_channels, middle_channels, out_channels, norm=norm, active=active, gn_c = gn_c, dim = dim))\n\n    def forward(self, x):\n"}