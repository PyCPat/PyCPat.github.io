{"BEFORE":"        image, video = x[:, 0], x[:, 1:]\r\n        video = video.permute(0, 2, 1, 3, 4)  # B x T x C x H x W -> B x C x T x H x W\r\n        image = self.image_patch_emb(image)\r\n        video = self.video_patch_emb(video)\r\n        video = torch.cat([image.unsqueeze(2), video], dim=2)\r\n","AFTER":"    def forward(self, image, video):\r\n        # image, video: 1 x 3 x 128 x 128, 1 x 100 x 3 x 128 x 128\r\n        image = self.image_patch_emb(image)  # 1 x 64 x 16 x 16\r\n        if video is not None:\r\n            video = video.permute(0, 2, 1, 3, 4)  # B x T x C x H x W -> B x C x T x H x W\r\n            video = self.video_patch_emb(video)  # 1 x 64 x 20 x 16 x 16\r\n            video = torch.cat([image.unsqueeze(2), video], dim=2)  # 1 x 64 x 21 x 16 x 16\r\n        else:\r\n            video = image.unsqueeze(2)\r\n        video = video.view(*video.shape[:3], -1).permute(0, 2, 3, 1)  # B x T x (H x W) x C -> 1 x 21 x (16*16) x 64\r\n"}