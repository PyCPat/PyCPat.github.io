{"BEFORE":"    def forward(self, x, x_base=None):\n        B, N, C = x.shape\n\n        if self.mix_base > 0 and x_base is not None:\n            x_base = self.contextize(x_base, self.mix_base) # (B, N, 4*mix_base)\n            x = torch.cat((x_base, x), dim=2) # (B, N, n_in=C+4*mix_base)\n\n        x = x.transpose(1, 2) # (B, n_in, N)\n        y = self.net(x)\n        return y.transpose(1, 2).view(B, N, -1) # (B, N, n_out)\n","AFTER":"        x = x.permute(0, 2, 1)\n        x = self.conv(x)\n        x = x.permute(0, 2, 1).view(B, N, -1)\n        return x # (B, N, n_out)\n"}