{"BEFORE":"        o = torch.cat((o0, o1, o2), 1)\n\n        # x_union = torch.cat((x, o), 1)  # cat original frames again\n        x_union = o\n        o = self.unet_union.forward(x_union)\n\n        # o_p, o_phot, o_x, o_y, o_z = o[:, [0]], o[:, [1]], o[:, [2]], o[:, [3]], o[:, [4]]\n        o_p = self.mt_p.forward(o)\n        o_phot = self.mt_phot.forward(o)\n        o_x = self.mt_x.forward(o)\n        o_y = self.mt_y.forward(o)\n        o_z = self.mt_z.forward(o)\n        o_not_bg = torch.cat((o_p, o_phot, o_x, o_y, o_z), 1)\n\n        if self.ch_out == 5:\n            o = o_not_bg\n\n        elif self.ch_out == 6:\n            o_bg = self.mt_bg.forward(o)\n            o = torch.cat((o_not_bg, o_bg), 1)\n\n        \"\"\"Apply the final non-linearities\"\"\"\n","AFTER":"        o = torch.cat((o0, o1, o2), 1)\n\n        o = self.unet_union.forward(o)\n\n        o_head = []\n        for i in range(self.ch_out):\n            o_head.append(self.mt_heads[i].forward(o))\n        o = torch.cat(o_head, 1)\n"}