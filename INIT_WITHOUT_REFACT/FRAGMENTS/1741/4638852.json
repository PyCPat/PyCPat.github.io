{"BEFORE":"        assert len(self.model_cfg.LAYER_NUMS) == len(self.model_cfg.LAYER_STRIDES) == len(self.model_cfg.NUM_FILTERS)\n        assert len(self.model_cfg.UPSAMPLE_STRIDES) == len(self.model_cfg.NUM_UPSAMPLE_FILTERS)\n        layer_nums = self.model_cfg.LAYER_NUMS\n        layer_strides = self.model_cfg.LAYER_STRIDES\n        num_filters = self.model_cfg.NUM_FILTERS\n        num_upsample_filters = self.model_cfg.NUM_UPSAMPLE_FILTERS\n        upsample_strides = self.model_cfg.UPSAMPLE_STRIDES\n","AFTER":"        self.model_cfg = model_cfg\n\n        if self.model_cfg.get('LAYER_NUMS', None) is not None:\n            assert len(self.model_cfg.LAYER_NUMS) == len(self.model_cfg.LAYER_STRIDES) == len(self.model_cfg.NUM_FILTERS)\n            layer_nums = self.model_cfg.LAYER_NUMS\n            layer_strides = self.model_cfg.LAYER_STRIDES\n            num_filters = self.model_cfg.NUM_FILTERS\n        else:\n            layer_nums = layer_strides = num_filters = []\n\n        if self.model_cfg.get('UPSAMPLE_STRIDES', None) is not None:\n            assert len(self.model_cfg.UPSAMPLE_STRIDES) == len(self.model_cfg.NUM_UPSAMPLE_FILTERS)\n            num_upsample_filters = self.model_cfg.NUM_UPSAMPLE_FILTERS\n            upsample_strides = self.model_cfg.UPSAMPLE_STRIDES\n        else:\n            upsample_strides = num_upsample_filters = []\n\n        num_levels = len(layer_nums)\n"}