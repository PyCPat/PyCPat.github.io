{"BEFORE":"        if self.outermost:\n            return self.model(x)\n        else:  # add skip connections\n            return torch.cat([x, self.model(x)], 1)\n","AFTER":"    def forward(self, x, feats):\n        output = self.model[0](x)\n        return_feats = feats + [output]\n\n        for layer in self.model[1:]:\n            if isinstance(layer, UnetSkipConnectionBlock):\n                output, return_feats = layer(output, return_feats)\n            else:\n                output = layer(output)\n\n        if not self.outermost:  # add skip connections\n            output = torch.cat([x, output], 1)\n\n        return output, return_feats\n"}