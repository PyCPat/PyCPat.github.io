{"BEFORE":"        loss_hard = loss[loss > self.thresh]\n\n        if loss_hard.numel() < n_min:\n            loss_hard, _ = loss.topk(n_min)\n\n        return torch.mean(loss_hard)\n","AFTER":"        if self.weight is not None:\n            self.criterion.weight = self.criterion.weight.to(device)\n\n        # preds in shape [B, C, H, W] and labels in shape [B, H, W]\n        n_min = labels[labels != self.ignore_label].numel() \/\/ 16\n\n        loss = self.criterion(pred, labels).view(-1)\n        loss_hard = loss[loss > self.thresh]\n\n        if loss_hard.numel() < n_min:\n            loss_hard, _ = loss.topk(n_min)\n        \n        loss = loss_hard.mean()\n        \n        loss_dict = {\"OhemCE\": loss.item()}\n        return loss, loss_dict\n"}