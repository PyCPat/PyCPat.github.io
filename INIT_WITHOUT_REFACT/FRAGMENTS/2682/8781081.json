{"BEFORE":"            if self.g_cond_mtd != \"W\/O\":\n                zs = torch.split(z, self.chunk_size, 1)\n                z = zs[0]\n                if shared_label is None:\n                    shared_label = self.shared(label)\n                else:\n                    pass\n                labels = [torch.cat([shared_label, item], 1) for item in zs[1:]]\n            else:\n                labels = [None]*self.chunk_size\n","AFTER":"        affine_list = []\n        with torch.cuda.amp.autocast() if self.mixed_precision and not eval else misc.dummy_context_mgr() as mp:\n            if self.MODEL.info_type != \"N\/A\":\n                if self.MODEL.g_info_injection == \"concat\":\n                    z = self.info_mix_linear(z)\n                elif self.MODEL.g_info_injection == \"cBN\":\n                    z, z_info = z[:, :self.z_dim], z[:, self.z_dim:]\n                    affine_list.append(self.info_proj_linear(z_info))\n\n            zs = torch.split(z, self.chunk_size, 1)\n            z = zs[0]\n            if self.g_cond_mtd != \"W\/O\":\n                if shared_label is None:\n                    shared_label = self.shared(label)\n                affine_list.append(shared_label)\n            if len(affine_list) == 0:\n                affines = [item for item in zs[1:]]\n            else:\n                affines = [torch.cat(affine_list + [item], 1) for item in zs[1:]]\n\n            act = self.linear0(z)\n"}