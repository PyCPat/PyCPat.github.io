{"BEFORE":"        self.W = nn.Parameter(\n            0.1 * torch.rand(FREQ, N_COMP), requires_grad=True\n        )\n        self.activ = nn.ReLU()\n\n        if init_file is not None:\n            # handle numpy or torch\n            if \".pt\" in init_file:\n                self.W.data = torch.load(\n                    init_file, map_location=torch.device(device)\n                )\n            else:\n                temp = np.load(init_file)\n                self.W.data = torch.as_tensor(temp).float()\n\n    def forward(self, inp):\n","AFTER":"        self.W = nn.Parameter(\n            0.1 * torch.rand(n_freq, n_comp), requires_grad=True\n        ).to(device)\n        self.activ = nn.ReLU()\n\n        # we need to fix this! we should download from HF\n        if init_file is not None:\n            self.W.data = torch.load(\n                init_file, map_location=torch.device(device)\n            )\n"}