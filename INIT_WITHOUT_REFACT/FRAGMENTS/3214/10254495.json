{"BEFORE":"        x = (x - 0.5) \/ 0.5\n        shape = x.shape\n        n, c, h, w = shape\n        if c == 1:\n            x = x.expand(1, 3, 1, 1)\n        hPad = max(0, 32 - h)\n        wPad = max(0, 32 - w)\n        x = F.pad(x, (0, wPad, 0, hPad))\n        return self._quantizer(self._encoder(x)), torch.tensor([h, w], dtype=torch.int)\n","AFTER":"        codes = list()\n        latent = self._encoder(x)\n        for i in range(self._levels):\n            head = self._heads[i]\n            z = head(latent)\n            if i < self._levels - 1:\n                mapper = self._mappers[i]\n                latent = mapper(latent)\n                code = self._quantizers[i](z)\n                hard = self._deQuantizers[i](code)\n                latent = latent - hard\n            else:\n                code = self._quantizers[i](z)\n            codes.append(code)\n        return codes\n"}