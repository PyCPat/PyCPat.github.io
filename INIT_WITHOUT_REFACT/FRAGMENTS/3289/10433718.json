{"BEFORE":"        sin_inp_x = torch.einsum(\"i,j->ij\", pos_x, self.inv_freq)\n        sin_inp_y = torch.einsum(\"i,j->ij\", pos_y, self.inv_freq)\n        sin_inp_z = torch.einsum(\"i,j->ij\", pos_z, self.inv_freq)\n        emb_x = (\n            torch.cat((sin_inp_x.sin(), sin_inp_x.cos()), dim=-1)\n            .unsqueeze(1)\n            .unsqueeze(1)\n        )\n        emb_y = torch.cat((sin_inp_y.sin(), sin_inp_y.cos()), dim=-1).unsqueeze(1)\n        emb_z = torch.cat((sin_inp_z.sin(), sin_inp_z.cos()), dim=-1)\n","AFTER":"        sin_inp_x = torch.einsum(\"i,j->ij\", pos_x, self.inv_freq)\n        sin_inp_y = torch.einsum(\"i,j->ij\", pos_y, self.inv_freq)\n        sin_inp_z = torch.einsum(\"i,j->ij\", pos_z, self.inv_freq)\n        emb_x = get_emb(sin_inp_x).unsqueeze(1).unsqueeze(1)\n        emb_y = get_emb(sin_inp_y).unsqueeze(1)\n        emb_z = get_emb(sin_inp_z)\n"}