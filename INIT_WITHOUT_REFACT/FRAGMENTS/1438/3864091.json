{"BEFORE":"        self.channels_outs = channels_outs\n        gains = {\n                'n': {'gd': 0.33, 'gw': 0.25},\n                's': {'gd': 0.33, 'gw': 0.5},\n                'm': {'gd': 0.67, 'gw': 0.75},\n                'l': {'gd': 1, 'gw': 1},\n                'x': {'gd': 1.33, 'gw': 1.25}\n                }\n\n        if self.version.lower() in gains:\n            # only for yolov5\n            self.gd = gains[self.version.lower()]['gd']  # depth gain\n            self.gw = gains[self.version.lower()]['gw']  # width gain\n        else:\n            self.gd = 0.33\n            self.gw = 0.5\n\n        self.re_channels_out()\n\n        self.P3_size = P3_size\n        self.P4_size = P4_size\n        self.P5_size = P5_size\n\n        self.convP3 = Conv(self.P3_size, self.P3_size, 3, 2)\n        self.P4 = C3(self.P3_size + self.P4_size, self.channels_outs[0], self.get_depth(3), False)\n\n        self.convP4 = Conv(self.channels_outs[0], self.channels_outs[0], 3, 2)\n        self.P5 = C3(self.channels_outs[0] + self.P5_size, self.channels_outs[1], self.get_depth(3), False)\n\n        self.concat = Concat()\n        self.out_shape = [self.P3_size, self.channels_outs[0], self.channels_outs[1]]\n        print(\"PAN input channel size: P3 {}, P4 {}, P5 {}\".format(self.P3_size, self.P4_size, self.P5_size))\n        print(\"PAN output channel size: PP3 {}, PP4 {}, PP5 {}\".format(self.P3_size, self.channels_outs[0], self.channels_outs[1]))\n","AFTER":"        self.channels_outs = channels_outs\n        gains = {\n                'n': {'gd': 0.33, 'gw': 0.25},\n                's': {'gd': 0.33, 'gw': 0.5},\n                'm': {'gd': 0.67, 'gw': 0.75},\n                'l': {'gd': 1, 'gw': 1},\n                'x': {'gd': 1.33, 'gw': 1.25}\n                }\n\n        if self.version.lower() in gains:\n            # only for yolov5\n            self.gd = gains[self.version.lower()]['gd']  # depth gain\n            self.gw = gains[self.version.lower()]['gw']  # width gain\n        else:\n            self.gd = 0.33\n            self.gw = 0.5\n\n        self.re_channels_out()\n\n        self.P3_size = P3_size\n        self.P4_size = P4_size\n        self.P5_size = P5_size\n\n        self.convP3 = Conv(self.P3_size,  self.channels_outs[0], 3, 2)\n        self.P4 = C3(self.channels_outs[0] + self.P4_size, self.channels_outs[1], self.get_depth(3), False)\n\n        self.convP4 = Conv(self.channels_outs[1], self.channels_outs[2], 3, 2)\n        self.P5 = C3(self.channels_outs[2] + self.P5_size, self.channels_outs[3], self.get_depth(3), False)\n\n        self.concat = Concat()\n        self.out_shape = [self.P3_size, self.channels_outs[2], self.channels_outs[3]]\n        print(\"PAN input channel size: P3 {}, P4 {}, P5 {}\".format(self.P3_size, self.P4_size, self.P5_size))\n        print(\"PAN output channel size: PP3 {}, PP4 {}, PP5 {}\".format(self.P3_size, self.channels_outs[2], self.channels_outs[3]))\n"}