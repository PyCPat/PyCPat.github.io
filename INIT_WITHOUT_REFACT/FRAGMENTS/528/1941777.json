{"BEFORE":"        roi_indices = torch.Tensor(roi_indices).float()\r\n        rois = torch.Tensor(rois).float()\r\n        if x.is_cuda:\r\n            roi_indices = roi_indices.cuda()\r\n            rois = rois.cuda()\r\n        indices_and_rois = torch.cat([roi_indices[:, None], rois], dim=1)\r\n        \r\n        xy_indices_and_rois = indices_and_rois[:, [0, 1, 2, 3, 4]]\r\n        indices_and_rois =  xy_indices_and_rois.contiguous()\r\n","AFTER":"    def forward(self, x, rois, roi_indices, img_size):\r\n        n, _, _, _ = x.shape\r\n        if x.is_cuda:\r\n            roi_indices = roi_indices.cuda()\r\n            rois = rois.cuda()\r\n\r\n        rois_feature_map = torch.zeros_like(rois)\r\n        rois_feature_map[:, [0,2]] = rois[:, [0,2]] \/ img_size[1] * x.size()[3]\r\n        rois_feature_map[:, [1,3]] = rois[:, [1,3]] \/ img_size[0] * x.size()[2]\r\n\r\n        indices_and_rois = torch.cat([roi_indices[:, None], rois_feature_map], dim=1)\r\n        #-----------------------------------#\r\n        #   利用建议框对公用特征层进行截取\r\n        #-----------------------------------#\r\n        pool = self.roi(x, indices_and_rois)\r\n        #-----------------------------------#\r\n        #   利用classifier网络进行特征提取\r\n        #-----------------------------------#\r\n        pool = pool.view(pool.size(0), -1)\r\n        # 当输入为一张图片的时候，这里获得的f7的shape为[300, 4096]\r\n        fc7 = self.classifier(pool)\r\n\r\n        roi_cls_locs = self.cls_loc(fc7)\r\n        roi_scores = self.score(fc7)\r\n\r\n        roi_cls_locs = roi_cls_locs.view(n, -1, roi_cls_locs.size(1))\r\n        roi_scores = roi_scores.view(n, -1, roi_scores.size(1))\r\n"}