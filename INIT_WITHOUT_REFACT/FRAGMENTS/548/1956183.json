{"BEFORE":"        proposals = self.mlp(features)\n        _, indices = torch.topk(proposals[..., -1:], k=self.cfg.PROPOSAL.TOPK, dim=1)\n        indices = indices.expand(-1, -1, proposals.shape[-1])\n        proposals = proposals.gather(1, indices)\n        return proposals[..., :-1], proposals[..., -1]\n","AFTER":"        proposals = self.mlp(features)\n        boxes, scores = self.reorganize_proposals(proposals)\n        scores = F.softmax(scores, dim=-1)\n        return boxes, scores\n"}