{"BEFORE":"        ramp = np.arange(self.cep_order + 1, dtype=default_dtype()) * half_fft_length\n        if self.cep_order == half_fft_length:\n            ramp[-1] *= 2\n        ramp[1:] = np.reciprocal(ramp[1:])\n        self.register_buffer(\"ramp\", torch.from_numpy(ramp))\n","AFTER":"        ramp = np.arange(self.cep_order + 1, dtype=np.float64) * half_fft_length\n        if self.cep_order == half_fft_length:\n            ramp[-1] *= 2\n        ramp[1:] = 1 \/ ramp[1:]\n"}