{"BEFORE":"            nn.Conv1d(in_channels, encoder_channels, 3, 1, 1),\n            ChannelNorm(encoder_channels),\n            nn.ReLU(True),\n            nn.Conv1d(encoder_channels, encoder_channels, 1),\n            ChannelNorm(encoder_channels),\n            nn.ReLU(True),\n            nn.Conv1d(encoder_channels, encoder_channels, 1),\n            ChannelNorm(encoder_channels),\n            nn.ReLU(True),\n            nn.Conv1d(encoder_channels, encoder_channels, 1),\n            ChannelNorm(encoder_channels),\n            nn.ReLU(True),\n            nn.Conv1d(encoder_channels, encoder_channels, 1),\n            ChannelNorm(encoder_channels),\n            nn.ReLU(True),\n            nn.Conv1d(encoder_channels, encoder_channels, 1),\n            ChannelNorm(encoder_channels),\n            nn.ReLU(True),\n            nn.Conv1d(encoder_channels, encoder_channels, 1),\n            ChannelNorm(encoder_channels),\n            nn.ReLU(True),\n            nn.Conv1d(encoder_channels, z_dim, 1),\n        )\n        self.codebook = VQEmbeddingEMA(2, 128, 128)\n","AFTER":"    def __init__(self, in_channels, channels, n_embeddings, z_dim, c_dim):\n        super(Encoder, self).__init__()\n        self.conv = nn.Conv1d(in_channels, channels, 4, 2, 1, bias=False)\n        self.encoder = nn.Sequential(\n            nn.LayerNorm(channels),\n            nn.ReLU(True),\n            nn.Linear(channels, channels, bias=False),\n            nn.LayerNorm(channels),\n            nn.ReLU(True),\n            nn.Linear(channels, channels, bias=False),\n            nn.LayerNorm(channels),\n            nn.ReLU(True),\n            nn.Linear(channels, channels, bias=False),\n            nn.LayerNorm(channels),\n            nn.ReLU(True),\n            nn.Linear(channels, channels, bias=False),\n            nn.LayerNorm(channels),\n            nn.ReLU(True),\n            nn.Linear(channels, z_dim),\n        )\n        self.codebook = VQEmbeddingEMA(n_embeddings, z_dim)\n"}