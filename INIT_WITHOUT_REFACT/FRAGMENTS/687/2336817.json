{"BEFORE":"        x = x.permute(0, 2, 1, 3, 4) # B x T x C x H x W -> B x C x T x H x W\r\n        x = self.patch_emb(x)\r\n        x = x.view(*x.shape[:3], -1).permute(0, 2, 3, 1) # -> B x T x (H x W) x C [I'll use this as a reference shape, so every function returns this shape]\r\n        x = self.attention(x)\r\n        return x\r\n","AFTER":"        image, video = x[:, 0], x[:, 1:]\r\n        video = video.permute(0, 2, 1, 3, 4)  # B x T x C x H x W -> B x C x T x H x W\r\n        image = self.image_patch_emb(image)\r\n        video = self.video_patch_emb(video)\r\n        video = torch.cat([image.unsqueeze(2), video], dim=2)\r\n        video = video.view(*video.shape[:3], -1).permute(0, 2, 3, 1)  # -> B x T x (H x W) x C [I'll use this as a reference shape, so every function returns this shape]\r\n        video = self.attention(video)\r\n        return video\r\n"}