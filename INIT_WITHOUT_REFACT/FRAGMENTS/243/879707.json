{"BEFORE":"        return drop_path(x, self.drop_prob, self.training)\n","AFTER":"        batch, drop_prob, device, dtype = x.shape[0], self.drop_prob, x.device, x.dtype\n\n        if drop_prob <= 0. or not self.training:\n            return x\n\n        keep_prob = 1 - self.drop_prob\n        shape = (batch, *((1,) * (x.ndim - 1)))\n\n        keep_mask = torch.zeros(shape, device = device).float().uniform_(0, 1) < keep_prob\n        output = x.div(keep_prob) * keep_mask.float()\n        return output\n"}