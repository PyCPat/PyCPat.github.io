{"BEFORE":"        x = input\n        stacked = []\n\n        stacked.append(input)\n\n        for idx in range(self.num_d3blocks):\n            if idx != 0:\n                x = torch.cat(stacked, dim=1)\n            x = self.net[idx](x)\n            stacked.append(x)\n        \n        output = torch.cat(stacked[1:], dim=1)\n","AFTER":"        stacked = []\n\n        x = self.band_split(input)\n\n        for idx, key in enumerate(self.bands[:-1]):\n            _x = self.net[key](x[idx])\n            stacked.append(_x)\n        \n        stacked = torch.cat(stacked, dim=2)\n        \n        key = self.bands[-1] # 'full'\n        x = self.net[key](input)\n        x = torch.cat([stacked, x], dim=1)\n        x = self.d2block(x)\n        output = self.gated_conv2d(x)\n"}