{"BEFORE":"            x = block(x)\n        x = self.suffix(x)\n        if not self.classification:\n            assert len(x.size()) == 3\n            # here x.shape = (bs, n_features, n_vertices)\n            x = x.permute(0, 2, 1)\n            # here x.shape = (bs,n_vertices, n_features)\n        else:\n            if not self.pretrained_classification:\n                for l in self.fc_layers:\n                    x = l(x)\n        return x\n","AFTER":"        if x.shape[3] != self.original_features_num:\n            print(\"expected input feature {} and got {}\".format(self.original_features_num,x.shape[3]))\n            return\n        x = x.permute(0, 3, 1, 2)\n        #expects x.shape = (bs, n_features, n_vertices, n_vertices)\n        for block in self.reg_blocks:\n            x = block(x)\n        # return (bs, n_vertices, n_vertices, n_features)\n        return x.permute(0,2,3,1)\n"}