{"BEFORE":"            adjacency_matrix = weights.reshape(n_u, n_v)\n\n            # Update parts U\n            encodings_u = self.u_update(torch.cat([\n                encodings_u,\n                torch.mm(adjacency_matrix, self.v_to_u(encodings_v))\n            ], 1))\n\n            # Updaet parts V\n            encodings_v = self.v_update(torch.cat([\n                encodings_v,\n                torch.mm(adjacency_matrix.t(), self.u_to_v(encodings_u))\n","AFTER":"            adjacency_matrix = weights.reshape(n_u, n_v)\n\n            # Update parts U\n            encodings_u = self.u_update(torch.cat([\n                encodings_u, self.v_to_u_norm(\n                    torch.mm(adjacency_matrix, self.v_to_u(encodings_v))\n                )\n            ], 1))\n\n            # Updaet parts V\n            encodings_v = self.v_update(torch.cat([\n                encodings_v, self.u_to_v_norm(torch.mm(\n                    adjacency_matrix.t(), self.u_to_v(encodings_u))\n                )\n"}