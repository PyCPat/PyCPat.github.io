{"BEFORE":"            dropout_kwargs = {\"p\": 0.5, \"inplace\": True}\n        if network_kwargs is None:\n            network_kwargs = {\"res\": False}\n\n        self.conv0 = conv(output_channels, output_channels, **conv_kwargs)\n        self.conv1 = conv(output_channels, output_channels, **conv_kwargs)\n\n        self.in_0 = (\n            norm(output_channels, **norm_kwargs) if norm is not None else nn.Identity()\n        )\n        self.in_1 = (\n            norm(output_channels, **norm_kwargs) if norm is not None else nn.Identity()\n        )\n\n        self.act = self.act(**act_kwargs)\n\n        self.dropout = self.dropout(**dropout_kwargs)\n","AFTER":"            dropout_kwargs = {\"p\": 0.5, \"inplace\": False}\n        if network_kwargs is None:\n            network_kwargs = {\"res\": False}\n\n        self.res = network_kwargs[\"res\"]\n\n        self.conv0 = conv(output_channels, output_channels, **conv_kwargs)\n        self.conv1 = conv(output_channels, output_channels, **conv_kwargs)\n\n        self.in_0 = norm(output_channels, **norm_kwargs)\n        self.in_1 = norm(output_channels, **norm_kwargs)\n"}