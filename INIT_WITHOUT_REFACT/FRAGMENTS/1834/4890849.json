{"BEFORE":"        self.input_shape = input_shape\n        self.input_value = torch.randn(_batch_size, *input_shape)\n        self.output_leaves = []\n        self._modules_added = []\n        self.root = FMGraphNode(self.input_value,\n                                functional_model=self)\n","AFTER":"        if isinstance(inputs, FMGraphNode):\n            inputs = (inputs,)\n        assert all(isinstance(x, FMGraphNode) for x in inputs)\n        self.inputs = inputs\n\n        if isinstance(outputs, FMGraphNode):\n            outputs = (outputs,)\n        assert all(isinstance(x, FMGraphNode) for x in outputs)\n        self.outputs = outputs\n\n        self._registered_modules = []\n        self._prune_unused_layers()\n        self._register_reachable_modules()\n"}