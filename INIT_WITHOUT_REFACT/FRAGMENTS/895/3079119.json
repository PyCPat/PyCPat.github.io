{"BEFORE":"        self.bn1 = norm_layer(planes)\n        self.relu = nn.ReLU(inplace=True)\n        self.conv2 = conv3x3(planes, planes)\n        self.bn2 = norm_layer(planes)\n","AFTER":"        has_bn = True,\n    ) -> None:\n        super(BasicBlock, self).__init__()\n        if norm_layer is None:\n            norm_layer = nn.BatchNorm2d\n        if groups != 1 or base_width != 64:\n            raise ValueError('BasicBlock only supports groups=1 and base_width=64')\n        if dilation > 1:\n            raise NotImplementedError(\"Dilation > 1 not supported in BasicBlock\")\n        self.conv1 = conv3x3(inplanes, planes, stride)\n        if has_bn:\n            self.bn2 = norm_layer(planes, track_running_stats=False)\n        else:\n            self.bn2 = nn.Identity()\n        self.relu = nn.ReLU(inplace=True)\n        self.conv2 = conv3x3(planes, planes)\n        if has_bn:\n            self.bn3 = norm_layer(planes, track_running_stats=False)\n        else:\n            self.bn3 = nn.Identity()\n        self.downsample = downsample\n"}