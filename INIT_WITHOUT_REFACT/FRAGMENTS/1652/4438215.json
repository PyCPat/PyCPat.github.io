{"BEFORE":"        param_shape = (1, num_features, 1, 1)\n        self.weight = nn.Parameter(torch.ones(param_shape), requires_grad=True)\n        self.bias = nn.Parameter(torch.zeros(param_shape), requires_grad=True)\n        if apply_act:\n            self.v = nn.Parameter(torch.ones(param_shape), requires_grad=True)\n        self.register_buffer('running_var', torch.ones(1, num_features, 1, 1))\n","AFTER":"        self.weight = nn.Parameter(torch.ones(num_features), requires_grad=True)\n        self.bias = nn.Parameter(torch.zeros(num_features), requires_grad=True)\n        self.v = nn.Parameter(torch.ones(num_features), requires_grad=True) if apply_act else None\n        self.register_buffer('running_var', torch.ones(num_features))\n"}