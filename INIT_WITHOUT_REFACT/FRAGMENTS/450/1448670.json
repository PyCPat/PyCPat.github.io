{"BEFORE":"        self._postProcess = nn.Sequential(\n            # ResidualBlock(channel, channel),\n            # # AttentionBlock(channel),\n            # ResidualBlockUpsample(channel, channel, 2),\n            ResidualBlock(channel, channel),\n            # AttentionBlock(channel),\n            ResidualBlockUpsample(channel, channel, 2),\n            ResidualBlock(channel, channel),\n            # AttentionBlock(channel),\n            ResidualBlockUpsample(channel, channel, 2),\n            ResidualBlock(channel, channel),\n            # AttentionBlock(channel),\n            subPixelConv3x3(channel, 3, 2),\n        )\n","AFTER":"    def __init__(self, channel, postProcessNum, scale):\n        super().__init__()\n        postProcess = []\n        for i in range(postProcessNum - 1):\n            postProcess += [ResidualBlock(channel, channel), ResidualBlockUpsample(channel, channel, 2)]\n        postProcess += [ResidualBlock(channel, channel), subPixelConv3x3(channel, 3, 2)]\n        self._postProcess = nn.Sequential(*postProcess)\n"}