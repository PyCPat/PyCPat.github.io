{"BEFORE":"        batch_size, device = image_embed.shape[0], image_embed.device\n        t = self.time_mlp(time) if exists(self.time_mlp) else None\n\n        cond_prob_mask = prob_mask_like(batch_size, cond_prob_drop, device = device)\n","AFTER":"        t = self.time_mlp(time)\n\n        cond_prob_mask = prob_mask_like((batch_size,), cond_prob_drop, device = device)\n\n        # mask out image embedding depending on condition dropout\n        # for classifier free guidance\n\n        image_embed = torch.where(\n            rearrange(cond_prob_mask, 'b -> b 1'),\n            image_embed,\n            rearrange(self.null_image_embed, 'd -> 1 d')\n        )\n\n        cond = torch.cat((t, image_embed), dim = -1)\n"}