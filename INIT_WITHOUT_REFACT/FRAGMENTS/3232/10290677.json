{"BEFORE":"        x = self.proj(x)\n        # x = self.act(x)\n        # x = self.bn(x)\n\n        x = self.transformer_encoder(x)\n        return x\n","AFTER":"        batch_size, time_steps, _ = x.size()\n        x = self.proj(x)\n        out = torch.zeros((batch_size, time_steps, self.hidden_dim))\n        for cur_time in range(time_steps):\n            cur_x = x[:, : cur_time + 1, :]\n            cur_x = self.transformer_encoder(cur_x)\n            out[:, cur_time, :] = torch.mean(cur_x, dim=1)\n        return out\n"}