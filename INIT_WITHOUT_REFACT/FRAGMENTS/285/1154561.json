{"BEFORE":"        assert is_in(self.out_format, [\"y\", \"E\", \"yE\", \"y,E\"])\n","AFTER":"        if out_format == 0 or out_format == \"y\":\n            self.format_func = lambda y, E: y\n        elif out_format == 1 or out_format == \"yE\":\n            self.format_func = lambda y, E: torch.cat((y, E), dim=-1)\n        elif out_format == 2 or out_format == \"y,E\":\n            self.format_func = lambda y, E: (y, E)\n        else:\n            raise ValueError(f\"out_format {out_format} is not supported\")\n\n        lower_bin_index = max(1, int(f_min \/ sample_rate * fft_length + 1.5))\n"}