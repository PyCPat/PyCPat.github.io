{"BEFORE":"        lms = inp[:, :-1, 2::self.ratio, 2::self.ratio]\n        pan = torch.unsqueeze(inp[:, -1, :, :], dim=1)\n\n        x = self.Conv2d_transpose(lms)\n        x = torch.cat((x, pan), dim=1)\n\n        x1 = F.relu(self.Conv(x))\n\n        x2 = F.relu(self.Conv_1(x1))\n        x3 = self.Conv_2(x2) + x1\n\n        x4 = F.relu(self.Conv_3(x3))\n        x5 = self.Conv_4(x4) + x3\n\n        x6 = F.relu(self.Conv_5(x5))\n        x7 = self.Conv_6(x6) + x5\n\n        x8 = F.relu(self.Conv_7(x7))\n        x9 = self.Conv_8(x8) + x7\n\n        x10 = self.Conv_9(x9)\n\n        return x10\n","AFTER":"        lms = inp[:, :-1, 2::self.ratio, 2::self.ratio]\n        pan = torch.unsqueeze(inp[:, -1, :, :], dim=1)\n\n        lms_hp = lms - self.dephtconv_ms(lms)\n        pan_hp = pan - self.dephtconv_pan(pan)\n\n        x = self.Conv2d_transpose(lms_hp)\n        net_inp = torch.cat((x, pan_hp), dim=1)\n\n        x1 = F.relu(self.Conv(net_inp))\n\n        x2 = F.relu(self.Conv_1(x1))\n        x3 = self.Conv_2(x2) + x1\n\n        x4 = F.relu(self.Conv_3(x3))\n        x5 = self.Conv_4(x4) + x3\n\n        x6 = F.relu(self.Conv_5(x5))\n        x7 = self.Conv_6(x6) + x5\n\n        x8 = F.relu(self.Conv_7(x7))\n        x9 = self.Conv_8(x8) + x7\n\n        x10 = self.Conv_9(x9)\n\n        x11 = inp[:, :-1, :, :] + x10\n\n        return x11\n"}