{"BEFORE":"                Residual(PreNorm(dim, Attention(dim, dim_head = dim_head, heads = heads))),\n                Residual(PreNorm(dim, FeedForward(dim)))\n","AFTER":"    def __init__(self, dim, depth, dim_head = 64, heads = 8, use_scalenorm = False, ff_glu = False):\n        super().__init__()\n        self.dim = dim\n        self.layers = nn.ModuleList([])\n        norm_class = ScaleNorm if use_scalenorm else nn.LayerNorm\n        prenorm_fn = partial(PreNorm, dim, norm_class = norm_class)\n\n        for _ in range(depth):\n            self.layers.append(nn.ModuleList([\n                prenorm_fn(Attention(dim, dim_head = dim_head, heads = heads)),\n"}