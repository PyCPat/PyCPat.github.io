{"BEFORE":"        window = make_window(seed)\n        H, L = window.shape\n        T = max(L, kernel_size)\n        W = np.zeros((T * H, T), dtype=window.dtype)\n        W[:H, : (L + 1) \/\/ 2] = window[:, (L - 1) \/\/ 2 :]\n        W[-H:, -(L + 1) \/\/ 2 :] = window[:, : -(L - 1) \/\/ 2]\n        for t in range(1, T - 1):\n            W[H * t : H * t + H, t - 1 : t - 1 + L] = window\n\n        WS = W.T  # Assume unit variance.\n","AFTER":"        window = make_window(seed)\n        H, L = window.shape\n        L1 = (L - 1) \/\/ 2\n        T = max(L, kernel_size)\n        W = np.zeros((T * H, T), dtype=window.dtype)\n        for t in range(T):\n            hs = H * t\n            he = hs + H\n            ts = t - L1\n            te = ts + L\n            W[hs:he, max(0, ts) : min(T, te)] = window[:, max(0, -ts) : min(L, T - ts)]\n\n        WS = W.T  # Assume unit variance.\n"}