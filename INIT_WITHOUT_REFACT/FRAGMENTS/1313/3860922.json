{"BEFORE":"        pass\n","AFTER":"        img = first_image(x)\n        # This size determines a valid cropping region\n        common_size = self.gcd_size(x)\n        common_crop_size = self.get_common_crop_size(img.size, common_size)\n        if common_crop_size[0] > common_size[0] or common_crop_size[1] > common_size[1]:\n            raise ValueError(f\"Crop size {self.size} is too large for {img.size}\")\n        w, h = common_size\n        tw, th = common_crop_size\n        i = torch.randint(0, h - th + 1, size=(1, )).item()\n        j = torch.randint(0, w - tw + 1, size=(1, )).item()\n        common_crop_region = (i, j, th, tw)\n        return apply_all(x, lambda y: self.apply_crop(y, common_size, common_crop_region))\n"}