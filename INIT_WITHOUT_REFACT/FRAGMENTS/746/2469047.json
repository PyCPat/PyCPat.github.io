{"BEFORE":"        self,\n        dim,\n        *,\n        image_embed_dim,\n        out_dim = None,\n        dim_mults=(1, 2, 4, 8),\n        channels = 3,\n        with_time_emb = True\n    ):\n        super().__init__()\n        self.channels = channels\n\n        dims = [channels, *map(lambda m: dim * m, dim_mults)]\n        in_out = list(zip(dims[:-1], dims[1:]))\n\n        if with_time_emb:\n            time_dim = dim\n            self.time_mlp = nn.Sequential(\n                SinusoidalPosEmb(dim),\n                nn.Linear(dim, dim * 4),\n                nn.GELU(),\n                nn.Linear(dim * 4, dim)\n            )\n        else:\n            time_dim = None\n            self.time_mlp = None\n\n        self.downs = nn.ModuleList([])\n","AFTER":"        time_dim = default(time_dim, dim)\n\n        self.time_mlp = nn.Sequential(\n            SinusoidalPosEmb(dim),\n            nn.Linear(dim, dim * 4),\n            nn.GELU(),\n            nn.Linear(dim * 4, dim)\n        )\n\n        self.null_image_embed = nn.Parameter(torch.randn(image_embed_dim))\n\n        cond_dim = time_dim + image_embed_dim\n"}