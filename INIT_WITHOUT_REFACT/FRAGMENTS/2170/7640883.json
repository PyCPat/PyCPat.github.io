{"BEFORE":"    def forward(self, x, c, c_):\n        c_onehot = torch.cat((c, c_), dim=1).to(self.device)\n        width_size = x.size(3)\n\n        x = self.conv_layer_1(x)\n\n        x = self.down_sample_1(x)\n        x = self.down_sample_2(x)\n\n        x = x.contiguous().view(-1, 2304, width_size \/\/ 4)\n        x = self.down_conversion(x)\n\n        x = self.residual_1(x, c_onehot)\n        x = self.residual_2(x, c_onehot)\n        x = self.residual_1(x, c_onehot)\n        x = self.residual_1(x, c_onehot)\n        x = self.residual_1(x, c_onehot)\n        x = self.residual_1(x, c_onehot)\n        x = self.residual_1(x, c_onehot)\n        x = self.residual_1(x, c_onehot)\n        x = self.residual_1(x, c_onehot)\n\n        x = self.up_conversion(x)\n        x = x.view(-1, 256, 9, width_size \/\/ 4)\n\n        x = self.up_sample_1(x)\n        x = self.up_sample_2(x)\n        \n        x = self.conv_1(x)\n        outputs_reshaped = x[:, :, : -1, :]\n        print(outputs_reshaped.shape)\n\n        return outputs_reshaped\n","AFTER":"        x = self.up_sample_2(x)\n        \n        out = self.out(x)\n        return out\n"}