{"BEFORE":"        self.num_unique_categories = sum(categories)\n\n        # for automatically offsetting unique category ids to the correct position in the categories embedding table\n\n        categories_offset = F.pad(torch.tensor(list(categories)), (1, 0), value = 0).cumsum(dim = -1)[:-1]\n        self.register_buffer('categories_offset', categories_offset)\n\n        self.categorical_embeds = nn.Embedding(self.num_unique_categories, dim)\n","AFTER":"        self.num_unique_categories = sum(categories)\n\n        # create category embeddings table\n\n        self.num_special_tokens = num_special_tokens\n        total_tokens = self.num_unique_categories + num_special_tokens\n\n        self.categorical_embeds = nn.Embedding(total_tokens, dim)\n\n        # for automatically offsetting unique category ids to the correct position in the categories embedding table\n\n        categories_offset = F.pad(torch.tensor(list(categories)), (1, 0), value = num_special_tokens)\n        categories_offset = categories_offset.cumsum(dim = -1)[:-1]\n"}