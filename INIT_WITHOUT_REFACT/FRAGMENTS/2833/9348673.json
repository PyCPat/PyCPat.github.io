{"BEFORE":"        x = torch.cat((x, self.mem_kv.expand(b, m, e)), dim=1)\n","AFTER":"    def forward(self, x, keys = None):\n        device = x.device\n        b, t, e, h, m = *x.shape, self.heads, self.num_mem_kv\n\n        mem = self.mem_kv.expand(b, m, e)\n        keys = default(keys, torch.empty(b, 0, e, device=device))\n\n        kv_len = t + m + keys.shape[1]\n        assert kv_len % self.bucket_size == 0, f'Sequence length needs to be divisible by target bucket size - {self.bucket_size}'\n\n        x = torch.cat((x, mem, keys), dim=1)\n"}