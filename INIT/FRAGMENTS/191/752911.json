{"BEFORE":"        self.layers = nn.Sequential()\n        for index, output_size in enumerate(output_sizes):\n            # self.layers.add_module(\"linear_%d\" % index, LazyLinear(output_size))\n            self.layers.add_module(\"linear_%d\" % index, nn.LazyLinear(output_size))\n        # self.layers.add_module(\"relu\", nn.ReLU6())\n\n    def forward(self, input):\n","AFTER":"        num_layers = len(output_sizes)\n        self._layers_ordered_dict = OrderedDict()\n        for index, output_size in enumerate(output_sizes):\n            self._layers_ordered_dict[\"linear_\" + str(index)] = nn.LazyLinear(output_size)\n            # self.layers.add_module(\"linear_%d\" % index, LazyLinear(output_size))\n            if index < (num_layers - 1):\n                self._layers_ordered_dict[\"relu_\" + str(index)] = nn.ReLU()\n        self.layers = nn.Sequential(self._layers_ordered_dict)\n"}