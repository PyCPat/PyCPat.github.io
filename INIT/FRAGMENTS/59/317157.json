{"BEFORE":"        self.dropout = nn.Dropout(p=dropout_rate)\n        self.context = context\n        self.mix_base = mix_base\n        if len(layers)>0 and layers[0]==0:\n            layers = ()\n\n        n = n_in * context\n        n += n_in_base * mix_base\n\n        linears = []\n        for m in layers:\n            linears.append(nn.Linear(n, m))\n            n = m\n        linears.append(nn.Linear(n, n_out))\n        self.fc = nn.ModuleList(linears)\n","AFTER":"        n = n_in * context\n        n += n_in_base * mix_base\n\n        l = []\n        for m in layers:\n            l += [\n                nn.Linear(n, m), \n                nn.LayerNorm(m),\n                nn.ELU(), \n                nn.Dropout(p=dropout_rate)]\n            n = m\n        l += [ nn.Linear(n, n_out) ] # , nn.LayerNorm(n_out) ]\n        self.net = nn.Sequential(*l)\n"}