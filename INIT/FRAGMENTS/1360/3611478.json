{"BEFORE":"        self.blocks = []\n\n        # Calculating the number of channels for each resolution\n        self.map_channels = Generate_map_channels(res, last_res, max_channels)\n\n        # Creating blocks\n        to_res = res \/\/ 2\n        while to_res >= last_res:\n            cur_res = 2 * to_res\n            in_channels = self.map_channels[cur_res]\n            out_channels = self.map_channels[to_res]\n            self.blocks.append(BlockD(cur_res, cur_res, in_channels, out_channels))\n            self.blocks.append(BlockD(cur_res, to_res, out_channels, out_channels))\n","AFTER":"        self.blocks = OrderedDict()\n\n        # Calculating the number of channels for each resolution\n        self.map_channels = Generate_map_channels(res, last_res, max_channels)\n\n        # Creating blocks\n        to_res = res \/\/ 2\n        while to_res >= last_res:\n            cur_res = 2 * to_res\n            in_channels = self.map_channels[cur_res]\n            out_channels = self.map_channels[to_res]\n            self.blocks[f'res {cur_res}'] = BlockD(cur_res, to_res, in_channels, out_channels)\n"}