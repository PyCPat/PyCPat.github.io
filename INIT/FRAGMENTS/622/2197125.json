{"BEFORE":"        assert norm_first, \"norm_first should be True.\"\n\n        self.linear1 = nn.Linear(num_features, hidden_channels)\n        self.activation = choose_nonlinear(activation)\n        self.dropout1 = nn.Dropout(dropout)\n        self.linear2 = nn.Linear(hidden_channels, num_features)\n        self.dropout2 = nn.Dropout(dropout)\n        self.layer_norm = nn.LayerNorm(num_features)\n\n        self.norm_first = norm_first\n","AFTER":"    def __init__(self, num_features, num_patches, hidden_channels, dropout=0, activation=\"gelu\", norm_first=True):\n        super().__init__()\n\n        self.layer_norm = nn.LayerNorm(num_features)\n        self.mlp = MLP(num_patches, hidden_channels, dropout=dropout, activation=activation, norm_first=norm_first)\n"}