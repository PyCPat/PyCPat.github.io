{"BEFORE":"        self.agents = agents\n        self.frame_history = frame_history\n        self.device = torch.device(\n            \"cuda\" if torch.cuda.is_available() else \"cpu\")\n\n        self.conv0 = nn.Conv3d(\n            in_channels=frame_history,\n            out_channels=32,\n            kernel_size=(5, 5, 5),\n            padding=1).to(\n            self.device)\n        self.maxpool0 = nn.MaxPool3d(kernel_size=(2, 2, 2)).to(self.device)\n        self.prelu0 = nn.PReLU().to(self.device)\n        self.conv1 = nn.Conv3d(\n            in_channels=32,\n            out_channels=32,\n            kernel_size=(5, 5, 5),\n            padding=1).to(\n            self.device)\n        self.maxpool1 = nn.MaxPool3d(kernel_size=(2, 2, 2)).to(self.device)\n        self.prelu1 = nn.PReLU().to(self.device)\n        self.conv2 = nn.Conv3d(\n            in_channels=32,\n            out_channels=64,\n            kernel_size=(4, 4, 4),\n            padding=1).to(\n            self.device)\n        self.maxpool2 = nn.MaxPool3d(kernel_size=(2, 2, 2)).to(self.device)\n        self.prelu2 = nn.PReLU().to(self.device)\n        self.conv3 = nn.Conv3d(\n            in_channels=64,\n            out_channels=64,\n            kernel_size=(3, 3, 3),\n            padding=0).to(\n            self.device)\n        self.prelu3 = nn.PReLU().to(self.device)\n\n        self.fc1 = nn.ModuleList(\n            [nn.Linear(\n                in_features=512 * 2,\n                out_features=256).to(\n                self.device) for _ in range(\n                self.agents)])\n        self.prelu4 = nn.ModuleList(\n            [nn.PReLU().to(self.device) for _ in range(self.agents)])\n        self.fc2 = nn.ModuleList(\n            [nn.Linear(\n                in_features=256 * 2,\n                out_features=128).to(\n                self.device) for _ in range(\n                self.agents)])\n        self.prelu5 = nn.ModuleList(\n            [nn.PReLU().to(self.device) for _ in range(self.agents)])\n","AFTER":"        self.device = torch.device(\n            \"cuda\" if torch.cuda.is_available() else \"cpu\")\n\n        self.conv0 = nn.Conv3d(\n            in_channels=frame_history,\n            out_channels=32,\n            kernel_size=(5, 5, 5),\n            padding=1).to(\n            self.device)\n        self.maxpool0 = nn.MaxPool3d(kernel_size=(2, 2, 2)).to(self.device)\n        self.prelu0 = nn.PReLU().to(self.device)\n        self.conv1 = nn.Conv3d(\n            in_channels=32,\n            out_channels=32,\n            kernel_size=(5, 5, 5),\n            padding=1).to(\n            self.device)\n        self.maxpool1 = nn.MaxPool3d(kernel_size=(2, 2, 2)).to(self.device)\n        self.prelu1 = nn.PReLU().to(self.device)\n        self.conv2 = nn.Conv3d(\n            in_channels=32,\n            out_channels=64,\n            kernel_size=(4, 4, 4),\n            padding=1).to(\n            self.device)\n        self.maxpool2 = nn.MaxPool3d(kernel_size=(2, 2, 2)).to(self.device)\n        self.prelu2 = nn.PReLU().to(self.device)\n        self.conv3 = nn.Conv3d(\n            in_channels=64,\n            out_channels=64,\n            kernel_size=(3, 3, 3),\n            padding=0).to(\n            self.device)\n        self.prelu3 = nn.PReLU().to(self.device)\n\n        self.fc1 = nn.ModuleList(\n            [nn.Linear(\n                in_features=512 * 2,\n                out_features=256).to(\n                self.device) for _ in range(\n                self.agents)])\n        self.prelu4 = nn.PReLU().to(self.device)\n        self.fc2 = nn.ModuleList(\n            [nn.Linear(\n                in_features=256 * 2,\n                out_features=128).to(\n                self.device) for _ in range(\n                self.agents)])\n        self.prelu5 = nn.PReLU().to(self.device)\n"}