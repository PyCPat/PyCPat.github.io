{"BEFORE":"\tdef __init__(self, content_dim, n_adain_layers, adain_dim, img_shape):\n\t\tsuper().__init__()\n\n\t\tself.__initial_height = img_shape[0] \/\/ (2 ** n_adain_layers)\n\t\tself.__initial_width = img_shape[1] \/\/ (2 ** n_adain_layers)\n\t\tself.__adain_dim = adain_dim\n\n\t\tself.fc_layers = nn.Sequential(\n\t\t\tnn.Linear(\n\t\t\t\tin_features=content_dim,\n\t\t\t\tout_features=self.__initial_height * self.__initial_width * (adain_dim \/\/ 8)\n\t\t\t),\n\n\t\t\tnn.LeakyReLU(),\n\n\t\t\tnn.Linear(\n\t\t\t\tin_features=self.__initial_height * self.__initial_width * (adain_dim \/\/ 8),\n\t\t\t\tout_features=self.__initial_height * self.__initial_width * (adain_dim \/\/ 4)\n\t\t\t),\n\n\t\t\tnn.LeakyReLU(),\n\n\t\t\tnn.Linear(\n\t\t\t\tin_features=self.__initial_height * self.__initial_width * (adain_dim \/\/ 4),\n\t\t\t\tout_features=self.__initial_height * self.__initial_width * adain_dim\n\t\t\t),\n\n\t\t\tnn.LeakyReLU()\n\t\t)\n\n\t\tself.adain_conv_layers = nn.ModuleList()\n\t\tfor i in range(n_adain_layers):\n\t\t\tself.adain_conv_layers += [\n\t\t\t\tnn.Upsample(scale_factor=(2, 2)),\n\t\t\t\tnn.Conv2d(in_channels=adain_dim, out_channels=adain_dim, padding=1, kernel_size=3),\n\t\t\t\tnn.LeakyReLU(),\n\t\t\t\tAdaptiveInstanceNorm2d(adain_layer_idx=i)\n\t\t\t]\n\n\t\tself.adain_conv_layers = nn.Sequential(*self.adain_conv_layers)\n\n\t\tself.last_conv_layers = nn.Sequential(\n\t\t\tnn.Conv2d(in_channels=adain_dim, out_channels=64, padding=2, kernel_size=5),\n\t\t\tnn.LeakyReLU(),\n\n\t\t\tnn.Conv2d(in_channels=64, out_channels=img_shape[2], padding=3, kernel_size=7),\n\t\t\tnn.Sigmoid()\n\t\t)\n","AFTER":"\tdef __init__(self, config):\n\t\tsuper().__init__()\n\n\t\tself.config = config\n\n\t\tself.content_embedding = nn.Embedding(config['n_imgs'], config['content_dim'], config['content_std'])\n\t\tself.class_embedding = nn.Embedding(config['n_classes'], config['class_dim'])\n\t\tself.modulation = Modulation(config['class_dim'], config['n_adain_layers'], config['adain_dim'])\n\t\tself.decoder = Decoder(config['content_dim'], config['n_adain_layers'], config['adain_dim'], config['img_shape'])\n"}