{"BEFORE":"    def __init__(self) -> None:\n        super(ResNet, self).__init__()\n        self.backbone = resnet.resnet18()\n","AFTER":"    def __init__(self, block, num_block, num_classes=100):\n        super().__init__()\n\n        self.in_channels = 64\n\n        self.conv1 = nn.Sequential(\n            nn.Conv2d(3, 64, kernel_size=3, padding=1, bias=False),\n            nn.BatchNorm2d(64),\n            nn.ReLU(inplace=True))\n        #we use a different inputsize than the original paper\n        #so conv2_x's stride is 1\n        self.conv2_x = self._make_layer(block, 64, num_block[0], 1)\n        self.conv3_x = self._make_layer(block, 128, num_block[1], 2)\n        self.conv4_x = self._make_layer(block, 256, num_block[2], 2)\n        self.conv5_x = self._make_layer(block, 512, num_block[3], 2)\n        self.avg_pool = nn.AdaptiveAvgPool2d((1, 1))\n        self.fc = nn.Linear(512 * block.expansion, num_classes)\n"}