{"BEFORE":"        enc_kwargs['dim'] = dim\n        dec_kwargs['dim'] = dim\n        dec_kwargs['cross_attend'] = True\n\n        enc_num_tokens = enc_kwargs.pop('num_tokens')\n        dec_num_tokens = dec_kwargs.pop('num_tokens')\n\n        enc_max_seq_len = enc_kwargs.pop('max_seq_len')\n        dec_max_seq_len = dec_kwargs.pop('max_seq_len')\n\n        self.encoder = TransformerWrapper(\n            num_tokens = enc_num_tokens,\n            max_seq_len = enc_max_seq_len,\n            attn_layers = Encoder(**enc_kwargs)\n        )\n\n        self.decoder = TransformerWrapper(\n            num_tokens = dec_num_tokens,\n            max_seq_len = dec_max_seq_len,\n            attn_layers = Decoder(**dec_kwargs)\n        )\n","AFTER":"        enc_transformer_kwargs = pick_and_pop(['num_tokens', 'max_seq_len'], enc_kwargs)\n        dec_transformer_kwargs = pick_and_pop(['num_tokens', 'max_seq_len'], dec_kwargs)\n\n        self.encoder = TransformerWrapper(\n            **enc_transformer_kwargs,\n            attn_layers = Encoder(dim = dim, **enc_kwargs)\n        )\n\n        self.decoder = TransformerWrapper(\n            **dec_transformer_kwargs,\n            attn_layers = Decoder(dim = dim, cross_attend = True, **dec_kwargs)\n        )\n"}