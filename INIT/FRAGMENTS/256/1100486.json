{"BEFORE":"    def __init__(self, num_anchors, num_classes):\r\n        super(yolo, self).__init__()\r\n        self.num_classes = num_classes\r\n        self.num_anchors = num_anchors\r\n        #  backbone\r\n        model_url = 'https:\/\/raw.githubusercontent.com\/d-li14\/mobilenetv2.pytorch\/master\/pretrained\/mobilenetv2-c5e733a8.pth'\r\n        self.backbone = mobilenetv2(model_url)\r\n\r\n        self.conv_for_P5 = BasicConv(1280,512,1)\r\n        #print(num_anchors * (5 + num_classes))\r\n        self.yolo_headP5 = yolo_head([1024, num_anchors * (5 + num_classes)],512)\r\n        self.conv1_for_P4 = BasicConv(96,96,3)\r\n        self.conv2_for_P4 = BasicConv(96,256,1)\r\n        self.upsample = Upsample(512,256)\r\n        self.yolo_headP4 = yolo_head([512, num_anchors * (5 + num_classes)],256)\r\n\r\n        self.yolo_losses = []\r\n        for i in range(2):\r\n            self.yolo_losses.append(YOLOLoss(config[\"yolo\"][\"anchors\"],config[\"yolo\"][\"mask\"][i] \\\r\n                ,20,[config[\"img_w\"],config[\"img_h\"]],config[\"iou_thres\"][i],config[\"noobj_scale\"][i],config[\"nocls_scale\"][i]).to(device))\r\n        self.yolo_detection = []\r\n        for i in range(2):\r\n            self.yolo_detection.append(YOLO_Detection(config[\"yolo\"][\"anchors\"],config[\"yolo\"][\"mask\"][i] \\\r\n                ,20,[config[\"img_w\"],config[\"img_h\"]],config[\"iou_thres\"][i]).to(device)) \r\n","AFTER":"        self.num_classes = config[\"yolo\"][\"num_classes\"]\r\n        self.num_anchors = config[\"yolo\"][\"num_anchors\"]\r\n        #  backbone\r\n        model_url = 'https:\/\/raw.githubusercontent.com\/d-li14\/mobilenetv2.pytorch\/master\/pretrained\/mobilenetv2-c5e733a8.pth'\r\n        self.backbone = mobilenetv2(model_url)\r\n\r\n        self.conv_for_S32 = BasicConv(1280,512,1)\r\n        #print(num_anchors * (5 + num_classes))\r\n        self.connect_for_S32 = Connect(512)\r\n        self.yolo_headS32 = yolo_head([1024, self.num_anchors * (5 + self.num_classes)],512)\r\n        \r\n        \r\n        self.upsample = Upsample(512,256)\r\n        self.conv_for_S16 = DepwiseConvolution(96,256)\r\n        self.connect_for_S16 = Connect(256)\r\n        self.yolo_headS16 = yolo_head([512, self.num_anchors * (5 + self.num_classes)],256)\r\n\r\n        self.yolo_losses = []\r\n        for i in range(2):\r\n            self.yolo_losses.append(YOLOLoss(config[\"yolo\"][\"anchors\"],config[\"yolo\"][\"mask\"][i] \\\r\n                ,self.num_classes,[config[\"img_w\"],config[\"img_h\"]],config[\"yolo\"][\"iou_thres\"][i]))\r\n"}