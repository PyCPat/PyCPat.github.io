{"BEFORE":"    def __init__(self, layout: List[int], in_channels: int = 64) -> None:\n        super().__init__()\n        _decoder_layers = [\n            self.decoder_block(out_chan, in_chan) for in_chan, out_chan in zip([in_channels] + layout[:-1], layout)\n","AFTER":"    def __init__(self, layer_shapes: List[Tuple[int, int, int]]) -> None:\n        super().__init__()\n        strides = [\n            1 if (in_shape[-1] == out_shape[-1]) else 2\n            for in_shape, out_shape in zip(layer_shapes[:-1], layer_shapes[1:])\n        ]\n\n        chans = [shape[0] for shape in layer_shapes]\n\n        _decoder_layers = [\n            self.decoder_block(ochan, ichan, stride) for ichan, ochan, stride in zip(chans[:-1], chans[1:], strides)\n"}