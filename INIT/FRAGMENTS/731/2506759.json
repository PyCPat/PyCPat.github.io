{"BEFORE":"        if mask_method == \"random\":\n            print(\"do random masking\")\n            self.masking_handle = self.more_random_masking\n        elif mask_method == \"complement\":\n            print(\"do complement masking\")\n            self.masking_handle = self.more_complement_masking\n        else:\n            raise NotImplementedError(mask_method) \n\n        self.initialize_weights()\n","AFTER":"        self.time_stamp = time_stamp\n        # temporal embeddings\n        self.temp_embed = nn.Parameter(torch.zeros(1, self.time_stamp, embed_dim)) # learnable temporal embeddings for 2 time stamp\n        self.decoder_temp_embed = nn.Parameter(torch.zeros(1, self.time_stamp, 1, decoder_embed_dim)) # learnable temporal embeddings for 2 time stamp\n"}