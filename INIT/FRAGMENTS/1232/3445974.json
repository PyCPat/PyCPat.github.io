{"BEFORE":"    def __init__(self, input_size: int, attention_size: int) -> None:\n        super().__init__()\n        self.weight = nn.Parameter(torch.ones((attention_size, input_size)), True)\n        nn.init.kaiming_uniform_(self.weight, a=math.sqrt(5))\n","AFTER":"    def __init__(self) -> None:\n        super().__init__()\n        self.weights = torch.nn.ParameterList(\n            [\n                torch.nn.Parameter(weight)\n                for weight in torch.Tensor(100, 300).split([100, 200], dim=1)\n            ]\n        )\n"}