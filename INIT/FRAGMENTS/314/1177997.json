{"BEFORE":"        self._submodules_ordered_dict = OrderedDict()\n        for index in range(message_passing_steps):\n            self._submodules_ordered_dict[str(index)] = GraphNetBlock(model_fn=make_mlp, output_size=output_size,\n                                                                      message_passing_aggregator=message_passing_aggregator,\n                                                                      attention=attention)\n        self.submodules = nn.Sequential(self._submodules_ordered_dict)\n","AFTER":"                 stochastic_message_passing_used=False):\n        super().__init__()\n        self.stochastic_message_passing_used = stochastic_message_passing_used\n        self.graphnet_blocks = nn.ModuleList()\n        for index in range(message_passing_steps):\n            self.graphnet_blocks.append(GraphNetBlock(model_fn=make_mlp, output_size=output_size,\n                                                      message_passing_aggregator=message_passing_aggregator,\n                                                      attention=attention))\n"}