{"BEFORE":"        model = torchvision.models.alexnet(pretrained=True)\n\n        # Split the AlexeNet into two parts: Conv + FC\n        self.models = []  # [ConvBlocks, FC]\n\n        layer_list = list(model.children())\n        # Convblocks\n        model.features[0] = nn.Conv2d(\n            3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n        model.classifier[6] = nn.Linear(4096, num_class)\n        self.models.append(layer_list[0][:11])\n\n        # FC\n        self.models.append(\n            nn.Sequential(layer_list[0][11:],\n                          layer_list[1],\n                          nn.Flatten(start_dim=1),\n                          layer_list[2],\n                          )\n        )\n","AFTER":"        model = torchvision.models.alexnet(pretrained=True)\n\n        # Split the AlexeNet into two parts: Conv + FC\n        self.models = []  # [ConvBlocks, FC]\n\n        # Convblocks\n        model.features[0] = nn.Conv2d(\n            3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n        self.models.append(nn.Sequential(*list(model.children())[:-1]))\n\n        # FC\n        self.models.append(list(model.children())[-1])\n        self.models[1][6] = nn.Linear(4096, num_class)\n"}