{"BEFORE":"    def __init__(self, state_size, action_size, seed=np.random.random()):\n        super(QNetwork, self).__init__()\n\n        hl: int = 256\n        self.fc1 = nn.Linear(state_size, hl)\n        self.fc2 = nn.Linear(hl, action_size)\n","AFTER":"    def __init__(self, state_size, action_size, hidden_layer: Sequence[int]):\n        super(QNetwork, self).__init__()\n\n        layers_conn = [state_size] + list(hidden_layer) + [action_size]\n        layers = [nn.Linear(layers_conn[idx], layers_conn[idx+1]) for idx in range(len(layers_conn)-1)]\n        self.layers = nn.ModuleList(layers) \n\n        self.gate = F.relu\n"}