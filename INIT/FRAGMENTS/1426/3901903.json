{"BEFORE":"        self.W = nn.Parameter(default_init(scale=init_scale)(\n            (in_dim, num_units)), requires_grad=True)\n        self.b = nn.Parameter(torch.zeros(num_units), requires_grad=True)\n","AFTER":"    def __init__(self, dim, dim_out, groups=32, dropout=0):\n        super().__init__()\n        self.block = nn.Sequential(\n            nn.GroupNorm(groups, dim),\n            Swish(),\n            nn.Dropout(dropout) if dropout != 0 else nn.Identity(),\n            nn.Conv2d(dim, dim_out, 3, padding=1)\n        )\n"}