{"BEFORE":"        self.fc1 = nn.Linear(observation_shape[0], 256)\n        self.fc2 = nn.Linear(256, 256)\n\n        if use_batch_norm:\n            self.bn1 = nn.BatchNorm1d(256)\n            self.bn2 = nn.BatchNorm1d(256)\n\n    def forward(self, x):\n","AFTER":"                 hidden_units=None,\n                 use_batch_norm=True):\n        super().__init__()\n\n        if hidden_units is None:\n            hidden_units = [256, 256]\n\n        self.use_batch_norm = use_batch_norm\n        self.feature_size = hidden_units[-1]\n\n        in_units = [observation_shape[0]] + hidden_units[:-1]\n        self.fcs = nn.ModuleList()\n        self.bns = nn.ModuleList()\n        for in_unit, out_unit in zip(in_units, hidden_units):\n            self.fcs.append(nn.Linear(in_unit, out_unit))\n            if use_batch_norm:\n                self.bns.append(nn.BatchNorm1d(out_unit))\n\n    def forward(self, x):\n"}