{"BEFORE":"        if upscale_factor == 2:\n            stride = 2\n            padding = 2\n            kernel = 6\n        elif upscale_factor == 3:\n            stride = 3\n            padding = 2\n            kernel = 7\n        elif upscale_factor == 4:\n            stride = 4\n            padding = 2\n            kernel = 8\n        elif upscale_factor == 8:\n            stride = 8\n            padding = 2\n            kernel = 12\n\n        self.upscale_factor = upscale_factor \n       \n        # extract features\n        self.conv1 = nn.Sequential(\n            nn.Conv2d(in_channels, 64, 3, 1, 1),\n            nn.LeakyReLU(0.05)\n        )\n        self.conv2 = nn.Sequential(\n            nn.Conv2d(64, 64, 3, 1, 1),\n            nn.LeakyReLU(0.05)\n        )\n\n    \n        # DBlock\n        self.D = nn.Sequential(\n            D(),\n            D(),\n            D(),\n            D(),\n        )\n\n        # Reconstruct\n        self.upsample = nn.ConvTranspose2d(num_fea, out_channels, kernel, stride, padding) \n","AFTER":"        self.upsample = nn.Sequential(\n            nn.Conv2d(64, 64, 3, 1, 1),\n            nn.Conv2d(64, out_channels * (upscale_factor ** 2), 3, 1, 1),\n            nn.PixelShuffle(upscale_factor)\n\n        )\n"}