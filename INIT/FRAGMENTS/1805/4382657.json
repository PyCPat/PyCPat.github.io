{"BEFORE":"                BinarizeConv2d(in_planes, self.expansion*planes, kernel_size=1, stride=stride, bias=False),\n                nn.BatchNorm2d(self.expansion*planes)\n","AFTER":"        pad = 0 if planes == self.expansion*in_planes else planes \/\/ 4\n        if stride != 1 or in_planes != self.expansion*planes:\n            self.shortcut = nn.Sequential(\n                        nn.AvgPool2d((2,2)), \n                        LambdaLayer(lambda x:\n                        F.pad(x, (0, 0, 0, 0, pad, pad), \"constant\", 0)))\n"}