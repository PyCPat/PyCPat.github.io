{"BEFORE":"        assert (\n            joint == \"sum\" or joint == \"concat\"\n        ), \"fusion must be one of ('sum','concat')\"\n        assert nonlinearity == \"tanh\" or nonlinearity == \"tanh\"\n        super().__init__()\n        self.joint_network = joint_network\n        self.joint = joint\n        self.nonlinearity = nonlinearity\n","AFTER":"        if nonlinearity == \"tanh\":\n            self.nonlinearity = torch.tanh\n        elif nonlinearity == \"relu\":\n            self.nonlinearity = torch.nn.ReLU()\n        elif nonlinearity == \"leakyrelu\":\n            self.nonlinearity = torch.nn.LeakyReLU()\n\n    def init_params(self, first_input):\n"}