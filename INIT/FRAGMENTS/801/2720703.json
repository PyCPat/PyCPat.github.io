{"BEFORE":"        coord_x = (torch.arange(height).float() - height \/ 2) \/ height\n        coord_x = coord_x.view(1, 1, height, 1).expand(1, 1, height, width)\n        coord_y = (torch.arange(width).float() - width \/ 2) \/ width\n        coord_y = coord_y.view(1, 1, 1, width).expand(1, 1, height, width)\n        self.register_buffer('bg', torch.cat([coord_x, coord_y], 1))\n","AFTER":"        coord_x = (torch.arange(float(height)) - height \/ 2) \/ height\n        coord_x = coord_x.view(1, 1, height, 1).expand(1, 1, height, width)\n        coord_y = (torch.arange(float(width)) - width \/ 2) \/ width\n        coord_y = coord_y.view(1, 1, 1, width).expand(1, 1, height, width)\n\n        # TODO: might need to generate bg with cacheable buffer, based on shape, so to support different precisions.\n        # TODO: or does it not break mixed? might just cast up\n        self.register_buffer('bg', torch.cat([coord_x, coord_y], 1).half()) # TODO: breaks single-precision mode\n"}