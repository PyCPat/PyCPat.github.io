{"BEFORE":"        self.num_actions  = num_actions\n        self.num_atoms    = num_atoms\n        self.Vmin         = Vmin\n        self.Vmax         = Vmax\n        \n        self.linear1 = nn.Linear(num_inputs, 128)\n        self.linear2 = nn.Linear(128, 128)\n        self.noisy1 = NoisyLinear(128, 512)\n        self.noisy2 = NoisyLinear(512, self.num_actions * self.num_atoms)\n","AFTER":"        fc_layers=(128, 128),\n        noisy_layers=(128, 512)\n    ):\n        super(CategoricalDQNValue, self).__init__()\n\n        self.state_dim = state_dim\n        self.action_dim = action_dim\n        self.num_atoms = num_atoms\n        self.Vmin = Vmin\n        self.Vmax = Vmax\n\n        self.model = noisy_mlp(\n            [state_dim] + list(fc_layers),\n            list(noisy_layers) + [self.num_actions * self.num_atoms]\n"}