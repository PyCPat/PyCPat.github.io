{"BEFORE":"        resnet = resnet50(pretrained=True)\n        # resnet = resnext101_32x8d(pretrained=True)\n        resnet.layer4[0].conv2 = nn.Conv2d(512, 512, kernel_size=3, bias=False, stride=1, padding=1)\n        resnet.layer4[0].downsample = nn.Sequential(nn.Conv2d(1024, 2048, kernel_size=1, stride=1, bias=False),\n                                                    nn.BatchNorm2d(2048))\n","AFTER":"    def __init__(self, num_classes=1000, stripes=[2, 3], num_layers=50):\n        super(MGN, self).__init__()\n        self.stripes = stripes\n        if num_layers == 50:\n            resnet = resnet50(pretrained=True, last_stride=1)\n        elif num_layers == 101:\n            resnet = resnet101(pretrained=True, last_stride=1)\n        elif num_layers == '101_32x8d':\n            resnet = resnext101_32x8d(pretrained=True, last_stride=1)\n        elif num_layers == '50_ibn':\n            resnet = resnet50_ibn_a(pretrained=True, last_stride=1)\n        elif num_layers == '101_ibn':\n            resnet = resnet101_ibn_a(pretrained=True, last_stride=1)\n        self.backone = nn.Sequential(\n"}