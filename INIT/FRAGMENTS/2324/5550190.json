{"BEFORE":"        self.n_out = n_out\n        fc = []\n        for n_out in fc_layers:\n            fc += [\n                nn.Linear(n_in, n_out),\n                nn.LayerNorm(n_out),\n                nn.CELU(), \n                nn.Dropout(p=dropout_rate)                \n            ]\n            n_in = n_out\n        fc += [ nn.Linear(n_in, self.n_out) ]\n","AFTER":"    def __init__(self, n_in, n_out=1, layers=(), dropout_rate=0.0, context=1, n_in_base=4, mix_base=0):\n        super(FCUnpairedLayer, self).__init__()\n        self.context = context\n        self.mix_base = mix_base\n        if len(layers)>0 and layers[0]==0:\n            layers = ()\n\n        n = n_in * context\n        n += n_in_base * mix_base\n\n        l = []\n        for m in layers:\n            l += [\n                nn.Linear(n, m), \n                nn.LayerNorm(m),\n                nn.ELU(), \n                nn.Dropout(p=dropout_rate)]\n            n = m\n        l += [ nn.Linear(n, n_out) ] # , nn.LayerNorm(n_out) ]\n"}