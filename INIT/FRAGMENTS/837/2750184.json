{"BEFORE":"        model_dim = etsformer.model_dim\n        time_features = etsformer.time_features\n\n        inner_dim = dim_head * heads\n        self.scale = dim_head ** -0.5\n        self.dropout = nn.Dropout(dropout)\n\n        self.type_growth = nn.Parameter(torch.randn(model_dim) * 1e-5)\n        self.type_seasonal = nn.Parameter(torch.randn(model_dim) * 1e-5)\n","AFTER":"        model_dim = etsformer.model_dim\n        time_features = etsformer.time_features\n\n        inner_dim = dim_head * heads\n        self.scale = dim_head ** -0.5\n        self.dropout = nn.Dropout(dropout)\n\n        self.queries = nn.Parameter(torch.randn(heads, dim_head))\n\n        self.growth_to_kv = nn.Sequential(\n            Rearrange('b n d -> b d n'),\n            nn.Conv1d(model_dim, inner_dim * 2, growth_kernel_size, bias = False, padding = growth_kernel_size \/\/ 2),\n            Rearrange('... (kv h d) n -> kv ... h n d', kv = 2, h = heads)\n        )\n\n        self.seasonal_to_kv = nn.Sequential(\n            Rearrange('b n d -> b d n'),\n            nn.Conv1d(model_dim, inner_dim * 2, seasonal_kernel_size, bias = False, padding = seasonal_kernel_size \/\/ 2),\n            Rearrange('... (kv h d) n -> kv ... h n d', kv = 2, h = heads)\n        )\n"}