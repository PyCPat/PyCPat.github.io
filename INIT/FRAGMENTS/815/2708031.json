{"BEFORE":"    def __init__(self, channels, ratio=16):\n        super(SELayer, self).__init__()\n        self.global_avgpool = nn.AdaptiveAvgPool2d(1)\n        self.conv1 = nn.Conv2d(\n            channels, int(channels \/ ratio), kernel_size=1, stride=1)\n        self.conv2 = nn.Conv2d(\n            int(channels \/ ratio), channels, kernel_size=1, stride=1)\n        self.relu = nn.ReLU(inplace=True)\n        self.sigmoid = nn.Sigmoid()\n","AFTER":"    def __init__(self,\n                 channels,\n                 ratio=16,\n                 conv_cfg=None,\n                 act_cfg=(dict(type='ReLU'), dict(type='Sigmoid'))):\n        super(SELayer, self).__init__()\n        if isinstance(act_cfg, dict):\n            act_cfg = (act_cfg, act_cfg)\n        assert len(act_cfg) == 2\n        assert mmcv.is_tuple_of(act_cfg, dict)\n"}