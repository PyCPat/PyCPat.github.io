{"BEFORE":"    def __init__(self, channels, out_channels, kernel_size, stride=None, dilated=False, separable=False, nonlinear='relu', dropout=False, norm=False):\n        \"\"\"\n        Args:\n            out_channels <list<int>>: output_channels\n        \"\"\"\n        super().__init__()\n\n        raise NotImplementedError()\n","AFTER":"        self.out_channels = out_channels\n\n        self.dense_block = ControlStackedDenseBlock(channels, nonlinear=nonlinear, dropout=dropout, norm=norm)\n\n        weights, biases = [], []\n        \n        for _channels in out_channels:\n            weights.append(nn.Linear(channels[-1], _channels))\n            biases.append(nn.Linear(channels[-1], _channels))\n        \n        self.fc_weights = nn.ModuleList(weights)\n        self.fc_biases = nn.ModuleList(biases)\n"}