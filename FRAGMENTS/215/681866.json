{"BEFORE":"                layers.append(nn.Sequential(\n                    nn.Linear(layer_sizes[l_id], output_size),\n                ))\n","AFTER":"    def __init__(self, input_size: int, output_size: int, layer_sizes: list = None, norm_output: bool = False):\n        super(Decoder, self).__init__()\n        if layer_sizes is None:\n            layer_sizes = [128]\n        layers = []\n        layer_sizes = [input_size] + layer_sizes\n        for l_id in range(len(layer_sizes)):\n            if l_id == len(layer_sizes) - 1:\n                if norm_output:\n                    layers.append(nn.Sequential(\n                        nn.Linear(layer_sizes[l_id], output_size),\n                        nn.Sigmoid()\n                    ))\n                else:\n                    layers.append(nn.Sequential(\n                        nn.Linear(layer_sizes[l_id], output_size),\n                    ))\n            else:\n"}