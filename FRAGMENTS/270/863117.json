{"BEFORE":"                disc_id = (self.token(), self.discourse_id)[self.discourse_id is not None]\n                self.assertNextToken(DrtTokens.COMMA)\n                sent_id = self.nullableIntToken()\n                self.assertNextToken(DrtTokens.COMMA)\n                word_ids = list(map(int, self.handle_refs()))\n                self.assertNextToken(DrtTokens.COMMA)\n                variable = int(self.token())\n                self.assertNextToken(DrtTokens.COMMA)\n                name = self.token()\n                self.assertNextToken(DrtTokens.COMMA)\n                pos = self.token()\n                self.assertNextToken(DrtTokens.COMMA)\n                sense = int(self.token())\n                self.assertNextToken(DrtTokens.CLOSE)\n                return BoxerPred(disc_id, sent_id, word_ids, variable, name, pos, sense)\n            elif tok == 'named':\n                self.assertNextToken(DrtTokens.OPEN)\n                disc_id = (self.token(), self.discourse_id)[self.discourse_id is not None]\n                self.assertNextToken(DrtTokens.COMMA)\n                sent_id = int(self.token())\n                self.assertNextToken(DrtTokens.COMMA)\n                word_ids = map(int, self.handle_refs())\n                self.assertNextToken(DrtTokens.COMMA)\n                variable = int(self.token())\n                self.assertNextToken(DrtTokens.COMMA)\n                name = self.token()\n                self.assertNextToken(DrtTokens.COMMA)\n                type = self.token()\n                self.assertNextToken(DrtTokens.COMMA)\n                sense = int(self.token())\n                self.assertNextToken(DrtTokens.CLOSE)\n                return BoxerNamed(disc_id, sent_id, word_ids, variable, name, type, sense)\n            elif tok == 'rel':\n                self.assertNextToken(DrtTokens.OPEN)\n                disc_id = (self.token(), self.discourse_id)[self.discourse_id is not None]\n                self.assertNextToken(DrtTokens.COMMA)\n                sent_id = self.nullableIntToken()\n                self.assertNextToken(DrtTokens.COMMA)\n                word_ids = list(map(int, self.handle_refs()))\n                self.assertNextToken(DrtTokens.COMMA)\n                var1 = int(self.token())\n                self.assertNextToken(DrtTokens.COMMA)\n                var2 = int(self.token())\n                self.assertNextToken(DrtTokens.COMMA)\n                rel = self.token()\n                self.assertNextToken(DrtTokens.COMMA)\n                sense = int(self.token())\n                self.assertNextToken(DrtTokens.CLOSE)\n                return BoxerRel(disc_id, sent_id, word_ids, var1, var2, rel, sense)\n            elif tok == 'prop':\n                self.assertNextToken(DrtTokens.OPEN)\n                disc_id = (self.token(), self.discourse_id)[self.discourse_id is not None]\n                self.assertNextToken(DrtTokens.COMMA)\n                sent_id = int(self.token())\n                self.assertNextToken(DrtTokens.COMMA)\n                word_ids = list(map(int, self.handle_refs()))\n                self.assertNextToken(DrtTokens.COMMA)\n                variable = int(self.token())\n                self.assertNextToken(DrtTokens.COMMA)\n                drs = self.process_next_expression(None)\n                self.assertNextToken(DrtTokens.CLOSE)\n                return BoxerProp(disc_id, sent_id, word_ids, variable, drs)\n            elif tok == 'not':\n                self.assertNextToken(DrtTokens.OPEN)\n                drs = self.process_next_expression(None)\n                self.assertNextToken(DrtTokens.CLOSE)\n                return BoxerNot(drs)\n            elif tok == 'imp':\n                self.assertNextToken(DrtTokens.OPEN)\n                drs1 = self.process_next_expression(None)\n                self.assertNextToken(DrtTokens.COMMA)\n                drs2 = self.process_next_expression(None)\n                self.assertNextToken(DrtTokens.CLOSE)\n                return BoxerDrs(drs1.refs, drs1.conds, drs2)\n            elif tok == 'or':\n                self.assertNextToken(DrtTokens.OPEN)\n                disc_id = (self.token(), self.discourse_id)[self.discourse_id is not None]\n                self.assertNextToken(DrtTokens.COMMA)\n                sent_id = self.nullableIntToken()\n                self.assertNextToken(DrtTokens.COMMA)\n                word_ids = map(int, self.handle_refs())\n                self.assertNextToken(DrtTokens.COMMA)\n                drs1 = self.process_next_expression(None)\n                self.assertNextToken(DrtTokens.COMMA)\n                drs2 = self.process_next_expression(None)\n                self.assertNextToken(DrtTokens.CLOSE)\n                return BoxerOr(disc_id, sent_id, word_ids, drs1, drs2)\n            elif tok == 'eq':\n                self.assertNextToken(DrtTokens.OPEN)\n                disc_id = (self.token(), self.discourse_id)[self.discourse_id is not None]\n                self.assertNextToken(DrtTokens.COMMA)\n                sent_id = self.nullableIntToken()\n                self.assertNextToken(DrtTokens.COMMA)\n                word_ids = list(map(int, self.handle_refs()))\n                self.assertNextToken(DrtTokens.COMMA)\n                var1 = int(self.token())\n                self.assertNextToken(DrtTokens.COMMA)\n                var2 = int(self.token())\n                self.assertNextToken(DrtTokens.CLOSE)\n                return BoxerEq(disc_id, sent_id, word_ids, var1, var2)\n            elif tok == 'card':\n                self.assertNextToken(DrtTokens.OPEN)\n                disc_id = (self.token(), self.discourse_id)[self.discourse_id is not None]\n                self.assertNextToken(DrtTokens.COMMA)\n                sent_id = self.nullableIntToken()\n                self.assertNextToken(DrtTokens.COMMA)\n                word_ids = map(int, self.handle_refs())\n                self.assertNextToken(DrtTokens.COMMA)\n                var = int(self.token())\n                self.assertNextToken(DrtTokens.COMMA)\n                value = self.token()\n                self.assertNextToken(DrtTokens.COMMA)\n                type = self.token()\n                self.assertNextToken(DrtTokens.CLOSE)\n                return BoxerCard(disc_id, sent_id, word_ids, var, value, type)\n            elif tok == 'whq':\n                self.assertNextToken(DrtTokens.OPEN)\n                disc_id = (self.token(), self.discourse_id)[self.discourse_id is not None]\n","AFTER":"                disc_id = self.discourse_id if self.discourse_id is not None else self.token()\n                self.assertNextToken(DrtTokens.COMMA)\n                sent_id = self.nullableIntToken()\n                self.assertNextToken(DrtTokens.COMMA)\n                word_ids = list(map(int, self.handle_refs()))\n                self.assertNextToken(DrtTokens.COMMA)\n                variable = int(self.token())\n                self.assertNextToken(DrtTokens.COMMA)\n                name = self.token()\n                self.assertNextToken(DrtTokens.COMMA)\n                pos = self.token()\n                self.assertNextToken(DrtTokens.COMMA)\n                sense = int(self.token())\n                self.assertNextToken(DrtTokens.CLOSE)\n                return BoxerPred(disc_id, sent_id, word_ids, variable, name, pos, sense)\n            elif tok == 'named':\n                self.assertNextToken(DrtTokens.OPEN)\n                disc_id = self.discourse_id if self.discourse_id is not None else self.token()\n                self.assertNextToken(DrtTokens.COMMA)\n                sent_id = int(self.token())\n                self.assertNextToken(DrtTokens.COMMA)\n                word_ids = map(int, self.handle_refs())\n                self.assertNextToken(DrtTokens.COMMA)\n                variable = int(self.token())\n                self.assertNextToken(DrtTokens.COMMA)\n                name = self.token()\n                self.assertNextToken(DrtTokens.COMMA)\n                type = self.token()\n                self.assertNextToken(DrtTokens.COMMA)\n                sense = int(self.token())\n                self.assertNextToken(DrtTokens.CLOSE)\n                return BoxerNamed(disc_id, sent_id, word_ids, variable, name, type, sense)\n            elif tok == 'rel':\n                self.assertNextToken(DrtTokens.OPEN)\n                disc_id = self.discourse_id if self.discourse_id is not None else self.token()\n                self.assertNextToken(DrtTokens.COMMA)\n                sent_id = self.nullableIntToken()\n                self.assertNextToken(DrtTokens.COMMA)\n                word_ids = list(map(int, self.handle_refs()))\n                self.assertNextToken(DrtTokens.COMMA)\n                var1 = int(self.token())\n                self.assertNextToken(DrtTokens.COMMA)\n                var2 = int(self.token())\n                self.assertNextToken(DrtTokens.COMMA)\n                rel = self.token()\n                self.assertNextToken(DrtTokens.COMMA)\n                sense = int(self.token())\n                self.assertNextToken(DrtTokens.CLOSE)\n                return BoxerRel(disc_id, sent_id, word_ids, var1, var2, rel, sense)\n            elif tok == 'prop':\n                self.assertNextToken(DrtTokens.OPEN)\n                disc_id = self.discourse_id if self.discourse_id is not None else self.token()\n                self.assertNextToken(DrtTokens.COMMA)\n                sent_id = int(self.token())\n                self.assertNextToken(DrtTokens.COMMA)\n                word_ids = list(map(int, self.handle_refs()))\n                self.assertNextToken(DrtTokens.COMMA)\n                variable = int(self.token())\n                self.assertNextToken(DrtTokens.COMMA)\n                drs = self.process_next_expression(None)\n                self.assertNextToken(DrtTokens.CLOSE)\n                return BoxerProp(disc_id, sent_id, word_ids, variable, drs)\n            elif tok == 'not':\n                self.assertNextToken(DrtTokens.OPEN)\n                drs = self.process_next_expression(None)\n                self.assertNextToken(DrtTokens.CLOSE)\n                return BoxerNot(drs)\n            elif tok == 'imp':\n                self.assertNextToken(DrtTokens.OPEN)\n                drs1 = self.process_next_expression(None)\n                self.assertNextToken(DrtTokens.COMMA)\n                drs2 = self.process_next_expression(None)\n                self.assertNextToken(DrtTokens.CLOSE)\n                return BoxerDrs(drs1.refs, drs1.conds, drs2)\n            elif tok == 'or':\n                self.assertNextToken(DrtTokens.OPEN)\n                disc_id = self.discourse_id if self.discourse_id is not None else self.token()\n                self.assertNextToken(DrtTokens.COMMA)\n                sent_id = self.nullableIntToken()\n                self.assertNextToken(DrtTokens.COMMA)\n                word_ids = map(int, self.handle_refs())\n                self.assertNextToken(DrtTokens.COMMA)\n                drs1 = self.process_next_expression(None)\n                self.assertNextToken(DrtTokens.COMMA)\n                drs2 = self.process_next_expression(None)\n                self.assertNextToken(DrtTokens.CLOSE)\n                return BoxerOr(disc_id, sent_id, word_ids, drs1, drs2)\n            elif tok == 'eq':\n                self.assertNextToken(DrtTokens.OPEN)\n                disc_id = self.discourse_id if self.discourse_id is not None else self.token()\n                self.assertNextToken(DrtTokens.COMMA)\n                sent_id = self.nullableIntToken()\n                self.assertNextToken(DrtTokens.COMMA)\n                word_ids = list(map(int, self.handle_refs()))\n                self.assertNextToken(DrtTokens.COMMA)\n                var1 = int(self.token())\n                self.assertNextToken(DrtTokens.COMMA)\n                var2 = int(self.token())\n                self.assertNextToken(DrtTokens.CLOSE)\n                return BoxerEq(disc_id, sent_id, word_ids, var1, var2)\n            elif tok == 'card':\n                self.assertNextToken(DrtTokens.OPEN)\n                disc_id = self.discourse_id if self.discourse_id is not None else self.token()\n                self.assertNextToken(DrtTokens.COMMA)\n                sent_id = self.nullableIntToken()\n                self.assertNextToken(DrtTokens.COMMA)\n                word_ids = map(int, self.handle_refs())\n                self.assertNextToken(DrtTokens.COMMA)\n                var = int(self.token())\n                self.assertNextToken(DrtTokens.COMMA)\n                value = self.token()\n                self.assertNextToken(DrtTokens.COMMA)\n                type = self.token()\n                self.assertNextToken(DrtTokens.CLOSE)\n                return BoxerCard(disc_id, sent_id, word_ids, var, value, type)\n            elif tok == 'whq':\n                self.assertNextToken(DrtTokens.OPEN)\n                disc_id = self.discourse_id if self.discourse_id is not None else self.token()\n"}