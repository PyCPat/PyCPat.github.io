{"BEFORE":"        block = read_blankline_block(stream)[0].strip()\n        grid = [line.split() for line in block.split('\\n')]\n        \n        # If there's a docstart row, then discard. ([xx] eventually it\n        # would be good to actually use it)\n        if grid[0][self._colmap.get('words', 0)] == '-DOCSTART-':\n            del grid[0]\n        \n        # Check that the grid is consistent.\n        for row in grid:\n            if len(row) != len(grid[0]):\n                raise ValueError('Inconsistent number of columns')\n        return [grid]\n","AFTER":"        grids = []\n        for block in read_blankline_block(stream):\n            block = block.strip()\n            if not block: continue\n            \n            grid = [line.split() for line in block.split('\\n')]\n            \n            # If there's a docstart row, then discard. ([xx] eventually it\n            # would be good to actually use it)\n            if grid[0][self._colmap.get('words', 0)] == '-DOCSTART-':\n                del grid[0]\n                \n            # Check that the grid is consistent.\n            for row in grid:\n                if len(row) != len(grid[0]):\n                    raise ValueError('Inconsistent number of columns:\\n%s'\n                                     % block)\n            grids.append(grid)\n        return grids\n"}