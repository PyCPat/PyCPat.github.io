{"BEFORE":"        _chktype(\"AbstractTree.__getitem__\",\n                 1, index, (_IntType, _SliceType, _TupleType))\n        if type(index) == _IntType:\n            return self._children[index]\n        elif type(index) == _SliceType:\n            return self._children[index.start:index.stop]\n        elif len(index) == 0:\n            return self\n        elif len(index) == 1:\n            return self._children[index[0]]\n        else:\n            return self._children[index[0]][index[1:]]\n","AFTER":"        assert _chktype(1, index, types.IntType,\n                        types.SliceType, types.TupleType)\n        if type(index) == types.IntType:\n            return self._children[index]\n        elif type(index) == types.SliceType:\n            return self._children[index.start:index.stop]\n        elif len(index) == 0:\n            return self\n        elif len(index) == 1:\n            return self._children[index[0]]\n        elif isinstance(self._children[index[0]], AbstractTree):\n            return self._children[index[0]][index[1:]]\n        else:\n            raise IndexError('Bad tree position')\n"}