{"BEFORE":"    def __init__(self, num_classes=80, anchors=1, num_layers=3, inplace=True, head_layers=None, use_dfl=True, reg_max=16):  # detection layer\n        super().__init__()\n        assert head_layers is not None\n        self.nc = num_classes  # number of classes\n        self.no = num_classes + 5  # number of outputs per anchor\n        self.nl = num_layers  # number of detection layers\n        if isinstance(anchors, (list, tuple)):\n            self.na = len(anchors[0]) \/\/ 2\n        else:\n            self.na = anchors\n        self.anchors = anchors\n        self.grid = [torch.zeros(1)] * num_layers\n        self.prior_prob = 1e-2\n        self.inplace = inplace\n        stride = [8, 16, 32]  # strides computed during build\n","AFTER":"        stride = [8, 16, 32] if num_layers == 3 else [8, 16, 32, 64] # strides computed during build\n"}