{"BEFORE":"    def __init__(self, in_channel: int, out_channel: int, kernel_size: list):\n        super(MergeBlock, self).__init__()\n        self.upsample = nn.Upsample(scale_factor=kernel_size[0])\n        self.conv = nn.Conv1d(in_channels=in_channel, out_channels=out_channel, kernel_size=kernel_size[1], padding=1)\n        self.act = nn.LeakyReLU()\n","AFTER":"    def __init__(self, in_channels):\n        super(Shrinkage, self).__init__()\n        self.gap = nn.AdaptiveAvgPool1d(1)\n        self.fc = nn.Sequential(nn.Linear(in_channels, in_channels),\n                                nn.BatchNorm1d(in_channels),\n                                nn.LeakyReLU(),\n                                nn.Linear(in_channels, in_channels),\n                                nn.Sigmoid())\n"}