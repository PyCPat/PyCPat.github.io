{"BEFORE":"        base_channels = int(wid_mul * 64)  # 64\n        base_depth = max(round(dep_mul * 3), 1)  # 3\n        assert out_features, \"please provide output features of Darknet!\"\n        self.out_features = out_features\n\n        # stem\n        self.stem = Focus(3, base_channels, ksize=3, norm=norm, act=act)\n\n        # dark2\n        self.dark2 = nn.Sequential(\n            BaseConv(base_channels, base_channels * 2, 3, 2, norm=norm, act=act),\n            CSPLayer(\n                base_channels * 2,\n                base_channels * 2,\n                num_bottle=base_depth,\n                norm=norm,\n                act=act,\n            ),\n        )\n\n        # dark3\n        self.dark3 = nn.Sequential(\n            BaseConv(base_channels * 2, base_channels * 4, 3, 2, norm=norm, act=act),\n            CSPLayer(\n                base_channels * 4,\n                base_channels * 4,\n                num_bottle=base_depth * 3,\n                norm=norm,\n                act=act,\n            ),\n        )\n\n        # dark4\n        self.dark4 = nn.Sequential(\n            BaseConv(base_channels * 4, base_channels * 8, 3, 2, norm=norm, act=act),\n            CSPLayer(\n                base_channels * 8,\n                base_channels * 8,\n                num_bottle=base_depth * 3,\n                norm=norm,\n                act=act,\n            ),\n        )\n\n        # dark5\n        self.dark5 = nn.Sequential(\n            BaseConv(base_channels * 8, base_channels * 16, 3, 2, norm=norm, act=act),\n            SPPBottleneck(base_channels * 16, base_channels * 16, norm=norm, act=act),\n            CSPLayer(\n                base_channels * 16,\n                base_channels * 16,\n","AFTER":"        self.stem = Focus(3, channels[0], ksize=3, norm=norm, act=act)\n\n        # dark2\n        self.dark2 = nn.Sequential(\n            BaseConv(channels[0], channels[1], 3, 2, norm=norm, act=act),\n            CSPLayer(\n                channels[1],\n                channels[1],\n                num_bottle=base_depth,\n                norm=norm,\n                act=act,\n            ),\n        )\n\n        # dark3\n        self.dark3 = nn.Sequential(\n            BaseConv(channels[1], channels[2], 3, 2, norm=norm, act=act),\n            CSPLayer(\n                channels[2],\n                channels[2],\n                num_bottle=base_depth * 3,\n                norm=norm,\n                act=act,\n            ),\n        )\n\n        # dark4\n        self.dark4 = nn.Sequential(\n            BaseConv(channels[2], channels[3], 3, 2, norm=norm, act=act),\n            CSPLayer(\n                channels[3],\n                channels[3],\n                num_bottle=base_depth * 3,\n                norm=norm,\n                act=act,\n            ),\n        )\n\n        # dark5\n        self.dark5 = nn.Sequential(\n            BaseConv(channels[3], channels[4], 3, 2, norm=norm, act=act),\n            SPPBottleneck(channels[4], channels[4], norm=norm, act=act),\n            CSPLayer(\n                channels[4],\n                channels[4],\n"}