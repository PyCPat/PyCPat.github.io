{"BEFORE":"    semkeys = st.keys()\n    if len(semkeys) == 1: return \"<None>\"\n\n    outstr = \"\"\n    outstr += \"semantic type ({0.ID}): {0.name}\\n\".format(st)\n    if 'abbrev' in semkeys:\n        outstr += \"[abbrev] {0}\\n\".format(st.abbrev)\n    if 'definition' in semkeys:\n        outstr += \"[definition]\\n\"\n        outstr += _pretty_longstring(st.definition,'  ')\n    if 'superType' in semkeys:\n        outstr += \"[superType]\\n\"\n        ststr = \"{0}\".format(st.superType)\n        for line in ststr.split(\"\\n\"):\n            outstr += \"  {0}\\n\".format(line)\n\n    return outstr\n","AFTER":"    outstr = \"\"\n    outstr += \"semantic type ({0.ID}): {0.name}\\n\".format(st)\n    if 'abbrev' in semkeys:\n        outstr += \"[abbrev] {0}\\n\".format(st.abbrev)\n    if 'definition' in semkeys:\n        outstr += \"[definition]\\n\"\n        outstr += _pretty_longstring(st.definition,'  ')\n    outstr += \"[rootType] {0}({1})\\n\".format(st.rootType.name, st.rootType.ID)\n    if st.superType is None:\n        outstr += \"[superType] <None>\\n\"\n    else:\n        outstr += \"[superType] {0}({1})\\n\".format(st.superType.name, st.superType.ID)\n    outstr += \"[subTypes] {0} subtypes\\n\".format(len(st.subTypes))\n    outstr += \"  \" + \", \".join('{0}({1})'.format(x.name, x.ID) for x in st.subTypes) + '\\n'*(len(st.subTypes)>0)\n"}