{"BEFORE":"    def __init__(self, out_dim=10, in_channel=1, img_sz=28):\n        super(LeNet, self).__init__()\n        feat_map_sz = img_sz \/\/ 4\n        self.n_feat = 50 * feat_map_sz * feat_map_sz\n\n        self.conv = nn.Sequential(\n            nn.Conv2d(in_channel, 20, 5, padding=2),\n            # nn.BatchNorm2d(20),\n            nn.ReLU(inplace=True),\n            nn.MaxPool2d(2, 2),\n            nn.Conv2d(20, 50, 5, padding=2),\n            # nn.BatchNorm2d(50),\n            nn.ReLU(inplace=True),\n            nn.MaxPool2d(2, 2))\n        self.linear = nn.Sequential(\n            nn.Linear(self.n_feat, 500),\n            # nn.BatchNorm1d(500),\n            #            nn.ReLU(inplace=True),\n        )\n        self.last = nn.Linear(\n            500, out_dim)  # Subject to be replaced dependent on task\n","AFTER":"    def __init__(self):\n        super().__init__()\n        self.conv1 = nn.Conv2d(3, 6, 5)\n        self.pool = nn.MaxPool2d(2, 2)\n        self.conv2 = nn.Conv2d(6, 16, 5)\n        self.fc1 = nn.Linear(16 * 5 * 5, 120)\n        self.fc2 = nn.Linear(120, 84)\n        self.fc3 = nn.Linear(84, 10)\n"}