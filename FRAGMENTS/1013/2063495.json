{"BEFORE":"        self.gamma = nn.Parameter(U.sample(torch.Size([self.insize])).view(self.insize))\r\n        self.beta = nn.Parameter(torch.zeros(self.insize))\r\n        if self.non_linear:\r\n            self.v = nn.Parameter(torch.ones(self.gamma.size()))\r\n","AFTER":"        self.insize = input\r\n        #print(self.insize)\r\n        self.training = training\r\n        if self.version not in ['B0', 'S0']:\r\n            raise ValueError(\"Invalid EvoNorm version\")\r\n        U = uniform.Uniform(torch.tensor([0.0]), torch.tensor([1.0]))\r\n        self.gamma = nn.Parameter(U.sample(torch.Size([self.insize])).view(self.insize))\r\n        self.beta = nn.Parameter(torch.zeros(self.insize))\r\n        if self.non_linear:\r\n            self.v = nn.Parameter(torch.ones(1,self.insize,1,1))\r\n"}