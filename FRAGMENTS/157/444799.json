{"BEFORE":"        super(_NonLocalBlockND, self).__init__()\n        assert dimension in [1, 2, 3]\n        assert mode in [\n            'embedded_gaussian', 'gaussian', 'dot_product', 'concatenation'\n        ]\n","AFTER":"        super().__init__()\n\n        supported_dims = [1, 2, 3]\n        if dimension not in supported_dims:\n            raise ValueError(f'Dimension should be in {supported_dims};'\n                             f' received `{dimension}`.')\n\n        supported_modes = [\n            'embedded_gaussian', 'gaussian', 'dot_product', 'concatenation'\n        ]\n        if mode not in supported_modes:\n            raise NotImplementedError(f'Mode should be in {supported_modes};'\n                                      f' received `{mode}`.')\n\n        # print('Dimension: %d, mode: %s' % (dimension, mode))\n\n        self.mode = mode\n"}