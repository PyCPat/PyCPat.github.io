{"BEFORE":"    def __init__(self, DEVICE, nb_block, in_channels, K, nb_chev_filter, nb_time_filter, time_strides, cheb_polynomials, num_for_predict, len_input):\n        '''\n        :param nb_block:\n        :param in_channels:\n        :param K:\n        :param nb_chev_filter:\n        :param nb_time_filter:\n        :param time_strides:\n        :param cheb_polynomials:\n        :param nb_predict_step:\n        '''\n\n        super(MSTGCN_submodule, self).__init__()\n","AFTER":"    def __init__(self, DEVICE, nb_block, in_channels, K, nb_chev_filter, nb_time_filter, time_strides, num_for_predict, len_input, edge_index):\n\n        super(MSTGCN, self).__init__()\n\n        self.BlockList = nn.ModuleList([MSTGCN_block(in_channels, K, nb_chev_filter, nb_time_filter, time_strides, edge_index, DEVICE)])\n\n        self.BlockList.extend([MSTGCN_block(nb_time_filter, K, nb_chev_filter, nb_time_filter, 1, edge_index, DEVICE) for _ in range(nb_block-1)])\n"}