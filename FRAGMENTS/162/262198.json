{"BEFORE":"    params = compat.urlencode({'doit': 'done',\n                               'tt': 'urltext',\n                               'urltext': phrase,\n                               'lp': source_code + '_' + target_code})\n    try:\n        response = compat.urlopen('http:\/\/babelfish.yahoo.com\/translate_txt', params)\n\n    except IOError as what:\n        raise BabelizerIOError(\"Couldn't talk to server: %s\" % what)\n\n    html = response.read()\n    for regex in __where:\n        match = regex.search(html)\n        if match: break\n    if not match: raise BabelfishChangedError(\"Can't recognize translated string.\")\n    return clean(match.group(1))\n","AFTER":"    phrase = clean(phrase)\n    if isinstance(phrase, compat.text_type):\n        phrase = phrase.encode('utf8')\n\n    try:\n        source_code = __languages[source]\n        target_code = __languages[target]\n    except KeyError as lang:\n        raise ValueError(\"Language %s not available\" % lang)\n\n\n    params = compat.urlencode({'doit': 'done',\n                               'tt': 'urltext',\n                               'urltext': phrase,\n                               'ei': 'utf8',\n"}