{"BEFORE":"        stem = self.stem_word(word.lower(), 0, len(word) - 1)\n        return self._adjust_case(word, stem)\n","AFTER":"        stem = word.lower()\n        \n        if self.mode == self.NLTK_EXTENSIONS and word in self.pool:\n            return self.pool[word]\n\n        if self.mode != self.ORIGINAL_ALGORITHM and len(word) <= 2:\n            # With this line, strings of length 1 or 2 don't go through\n            # the stemming process, although no mention is made of this\n            # in the published algorithm.\n            return word\n\n        stem = self._step1a(stem)\n        stem = self._step1b(stem)\n        stem = self._step1c(stem)\n        stem = self._step2(stem)\n        stem = self._step3(stem)\n        stem = self._step4(stem)\n        stem = self._step5a(stem)\n        stem = self._step5b(stem)\n        \n        return stem\n"}