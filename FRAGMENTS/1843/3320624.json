{"BEFORE":"        shape = self.main(torch.zeros(1, in_depth, resolution[0], resolution[1])).shape\n        assert shape[0] == 1\n        assert shape[1] == 32*model_size\n\n        self.dueling = Dueling(\n            nn.Sequential(linear_layer(shape[2]*shape[3]*32*model_size, 256),\n                          nn.ReLU(),\n                          linear_layer(256, 1)),\n            nn.Sequential(linear_layer(shape[2]*shape[3]*32*model_size, 256),\n","AFTER":"        self.pool = torch.nn.AdaptiveMaxPool2d((8, 8))\n\n        self.dueling = Dueling(\n            nn.Sequential(linear_layer(2048*model_size, 256),\n                          nn.ReLU(),\n                          linear_layer(256, 1)),\n            nn.Sequential(linear_layer(2048*model_size, 256),\n"}