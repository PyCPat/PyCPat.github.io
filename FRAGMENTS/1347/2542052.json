{"BEFORE":"        m.stride = torch.tensor([128 \/ x.shape[-2] for x in self.forward(torch.zeros(1, ch, 128, 128))])  # forward\n        m.anchors \/= m.stride.view(-1, 1, 1)\n        check_anchor_order(m)\n        self.stride = m.stride\n","AFTER":"        m = self.model[-1]  # Detect()\n        if isinstance(m, Detect):\n            s = 128  # 2x min stride\n            m.stride = torch.tensor([s \/ x.shape[-2] for x in self.forward(torch.zeros(1, ch, s, s))])  # forward\n            m.anchors \/= m.stride.view(-1, 1, 1)\n            check_anchor_order(m)\n            self.stride = m.stride\n            self._initialize_biases()  # only run once\n            # print('Strides: %s' % m.stride.tolist())\n\n        # Init weights, biases\n        torch_utils.initialize_weights(self)\n"}