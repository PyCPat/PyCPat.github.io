{"BEFORE":"    def __init__(self, block, num_blocks, num_classes, nf):\n        super(ResNet, self).__init__()\n","AFTER":"    def __init__(self, block: BasicBlock, num_blocks: list[int], num_classes: int, nf: int):\n        super().__init__()\n        self.in_planes = nf\n\n        self.conv1 = conv3x3(3, nf * 1)\n        self.bn1 = nn.BatchNorm2d(nf * 1)\n        self.relu = nn.ReLU(inplace=True)\n        self.layer1 = self._make_layer(block, nf * 1, num_blocks[0], stride=1)\n        self.layer2 = self._make_layer(block, nf * 2, num_blocks[1], stride=2)\n        self.layer3 = self._make_layer(block, nf * 4, num_blocks[2], stride=2)\n        self.layer4 = self._make_layer(block, nf * 8, num_blocks[3], stride=2)\n        self.avgpool = nn.AdaptiveAvgPool2d((1, 1))\n"}