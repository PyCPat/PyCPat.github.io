{"BEFORE":"        word = (word.replace(\"\\xE1\", \"\\xE0\")\n                    .replace(\"\\xE9\", \"\\xE8\")\n                    .replace(\"\\xED\", \"\\xEC\")\n                    .replace(\"\\xF3\", \"\\xF2\")\n                    .replace(\"\\xFA\", \"\\xF9\"))\n\n        # Every occurrence of 'u' after 'q'\n        # is put into upper case.\n        for i in range(1, len(word)):\n            if word[i-1] == \"q\" and word[i] == \"u\":\n                word = \"\".join((word[:i], \"U\", word[i+1:]))\n\n        # Every occurrence of 'u' and 'i'\n        # between vowels is put into upper case.\n        for i in range(1, len(word)-1):\n            if word[i-1] in self.__vowels and word[i+1] in self.__vowels:\n                if word[i] == \"u\":\n                    word = \"\".join((word[:i], \"U\", word[i+1:]))\n\n                elif word [i] == \"i\":\n                    word = \"\".join((word[:i], \"I\", word[i+1:]))\n\n        r1, r2 = self._r1r2_standard(word, self.__vowels)\n        rv = self._rv_standard(word, self.__vowels)\n\n        # STEP 0: Attached pronoun\n        for suffix in self.__step0_suffixes:\n            if rv.endswith(suffix):\n                if rv[-len(suffix)-4:-len(suffix)] in (\"ando\", \"endo\"):\n                    word = word[:-len(suffix)]\n                    r1 = r1[:-len(suffix)]\n                    r2 = r2[:-len(suffix)]\n                    rv = rv[:-len(suffix)]\n\n                elif (rv[-len(suffix)-2:-len(suffix)] in\n                      (\"ar\", \"er\", \"ir\")):\n                    word = \"\".join((word[:-len(suffix)], \"e\"))\n                    r1 = \"\".join((r1[:-len(suffix)], \"e\"))\n                    r2 = \"\".join((r2[:-len(suffix)], \"e\"))\n                    rv = \"\".join((rv[:-len(suffix)], \"e\"))\n                break\n\n        # STEP 1: Standard suffix removal\n        for suffix in self.__step1_suffixes:\n            if word.endswith(suffix):\n                if suffix == \"amente\" and r1.endswith(suffix):\n                    step1_success = True\n                    word = word[:-6]\n                    r2 = r2[:-6]\n                    rv = rv[:-6]\n\n                    if r2.endswith(\"iv\"):\n                        word = word[:-2]\n                        r2 = r2[:-2]\n                        rv = rv[:-2]\n\n                        if r2.endswith(\"at\"):\n                            word = word[:-2]\n                            rv = rv[:-2]\n\n                    elif r2.endswith((\"os\", \"ic\")):\n                        word = word[:-2]\n                        rv = rv[:-2]\n\n                    elif r2 .endswith(\"abil\"):\n                        word = word[:-4]\n                        rv = rv[:-4]\n\n                elif (suffix in (\"amento\", \"amenti\",\n                                 \"imento\", \"imenti\") and\n                      rv.endswith(suffix)):\n                    step1_success = True\n                    word = word[:-6]\n                    rv = rv[:-6]\n\n                elif r2.endswith(suffix):\n                    step1_success = True\n                    if suffix in (\"azione\", \"azioni\", \"atore\", \"atori\"):\n                        word = word[:-len(suffix)]\n                        r2 = r2[:-len(suffix)]\n                        rv = rv[:-len(suffix)]\n\n                        if r2.endswith(\"ic\"):\n                            word = word[:-2]\n                            rv = rv[:-2]\n\n                    elif suffix in (\"logia\", \"logie\"):\n                        word = word[:-2]\n                        rv = word[:-2]\n\n                    elif suffix in (\"uzione\", \"uzioni\",\n                                    \"usione\", \"usioni\"):\n                        word = word[:-5]\n                        rv = rv[:-5]\n\n                    elif suffix in (\"enza\", \"enze\"):\n                        word = \"\".join((word[:-2], \"te\"))\n                        rv = \"\".join((rv[:-2], \"te\"))\n","AFTER":"        word = (word.replace(\"\\xE1\", \"\\xE0\")\n                    .replace(\"\\xE9\", \"\\xE8\")\n                    .replace(\"\\xED\", \"\\xEC\")\n                    .replace(\"\\xF3\", \"\\xF2\")\n                    .replace(\"\\xFA\", \"\\xF9\"))\n\n        # Every occurrence of 'u' after 'q'\n        # is put into upper case.\n        for i in range(1, len(word)):\n            if word[i-1] == \"q\" and word[i] == \"u\":\n                word = \"\".join((word[:i], \"U\", word[i+1:]))\n\n        # Every occurrence of 'u' and 'i'\n        # between vowels is put into upper case.\n        for i in range(1, len(word)-1):\n            if word[i-1] in self.__vowels and word[i+1] in self.__vowels:\n                if word[i] == \"u\":\n                    word = \"\".join((word[:i], \"U\", word[i+1:]))\n\n                elif word [i] == \"i\":\n                    word = \"\".join((word[:i], \"I\", word[i+1:]))\n\n        r1, r2 = self._r1r2_standard(word, self.__vowels)\n        rv = self._rv_standard(word, self.__vowels)\n\n        # STEP 0: Attached pronoun\n        for suffix in self.__step0_suffixes:\n            if rv.endswith(suffix):\n                if rv[-len(suffix)-4:-len(suffix)] in (\"ando\", \"endo\"):\n                    word = word[:-len(suffix)]\n                    r1 = r1[:-len(suffix)]\n                    r2 = r2[:-len(suffix)]\n                    rv = rv[:-len(suffix)]\n\n                elif (rv[-len(suffix)-2:-len(suffix)] in\n                      (\"ar\", \"er\", \"ir\")):\n                    word = suffix_replace(word, suffix, \"e\")\n                    r1 = suffix_replace(r1, suffix, \"e\")\n                    r2 = suffix_replace(r2, suffix, \"e\")\n                    rv = suffix_replace(rv, suffix, \"e\")\n                break\n\n        # STEP 1: Standard suffix removal\n        for suffix in self.__step1_suffixes:\n            if word.endswith(suffix):\n                if suffix == \"amente\" and r1.endswith(suffix):\n                    step1_success = True\n                    word = word[:-6]\n                    r2 = r2[:-6]\n                    rv = rv[:-6]\n\n                    if r2.endswith(\"iv\"):\n                        word = word[:-2]\n                        r2 = r2[:-2]\n                        rv = rv[:-2]\n\n                        if r2.endswith(\"at\"):\n                            word = word[:-2]\n                            rv = rv[:-2]\n\n                    elif r2.endswith((\"os\", \"ic\")):\n                        word = word[:-2]\n                        rv = rv[:-2]\n\n                    elif r2 .endswith(\"abil\"):\n                        word = word[:-4]\n                        rv = rv[:-4]\n\n                elif (suffix in (\"amento\", \"amenti\",\n                                 \"imento\", \"imenti\") and\n                      rv.endswith(suffix)):\n                    step1_success = True\n                    word = word[:-6]\n                    rv = rv[:-6]\n\n                elif r2.endswith(suffix):\n                    step1_success = True\n                    if suffix in (\"azione\", \"azioni\", \"atore\", \"atori\"):\n                        word = word[:-len(suffix)]\n                        r2 = r2[:-len(suffix)]\n                        rv = rv[:-len(suffix)]\n\n                        if r2.endswith(\"ic\"):\n                            word = word[:-2]\n                            rv = rv[:-2]\n\n                    elif suffix in (\"logia\", \"logie\"):\n                        word = word[:-2]\n                        rv = word[:-2]\n\n                    elif suffix in (\"uzione\", \"uzioni\",\n                                    \"usione\", \"usioni\"):\n                        word = word[:-5]\n                        rv = rv[:-5]\n\n                    elif suffix in (\"enza\", \"enze\"):\n                        word = suffix_replace(word, suffix, \"te\")\n                        rv = suffix_replace(rv, suffix, \"te\")\n"}