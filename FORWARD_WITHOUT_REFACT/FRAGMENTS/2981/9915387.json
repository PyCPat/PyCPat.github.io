{"BEFORE":"        x = F.pad(x, (0, pad), \"reflect\")\n        y = x.view(batch_size, -1, self.period).contiguous()\n        y = y.unsqueeze(1)\n        features = list()\n        for module in self.discriminator:\n            y = module(y)\n            features.append(y)\n        return features[-1], features[:-1]\n","AFTER":"        y = y.unsqueeze(1)\n        out1 = self.layer(y)\n        return self.output(out1)\n"}