{"BEFORE":"        intra_rnn = x.permute(0, 3, 2, 1).contiguous().view(B*S, K, N)\n        # [BS, K, H]\n        intra_rnn, _ = self.intra_rnn(intra_rnn)\n        # [BS, K, N]\n        intra_rnn = self.intra_linear(intra_rnn)\n        # [BS, N, K]\n        intra_rnn = intra_rnn.permute(0, 2, 1).contiguous()\n        intra_rnn = self.intra_norm(intra_rnn)\n        # [B, S, N, K]\n        intra_rnn = intra_rnn.view(B, S, N, K)\n        # [B, N, K, S]\n        intra_rnn = intra_rnn.permute(0, 2, 3, 1).contiguous()\n        intra_rnn = intra_rnn + x\n\n        # inter RNN\n        # [BK, S, N]\n        inter_rnn = intra_rnn.permute(0, 2, 3, 1).contiguous().view(B*K, S, N)\n        # [BK, S, H]\n        inter_rnn, _ = self.inter_rnn(inter_rnn)\n        # [BK, S, N]\n        inter_rnn = self.inter_linear(inter_rnn)\n        # [BK, N, S]\n        inter_rnn = inter_rnn.permute(0, 2, 1).contiguous()\n        inter_rnn = self.inter_norm(inter_rnn)\n        # [B, K, N, S]\n        inter_rnn = inter_rnn.view(B, K, N, S)\n        # [B, N, K, S]\n        inter_rnn = inter_rnn.permute(0, 2, 1, 3).contiguous()\n","AFTER":"        intra_rnn = x.permute(0, 3, 2, 1).contiguous().view(B*S, K, N)\n        # [BS, K, H]\n        intra_rnn, _ = self.intra_rnn(intra_rnn)\n        # [BS, K, N]\n        intra_rnn = self.intra_linear(intra_rnn.contiguous().view(B*S*K, -1)).view(B*S, K, -1)\n        # [B, S, K, N]\n        intra_rnn = intra_rnn.view(B, S, K, N)\n        # [B, N, K, S]\n        intra_rnn = intra_rnn.permute(0, 3, 2, 1).contiguous()\n        intra_rnn = self.intra_norm(intra_rnn)\n        \n        # [B, N, K, S]\n        intra_rnn = intra_rnn + x\n\n        # inter RNN\n        # [BK, S, N]\n        inter_rnn = intra_rnn.permute(0, 2, 3, 1).contiguous().view(B*K, S, N)\n        # [BK, S, H]\n        inter_rnn, _ = self.inter_rnn(inter_rnn)\n        # [BK, S, N]\n        inter_rnn = self.inter_linear(inter_rnn.contiguous().view(B*S*K, -1)).view(B*K, S, -1)\n        # [B, K, S, N]\n        inter_rnn = inter_rnn.view(B, K, S, N)\n        # [B, N, K, S]\n        inter_rnn = inter_rnn.permute(0, 3, 1, 2).contiguous()\n        inter_rnn = self.inter_norm(inter_rnn)\n"}