{"BEFORE":"        targets = batch[\"targets\"].to(device)\n        \n        inputs = F.softmax(predict, dim=1)       \n        \n        #flatten label and prediction tensors\n        inputs = inputs.contiguous().view(-1)\n        targets = targets.contiguous().view(-1)\n        \n        intersection = (inputs * targets).sum()                            \n        dice = (2.*intersection + self.eps)\/(inputs.sum() + targets.sum() + self.eps)  \n        \n        loss =  1 - dice\n","AFTER":"        labels = batch[\"targets\"].to(device)\n        inputs = F.softmax(predict, dim=1)  \n\n        tp = torch.sum(labels*inputs, dim=(2, 3))\n        fn = torch.sum(labels*(1-inputs), dim=(2, 3))\n        fp = torch.sum((1-labels)*inputs, dim=(2, 3))\n\n        dice_score = (tp + 1e-6) \/ (tp +  fn + fp + 1e-6)\n        dice_score = torch.sum(1 - dice_score, dim=-1)\n\n        loss = dice_score \/ labels.shape[1]\n"}