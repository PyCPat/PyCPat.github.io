{"BEFORE":"        b = src.shape[0]\n","AFTER":"        b, n, num_mem, device = *src.shape, self.num_mem, src.device\n        mems = default(mems, self.memory_slots)\n\n        if mems.ndim == 2:\n            mems = repeat(mems, 'n d -> b n d', b = b)\n\n        enc = self.encoder(src, context = mems)\n        out = self.decoder(tgt, context = enc)\n\n        # update memory with attention\n        mem_mask = torch.eye(num_mem, num_mem, device = device).bool()\n        mem_mask = F.pad(mem_mask, (0, n), value = True)\n"}