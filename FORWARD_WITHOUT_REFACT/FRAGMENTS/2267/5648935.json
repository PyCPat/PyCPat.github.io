{"BEFORE":"        self.kernel_size, self.stride = kernel_size, stride\n\n        self.bottleneck_conv2d = nn.Conv2d(in_channels, hidden_channels, kernel_size=(1,1), stride=(1,1))\n        self.conv2d = nn.Conv2d(hidden_channels, growth_rate, kernel_size=kernel_size, stride=stride)\n","AFTER":"    def __init__(self, in_channels, out_channels, growth_rate, kernel_size, stride=(1,1), hidden_channels=128, num_layers=3, eps=EPS):\n        super().__init__()\n\n        net = []\n\n        num_features = in_channels\n\n        for idx in range(num_layers):\n            net.append(DenseLayer(num_features, growth_rate, kernel_size, stride=stride, hidden_channels=hidden_channels, eps=eps))\n            num_features += growth_rate\n\n        self.net = nn.Sequential(*net)\n        self.transition2d = Transition2d(num_features, out_channels, eps)\n"}