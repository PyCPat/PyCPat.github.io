{"BEFORE":"        qkv = self.qkv(x).reshape(B, N, 3, self.num_heads, C \/\/ self.num_heads).permute(2, 0, 3, 1, 4)\n        q, k, v = qkv[0], qkv[1], qkv[2]\n\n        attn = (q @ k.transpose(-2, -1)) * self.scale\n        attn = attn.softmax(dim=-1)\n        attn = self.attn_drop(attn)\n\n        x = (attn @ v).transpose(1, 2).reshape(B, N, C)\n        x = self.proj(x)\n        x = self.proj_drop(x)\n        return x\n","AFTER":"        qkv = self.qkv(x).chunk(3, dim = -1)\n        q, k, v = map(lambda t: rearrange(t, 'b n (h d) -> b h n d', h = self.heads), qkv)\n\n        q = q * self.scale\n\n        attn = einsum('b h i d, b h j d -> b h i j', q, k)\n        attn = attn.softmax(dim=-1)\n        attn = self.attn_drop(attn)\n\n        x = einsum('b h i j, b h j d -> b h i d', attn, v)\n        x = rearrange(x, 'b h n d -> b n (h d)')\n\n        return self.proj_drop(self.proj(x))\n"}