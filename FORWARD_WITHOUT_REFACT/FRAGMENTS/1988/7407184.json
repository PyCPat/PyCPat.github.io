{"BEFORE":"    def forward(self, x):\n        # The use of negative indices on the transpose allow for expanded SqueezeExcite\n        batch, channels, timesteps = x.size()[:3]\n        y = self.pool(x)  # [B, C, T - context_window + 1]\n        y = y.transpose(1, -1)  # [B, T - context_window + 1, C]\n        y = self.fc(y)  # [B, T - context_window + 1, C]\n        y = y.transpose(1, -1)  # [B, C, T - context_window + 1]\n","AFTER":"    def forward(self, x: torch.Tensor) -> torch.Tensor:\n        \"\"\"\n        Args:\n            x : Tensor of shape (batch, channels, time)\n\n        Returns:\n            Tensor of shape (batch, channels, time)\n        \"\"\"\n        batch, channels, timesteps = x.size()[:3]\n        y = self.pool(x)  # [B, C, T - context_window + 1]\n        y = rearrange(y, \"b c t_pool -> b t_pool c\")\n        y = self.fc(y)  # [B, T - context_window + 1, C]\n        y = rearrange(y, \"b t_pool c -> b c t_pool\")\n"}