{"BEFORE":"            values.append(q_function(x, action))\n        values = torch.cat(values, dim=0)\n\n        if reduction == 'min':\n            return values.min(dim=0)\n        elif reduction == 'max':\n            return values.max(dim=0)\n        elif reduction == 'mean':\n            return values.mean(dim=0)\n        else:\n            raise ValueError\n\n    def compute_td(self, obs_t, act_t, rew_tp1, q_tp1, gamma=0.99):\n","AFTER":"            values.append(q_func(x, action).view(1, x.shape[0], 1))\n        values = torch.cat(values, dim=0)\n\n        if reduction == 'min':\n            return values.min(dim=0).values\n        elif reduction == 'max':\n            return values.max(dim=0).values\n        elif reduction == 'mean':\n            return values.mean(dim=0)\n        elif reduction == 'none':\n            return values\n        else:\n            raise ValueError\n\n    def compute_td(self, obs_t, act_t, rew_tp1, q_tp1, gamma=0.99):\n"}