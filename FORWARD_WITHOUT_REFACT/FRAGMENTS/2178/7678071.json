{"BEFORE":"        x = self.multiPoolPrepare(x)\n\n        x = self.l_relu(self.conv1(x))\n        x = self.multiMaxPooling1(x)\n\n        x = self.l_relu(self.conv2(x))\n        x = self.multiMaxPooling2(x)\n\n        x = self.l_relu(self.conv3(x))\n        x = self.multiMaxPooling3(x)\n\n        x = self.l_relu(self.conv4(x))\n        x = self.l_relu(self.conv5(x))\n\n        x = self.unwrapPrepare(x)\n        x = self.unwrapPool3(x)\n        x = self.unwrapPool2(x)\n        x = self.unwrapPool1(x)\n\n        y = x.view(self.outChans, self.imH, self.imW, -1)\n        y = y.permute(3, 1, 2, 0)\n        y = self.l_relu(self.decode(y))\n","AFTER":"        x = self.multiPoolPrepare(x)\n        b, _, _, _ = x.size()\n        y = torch.zeros(b, self.outChans, self.imH, self.imW)\n        for i in range(self.imH):\n            for j in range(self.imW):\n                y[:, :, i, j] = self.base_net(x[:, :, i:i+self.pH, j:j+self.pW])\n        return y\n"}