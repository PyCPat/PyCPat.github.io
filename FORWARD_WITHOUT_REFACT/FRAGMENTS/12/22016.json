{"BEFORE":"        if self.scale != 1:\n            x = F.interpolate(x, scale_factor= 1. \/ self.scale, mode=\"bilinear\", align_corners=False)\n        x = self.conv0(x)\n        x = self.convblock(x) + x\n        x = self.conv1(x)\n        flow = x\n        if self.scale != 1:\n            flow = F.interpolate(flow, scale_factor= self.scale, mode=\"bilinear\", align_corners=False)\n        return flow\n","AFTER":"    def forward(self, x, flow, scale):\n        if scale != 1:\n            x = F.interpolate(x, scale_factor = 1. \/ scale, mode=\"bilinear\", align_corners=False)\n        if flow != None:\n            flow = F.interpolate(flow, scale_factor = 1. \/ scale, mode=\"bilinear\", align_corners=False) * 1. \/ scale\n            x = torch.cat((x, flow), 1)\n        x = self.conv0(x)\n        x = self.convblock(x) + x\n        tmp = self.lastconv(x)\n        tmp = F.interpolate(tmp, scale_factor = scale * 2, mode=\"bilinear\", align_corners=False)\n        flow = tmp[:, :4] * scale * 2\n        mask = tmp[:, 4:5]\n        return flow, mask\n"}