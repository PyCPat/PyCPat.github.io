{"BEFORE":"            pass\n","AFTER":"        self.loss_type = loss_type\n        if 'softmax' in self.loss_type:\n            self.fc_layer = nn.Sequential(nn.Dropout(), nn.Linear(reduce_dim, num_classes))\n            self._init_fc(self.fc_layer)\n            if 'labelsmooth' in self.loss_type:\n                self.ce_loss = CrossEntropyLabelSmooth(num_classes)\n            else:\n                self.ce_loss = nn.CrossEntropyLoss()  # .cuda()\n        elif 'arcface' in self.loss_type:\n            self.fc_layer = ArcMarginProduct(reduce_dim, num_classes)\n            if 'labelsmooth' in self.loss_type:\n                self.ce_loss = CrossEntropyLabelSmooth(num_classes)\n            else:\n                self.ce_loss = nn.CrossEntropyLoss()  # .cuda()\n        elif 'circle' in self.loss_type:\n"}