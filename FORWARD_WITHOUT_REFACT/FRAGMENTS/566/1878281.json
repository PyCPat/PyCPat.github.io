{"BEFORE":"            out_channels = [\n                out_channels for _ in range(num_blocks)\n            ]\n            if depth is None or type(depth) is int:\n                depth = [\n                    None for _ in range(num_blocks)\n                ]\n        elif type(out_channels) is list:\n            if depth is None or type(depth) is int:\n                depth = [\n                    None for _ in range(num_blocks)\n                ]\n        else:\n            raise ValueError(\"Not support `out_channels`={}\".format(out_channels))\n\n        net = []\n        for idx in range(num_blocks):\n            net.append(D2Block(in_channels, out_channels, kernel_size, depth=depth[idx], eps=eps))\n            in_channels += out_channels[-1]\n","AFTER":"            growth_rate = [\n                growth_rate for _ in range(num_blocks)\n            ]\n        elif type(growth_rate) is list:\n            pass\n        else:\n            raise ValueError(\"Not support `growth_rate`={}\".format(growth_rate))\n            \n        if depth is None:\n            depth = [\n                None for _ in range(num_blocks)\n            ]\n        elif type(depth) is int:\n            depth = [\n                depth for _ in range(num_blocks)\n            ]\n\n        net = []\n\n        for idx in range(num_blocks):\n            net.append(D2Block(in_channels, growth_rate[idx], kernel_size, depth=depth[idx], eps=eps))\n            in_channels += growth_rate[idx] * depth[idx]\n"}