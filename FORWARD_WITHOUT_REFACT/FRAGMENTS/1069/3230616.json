{"BEFORE":"                ResnetBlock(dim_out, dim_out),\n                SpatioTemporalAttention(dim = dim_out, **attn_kwargs) if self_attend else None,\n                Downsample(dim_out, downsample_time = compress_time)\n            ]))\n\n            self.ups.append(mlist([\n                ResnetBlock(dim_out * 2, dim_in, timestep_cond_dim = timestep_cond_dim),\n                ResnetBlock(dim_in + dim_out, dim_in),\n","AFTER":"        for _, self_attend, (dim_in, dim_out), compress_time, resnet_block_depth in zip(range(num_layers), self_attns, dim_in_out, temporal_compression, resnet_block_depths):\n            assert resnet_block_depth >= 1\n\n            self.downs.append(mlist([\n                ResnetBlock(dim_in, dim_out, timestep_cond_dim = timestep_cond_dim),\n                mlist([ResnetBlock(dim_out, dim_out) for _ in range(resnet_block_depth)]),\n                SpatioTemporalAttention(dim = dim_out, **attn_kwargs) if self_attend else None,\n                Downsample(dim_out, downsample_time = compress_time)\n            ]))\n\n            self.ups.append(mlist([\n                ResnetBlock(dim_out * 2, dim_in, timestep_cond_dim = timestep_cond_dim),\n                mlist([ResnetBlock(dim_in + (dim_out if ind == 0 else 0), dim_in) for ind in range(resnet_block_depth)]),\n"}