{"BEFORE":"        x = self.final_conv(self.blocks(x))\n        x = self.final_linear(x.view(x.shape[0], -1))\n             \n        return x.squeeze()\n","AFTER":"        out = self.blocks(x)\n        batch, channel, height, width = out.shape\n\n        group = min(batch, self.stddev_group)\n        stddev = out.view(\n            group, -1, self.stddev_feat, channel \/\/ self.stddev_feat, height, width\n        )\n        stddev = torch.sqrt(stddev.var(0, unbiased=False) + 1e-8)\n        stddev = stddev.mean([2, 3, 4], keepdims=True).squeeze(2)\n        stddev = stddev.repeat(group, 1, height, width)\n        out = torch.cat([out, stddev], 1)\n        \n        out = self.final_conv(out)\n        out = out.view(out.shape[0], -1)\n        out = self.final_linear(out)\n             \n        return out.squeeze()\n"}