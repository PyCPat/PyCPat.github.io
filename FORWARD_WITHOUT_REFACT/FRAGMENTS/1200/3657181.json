{"BEFORE":"        kv = self.w_kv(h).view(2*batch_size, -1, total_len, embed_dim)\n        r_emb = self.w_r(self.R[-total_len:]).view(1, -1, total_len, embed_dim)\n        k, v = kv.chunk(2, dim=0)\n","AFTER":"        h = torch.cat((mem, x), dim=1)\n        \n        batch_size, seg_len, embed_dim = x.shape\n        mem_len = h.shape[1] - seg_len\n        total_len = h.shape[1]\n        \n        # compute projections of input and memory embeddings\n        q = self.w_q(x).view(batch_size, -1, seg_len, embed_dim)\n        k = self.w_k(h).view(batch_size, -1, total_len, embed_dim)\n        v = self.w_v(h).view(batch_size, -1, total_len, embed_dim)\n"}