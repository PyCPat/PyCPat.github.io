{"BEFORE":"        x = self.conv_input(input_sp_tensor)\n\n        x_conv1 = self.conv1(x)\n        x_conv2 = self.conv2(x_conv1)\n        x_conv3 = self.conv3(x_conv2)\n        x_conv4 = self.conv4(x_conv3)\n\n        # for detection head\n        # [200, 176, 5] -> [200, 176, 2]\n        out = self.conv_out(x_conv4)\n        spatial_features = out.dense()\n\n        N, C, D, H, W = spatial_features.shape\n        spatial_features = spatial_features.view(N, C * D, H, W)\n\n        ret = {'spatial_features': spatial_features}\n\n        # for segmentation head\n        # [400, 352, 11] <- [200, 176, 5]\n        x_up4 = self.UR_block_forward(x_conv4, x_conv4, self.conv_up_t4,\n                                      self.conv_up_m4, self.inv_conv4)\n        # [800, 704, 21] <- [400, 352, 11]\n        x_up3 = self.UR_block_forward(x_conv3, x_up4, self.conv_up_t3,\n                                      self.conv_up_m3, self.inv_conv3)\n        # [1600, 1408, 41] <- [800, 704, 21]\n        x_up2 = self.UR_block_forward(x_conv2, x_up3, self.conv_up_t2,\n                                      self.conv_up_m2, self.inv_conv2)\n        # [1600, 1408, 41] <- [1600, 1408, 41]\n        x_up1 = self.UR_block_forward(x_conv1, x_up2, self.conv_up_t1,\n                                      self.conv_up_m1, self.conv5)\n\n        seg_features = x_up1.features\n","AFTER":"        x = self.conv_input(input_sp_tensor)\n\n        encode_features = []\n        for i, stage_name in enumerate(self.encoder):\n            stage = getattr(self, stage_name)\n            x = stage(x)\n            encode_features.append(x)\n\n        # for detection head\n        # [200, 176, 5] -> [200, 176, 2]\n        out = self.conv_out(encode_features[-1])\n        spatial_features = out.dense()\n\n        N, C, D, H, W = spatial_features.shape\n        spatial_features = spatial_features.view(N, C * D, H, W)\n\n        ret = {'spatial_features': spatial_features}\n\n        # for segmentation head, with output shape:\n        # [400, 352, 11] <- [200, 176, 5]\n        # [800, 704, 21] <- [400, 352, 11]\n        # [1600, 1408, 41] <- [800, 704, 21]\n        # [1600, 1408, 41] <- [1600, 1408, 41]\n        decode_features = []\n        x = encode_features[-1]\n        for i in range(self.stage_num, 0, -1):\n            x = self.UR_block_forward(\n                encode_features[i - 1],\n                x,\n                getattr(self, 'conv_up_t{}'.format(i)),\n                getattr(self, 'conv_up_m{}'.format(i)),\n                getattr(self, 'inv_conv{}'.format(i)),\n            )\n            decode_features.append(x)\n\n        seg_features = decode_features[-1].features\n"}