{"BEFORE":"        conv = self.cnn(input)\n        b, c, h, w = conv.size()\n        assert h == 1, \"the height of conv must be 1\"\n        conv = conv.squeeze(2)\n        conv = conv.permute(2, 0, 1)  # [w, b, c]\n\n        # rnn features\n        output = self.rnn(conv)\n\n        # add log_softmax to converge output\n        output = F.log_softmax(output, dim=2)\n","AFTER":"        output = self.rnn(conv)\n        cls = self.classifier(output)\n        # add log_softmax to converge output\n        output = F.log_softmax(cls, dim=2)\n        if self.return_cls:\n            return output, F.softmax(cls, 2)\n\n        return output\n"}