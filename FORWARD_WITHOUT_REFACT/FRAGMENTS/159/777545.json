{"BEFORE":"            hidden = self.init_hidden(x.shape[-2:], x.shape[:-3])\n\n        hs = [hidden[0][i] for i in range(self.num_layers)]\n        cs = [hidden[1][i] for i in range(self.num_layers)]\n        for _ in range(num_repeats):\n            for i, block in enumerate(self.blocks):\n                hs[i], cs[i] = block(x, (hs[i], cs[i]))\n\n        return hs[-1], (torch.stack(hs), torch.stack(cs))\n","AFTER":"            hidden = self.init_hidden(x.shape[-2:], x.shape[:-3])\n\n        hs, cs = hidden\n        for _ in range(num_repeats):\n            for i, block in enumerate(self.blocks):\n                hs[i], cs[i] = block(x, (hs[i], cs[i]))\n\n        return hs[-1], (hs, cs)\n"}