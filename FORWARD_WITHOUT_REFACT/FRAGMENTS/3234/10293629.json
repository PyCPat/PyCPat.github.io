{"BEFORE":"        cosine = F.linear(F.normalize(input), F.normalize(self.weight))\n        angles = torch.acos(torch.clamp(cosine, -1, 1))\n        phi = torch.cos(angles + self.m)\n","AFTER":"        cosine = F.linear(F.normalize(input), F.normalize(self.weight))\n        # angles = torch.acos(torch.clamp(cosine, -1, 1))\n        # phi = torch.cos(angles + self.m)\n        sine = torch.sqrt((1.0 - torch.pow(cosine, 2)).clamp(0, 1))\n        phi = cosine * self.cos_m - sine * self.sin_m\n        if self.easy_margin:\n            phi = torch.where(cosine > 0, phi, cosine)\n        else:\n            phi = torch.where(cosine > self.th, phi, cosine - self.mm)\n\n        one_hot = torch.zeros(cosine.size(), device='cuda')\n"}