{"BEFORE":"            mask = torch.ones_like(gt).bool()\n        assert mask.size() == gt.size()\n        if not isinstance(mask, torch.BoolTensor):\n            assert torch.all(torch.logical_or(mask == 0, mask == 1))\n            mask = mask.bool()\n        return self.smooth_l1_loss(pred[mask], gt[mask])\n","AFTER":"            mask = torch.ones_like(gt).bool()\n        assert mask.size() == gt.size()\n        loss = self.smooth_l1_loss(pred * mask, gt * mask)\n        return loss.sum() \/ (mask.sum() + self.eps)\n"}