{"BEFORE":"        x = self.downsmaple(x)\n\n        for layer in self.encoder:\n            x = layer(x)\n        \n        x, cam_logit = self.cam(x)\n        x = F.relu(x)\n        \n        gamma, beta = self.gamma_beta(x)\n","AFTER":"    def forward(self, x, return_heatmap=False):\n        x = self.input(x)\n        x = self.down(x)\n        x = self.resblocks(x)\n        x, cam_logit, heatmap = self.cam(x)\n        gamma, beta = self.gammabeta(self.flatten(x))\n\n        for block in self.adalin_resblocks:\n            x = block(x, gamma, beta)\n        x = self.up(x)\n        x = self.output(x)\n\n        if return_heatmap: # we don't need heatmap when training\n            return x, cam_logit, heatmap\n        return x, cam_logit\n"}