{"BEFORE":"        num_classes = int(sequence.shape[1])\n        one_hot_positions = F.one_hot(positions, num_classes)\n        if self._is_half:\n            one_hot_positions = one_hot_positions.half()\n        else:\n            one_hot_positions = one_hot_positions.float()\n        return torch.matmul(one_hot_positions.detach(), sequence)\n","AFTER":"        num_classes = int(sequence.shape[1])\n        one_hot_positions = F.one_hot(positions, num_classes).to(dtype=sequence.dtype)\n"}