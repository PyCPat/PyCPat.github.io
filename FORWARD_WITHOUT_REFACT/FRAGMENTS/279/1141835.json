{"BEFORE":"        self.linear = nn.Linear(512*block.expansion, num_classes)\n","AFTER":"        self.relu = nn.ReLU(inplace=True)\n        self.maxpool = nn.MaxPool2d(kernel_size=3, stride=2, padding=1)\n\n        # ImageNet 350 epochs training setup\n        # self.maxpool = nn.Sequential(\n        #     nn.Conv2d(64, 64, kernel_size=3, stride=2, padding=1, bias=False),\n        #     nn.BatchNorm2d(64),\n        #     nn.ReLU()\n        # )\n\n        self.layer1 = self._make_layer(block, 64, num_blocks[0])\n        self.layer2 = self._make_layer(block, 128, num_blocks[1], stride=2)\n        self.layer3 = self._make_layer(block, 256, num_blocks[2], stride=2)\n        self.layer4 = self._make_layer(block, 512, num_blocks[3], stride=2)\n\n        self.avgpool = nn.AdaptiveAvgPool2d((1, 1))\n        self.fc = nn.Sequential(\n            nn.Dropout(0.3), # All architecture deeper than ResNet-200 dropout_rate: 0.2\n            nn.Linear(512 * block.expansion, num_classes)\n        )\n"}