{"BEFORE":"        if random.random() < 0.2:\n            audio_mask = (torch.arange(audio.shape[1], device=audio.device)[None, :, None] < audio_len[:, None, None]).float()\n            x = torch.exp(audio - 1e-6) * audio_mask\n            y = torch.cat([x[1:], x[:1]])\n            return torch.log(0.9 * x + 0.1 * y + 1e-6) * audio_mask, audio_len\n        return audio, audio_len\n","AFTER":"        assert len(audio.shape) == 3\n\n        if self.do_timestretch and random.random() < AUGUMENT_RATE:\n            audio, audio_len = self.timestretch(audio, audio_len)\n        if random.random() < AUGUMENT_RATE:\n            audio = self.pitchshift(audio)\n        if random.random() < AUGUMENT_RATE:\n            audio = self.timemask(audio)\n        if random.random() < AUGUMENT_RATE:\n            audio = self.freqmask(audio)\n        if random.random() < AUGUMENT_RATE:\n            audio = self.mixnoise(audio)\n        if random.random() < AUGUMENT_RATE:\n            audio = self.mixaudio(audio, audio_len)\n\n        return audio, audio_len\n"}