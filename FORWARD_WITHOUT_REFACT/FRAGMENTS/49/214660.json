{"BEFORE":"        x = self.features(x)\n        x = x.view(-1, self.features_out_size)\n\n        pose_raw = self.pose(x)\n        pose_log = F.log_softmax(pose_raw, dim=1)\n\n        if self.predict_affinity:\n            affinity = self.affinity(x)\n            # Squeeze last (dummy) dimension of affinity prediction\n            # This allows to match the shape (batch_size,) of the target tensor\n            return pose_log, affinity.squeeze(-1)\n        else:\n            return pose_log\n\n\nclass DenseBlock(nn.Module):\n","AFTER":"        raise NotImplementedError\n"}