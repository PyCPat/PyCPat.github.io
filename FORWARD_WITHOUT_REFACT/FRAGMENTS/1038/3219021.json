{"BEFORE":"        pass\n","AFTER":"        super(Decoder, self).__init__()\n\n        assert len(conv_layers) == len(pool_layers)\n        self.n_layers = len(conv_layers)\n\n        self.convolutions = nn.ModuleDict(OrderedDict())\n        for k_layer, conv_layer in enumerate(conv_layers):\n            if not isinstance(conv_layer, Conv2dParams):\n                raise ValueError('Encoder convolution layer not given instance of Conv2dParams')\n\n            self.convolutions.update({'layer_{}'.format(k_layer):\n                                          nn.ConvTranspose2d(**conv_layer.kwargs)})\n\n        for k_layer, pool_layer in enumerate(pool_layers):\n            if not isinstance(pool_layer, Pool2dParams):\n                raise ValueError('Encoder convolution layer not given instance of Pool2dParams')\n\n            self.pools.update({'layer_{}'.format(k_layer):\n                                   nn.MaxPool2d(return_indices=True, **pool_layer.kwargs)})\n\n    def forward(self, x, pool_indices):\n"}