{"BEFORE":"        b, device = x.shape[0], x.device\n","AFTER":"        device = x.device\n        num_steps = default(num_steps, self.num_steps)\n        # Compute sigmas using schedule\n        sigmas = self.sigma_schedule(num_steps, device)\n        # Sample from first sigma distribution\n        x = sigmas[0] * x\n        # Compute gammas\n        gammas = torch.where(\n            (sigmas >= self.s_tmin) & (sigmas <= self.s_tmax),\n            min(self.s_churn \/ num_steps, sqrt(2) - 1),\n            0.0,\n        )\n"}