{"BEFORE":"        out = self.fc3(x)\n        mu, log_std = out.chunk(2, dim=-1)\n        if self.dist_impl == \"pyd\":\n            log_std = torch.tanh(log_std)\n            log_std = self.log_std_low + 0.5 * (\n                self.log_std_high - self.log_std_low\n            ) * (log_std + 1)\n            std = log_std.exp()\n            dist = distributions.SquashedNormal(mu, std)\n        elif self.dist_impl == \"beta\":\n            out = 1.0 + F.softplus(out)\n            alpha, beta = out.chunk(2, dim=-1)\n            dist = distributions.BetaDist(alpha, beta)\n        return dist\n","AFTER":"        out = self.fc3(x)\n        if self.dist_impl == \"pyd\":\n            return distributions.create_tanh_normal(\n                out, self.log_std_low, self.log_std_high\n            )\n        elif self.dist_impl == \"beta\":\n            return distributions.create_beta(out)\n\n\n@gin.configurable\n"}