{"BEFORE":"        stride = self.stride\n        assert (x.data.dim() == 4)\n        B = x.data.size(0)\n        C = x.data.size(1)\n        H = x.data.size(2)\n        W = x.data.size(3)\n        ws = stride\n        hs = stride\n        x = x.view(B, C, H, 1, W, 1).expand(B, C, H, stride, W, stride).contiguous().view(B, C, H * stride, W * stride)\n        return x\n","AFTER":"    def forward(self, x, target_size):\n        assert (x.data.dim() == 4)\n        _, _, H, W = target_size\n        return F.interpolate(x, size=(H, W), mode='nearest')\n"}