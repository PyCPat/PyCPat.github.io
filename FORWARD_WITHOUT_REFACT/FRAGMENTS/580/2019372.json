{"BEFORE":"        batch_size = len(batch)\n\n        # list of transformed images\n        transforms = [self.transform(batch[i % batch_size][0]).unsqueeze_(0)\n                      for i in range(2 * batch_size)]\n        # list of labels\n        labels = [batch[i % batch_size][1] for i in range(2 * batch_size)]\n        # list of filenames\n        fnames = [item[2] for item in batch]\n\n        tuple_of_batches = (\n            torch.cat(transforms, 0),\n            torch.LongTensor(labels),\n            fnames,\n        )\n        return tuple_of_batches\n","AFTER":"        batch_size = len(batch)\n\n        # list of transformed images\n        transforms = [self.transform(batch[i % batch_size][0]).unsqueeze_(0)\n                      for i in range(2 * batch_size)]\n        # list of labels\n        labels = torch.LongTensor([item[1] for item in batch])\n        # list of filenames\n        fnames = [item[2] for item in batch]\n\n        # tuple of transforms\n        transforms = (\n            torch.cat(transforms[:batch_size], 0),\n            torch.cat(transforms[batch_size:], 0)\n        )\n\n        return transforms, labels, fnames\n"}