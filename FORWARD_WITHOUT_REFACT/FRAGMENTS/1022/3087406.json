{"BEFORE":"        semantic_embeddings = []\n\n        for i, meta_path in enumerate(self.meta_paths):\n            new_g = g_list[meta_path]\n            semantic_embeddings.append(self.mods[i](new_g, h).flatten(1))\n        #semantic_embeddings = th.stack(semantic_embeddings, dim=1)  # (N, M, D * K)\n\n        return self.SemanticConv(semantic_embeddings)  # (N, D * K)\n","AFTER":"        outputs = {g.dsttypes[0]: [] for s, g in g_list.items()}\n\n        for mp, meta_path in self.meta_paths_dict.items():\n            new_g = g_list[mp]\n            h = h_dict[new_g.srctypes[0]]\n            outputs[new_g.dsttypes[0]].append(self.mods[mp](new_g, h).flatten(1))\n        #semantic_embeddings = th.stack(semantic_embeddings, dim=1)  # (N, M, D * K)\n        # Aggregate the results for each destination node type\n        rsts = {}\n        for ntype, ntype_outputs in outputs.items():\n            if len(ntype_outputs) != 0:\n                rsts[ntype] = self.SemanticConv(ntype_outputs) # (N, D * K)\n        return rsts\n"}