{"BEFORE":"        loss = F.binary_cross_entropy_with_logits(pred, target, reduction='none')\n        \n        pred_prob = torch.sigmoid(pred)  # prob from logits\n        binary_target = (target>0.0).float()\n        alpha_factor = binary_target * self.alpha + (1 - binary_target) * (1 - self.alpha)\n        modulating_factor = torch.abs(target - pred_prob) ** self.gamma\n        loss = loss * alpha_factor * modulating_factor\n        loss = loss.sum() \/ binary_target.sum()\n","AFTER":"        pred_sigmoid = pred.sigmoid()\n        target = target.type_as(pred)\n        focal_weight = (target - pred_sigmoid).abs().pow(self.gamma)\n        loss = F.binary_cross_entropy_with_logits(pred, target, reduction='none') * focal_weight\n        loss = loss.sum() \/ (target>0.0).float().sum()\n"}