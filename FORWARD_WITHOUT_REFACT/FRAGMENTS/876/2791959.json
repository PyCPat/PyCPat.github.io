{"BEFORE":"\t\t\tAdainResBlk(dim_in=512, dim_out=512, style_dim=config['style_dim'], upsample=True),\n\t\t\tAdainResBlk(dim_in=512, dim_out=256, style_dim=config['style_dim'], upsample=True),\n\t\t\tAdainResBlk(dim_in=256, dim_out=128, style_dim=config['style_dim'], upsample=True)\n\t\t)\n\n\t\tself.to_rgb = nn.Sequential(\n\t\t\tnn.InstanceNorm2d(num_features=128, affine=True),\n\t\t\tnn.LeakyReLU(negative_slope=0.2),\n\t\t\tnn.Conv2d(in_channels=128, out_channels=3, kernel_size=1, stride=1, padding=0)\n\t\t)\n","AFTER":"\t\tself.class_embedding = nn.Embedding(num_embeddings=config['n_classes'], embedding_dim=config['class_dim'])\n\n\t\tself.adains = nn.Sequential(\n\t\t\tAdainResBlk(dim_in=config['content_depth'] + config['class_dim'], dim_out=512, style_dim=config['class_dim'], upsample=False),\n\t\t\tAdainResBlk(dim_in=512, dim_out=512, style_dim=config['class_dim'], upsample=False)\n\t\t)\n\n\t\tself.convs = nn.Sequential(\n\t\t\tnn.Upsample(scale_factor=2),\n\t\t\tnn.ReflectionPad2d(padding=2),\n\t\t\tnn.Conv2d(in_channels=512, out_channels=256, kernel_size=5, stride=1),\n\t\t\tnn.InstanceNorm2d(num_features=256),\n\t\t\tnn.ReLU(),\n\n\t\t\tnn.Upsample(scale_factor=2),\n\t\t\tnn.ReflectionPad2d(padding=2),\n\t\t\tnn.Conv2d(in_channels=256, out_channels=128, kernel_size=5, stride=1),\n\t\t\tnn.InstanceNorm2d(num_features=128),\n\t\t\tnn.ReLU(),\n\n\t\t\tnn.Upsample(scale_factor=2),\n\t\t\tnn.ReflectionPad2d(padding=2),\n\t\t\tnn.Conv2d(in_channels=128, out_channels=64, kernel_size=5, stride=1),\n\t\t\tnn.InstanceNorm2d(num_features=64),\n\t\t\tnn.ReLU(),\n\n\t\t\tnn.ReflectionPad2d(padding=3),\n\t\t\tnn.Conv2d(in_channels=64, out_channels=3, kernel_size=7, stride=1),\n\t\t\tnn.Tanh()\n\t\t)\n\n\t\tnn.init.uniform_(self.class_embedding.weight, a=-0.05, b=0.05)\n"}