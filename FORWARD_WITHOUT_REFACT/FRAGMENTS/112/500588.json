{"BEFORE":"    def forward(self, targets, enc_output, enc_mask, cache):\n        decoder_output = targets\n        for i, dec_layer in enumerate(self.layers):\n            layer_cache = None\n            if cache is not None:\n                if i not in cache:\n                    cache[i] = {}\n                layer_cache = cache[i]\n            decoder_output = dec_layer(decoder_output, enc_output, tgt_mask, enc_mask, layer_cache)\n        return self.last_norm(decoder_output)\n","AFTER":"        tgt_mask = target_mask(tgt)\n        \n        decoder_output = tgt\n        for i, dec_layer in enumerate(self.layers):\n            decoder_output = dec_layer(decoder_output, tgt_mask, memory, memory_mask)\n        decoder_output = self.fc(self.last_norm(decoder_output))\n        return decoder_output\n"}