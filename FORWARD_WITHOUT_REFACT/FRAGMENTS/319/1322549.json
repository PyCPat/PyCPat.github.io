{"BEFORE":"        is_edge_like = is_edge_index(edge_index)\n\n        if cache is None:\n            if self.normalize:\n                if is_edge_like:\n                    edge_index, edge_weight = gcn_norm(  # yapf: disable\n                        edge_index, edge_weight, x.size(0), False,\n                        self.add_self_loops, dtype=x.dtype)\n                elif isinstance(edge_index, SparseTensor):\n                    edge_index = gcn_norm(  # yapf: disable\n                        edge_index, edge_weight, x.size(0), False,\n                        self.add_self_loops, dtype=x.dtype)\n                else:\n                    # N by N dense adjacency matrix\n                    edge_index = dense_gcn_norm(\n                        edge_index, add_self_loops=self.add_self_loops)\n\n            delta = self.t \/ self.K\n","AFTER":"            if self.add_self_loops:\n                edge_index, edge_weight = make_self_loops(\n                    edge_index, edge_weight, num_nodes=x.size(0))\n\n            if self.normalize:\n                edge_index, edge_weight = make_gcn_norm(\n                    edge_index, edge_weight)\n\n            delta = self.t \/ self.K\n"}