{"BEFORE":"        fmap = img.clone()\n\n        fmap, indices, commit_loss = self.encode(img)\n\n        for dec in self.decoders:\n            fmap = dec(fmap)\n\n        if not return_loss:\n            return fmap\n\n        # generator loss\n\n        labels = torch.cat((torch.zeros(batch, device = device), torch.ones(batch, device = device)), dim = 0)\n\n        if return_discr_loss:\n            labels = torch.flip(labels, (0,))\n\n        real_or_fake = self.disc(torch.cat((fmap, img), dim = 0))\n        gan_loss = F.binary_cross_entropy(real_or_fake, labels)\n\n        if return_discr_loss:\n            return gan_loss\n\n        # reconstruction loss\n\n        recon_loss_fn = F.mse_loss if self.l2_recon_loss else F.l1_loss\n","AFTER":"        fmap = img.clone()\n\n        fmap, indices, commit_loss = self.encode(img)\n\n        fmap = self.decode(fmap)\n\n        if not return_loss:\n            return fmap\n\n        if return_discr_loss:\n            fmap.detach_()\n            fmap_discr_logits, img_discr_logits = map(self.discr, (fmap, img))\n            return self.discr_loss(fmap_discr_logits, img_discr_logits)\n\n        # generator loss\n\n        gen_loss = self.gen_loss(fmap)\n"}