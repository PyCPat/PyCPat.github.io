{"BEFORE":"    def forward(self, x, data_samples=None):\n        loss_aux = dict()\n\n        target = None\n        if data_samples is not None:\n            target = [sample.gt_labels.item for sample in data_samples]\n            target = torch.stack(target)\n            target = target.squeeze()\n\n        # Auxiliary loss\n        if self.aux_head is not None:\n            loss_aux = self.aux_head(x[-2], target)\n","AFTER":"                x: Tuple[Tensor],\n                batch_data_samples: Optional[SampleList] = None) -> tuple:\n\n        loss_aux = dict()\n        # Calculate auxiliary loss if `self.aux_head`\n        # and `batch_data_samples` are not None.\n        if self.aux_head is not None and batch_data_samples is not None:\n            loss_aux = self.aux_head.loss(x[-2], batch_data_samples)\n"}