{"BEFORE":"    def forward(self, f1, f2, f3):\n        f1 = self.upsample(f1, f3.shape[-2:])\n        f2 = self.upsample(f2, f3.shape[-2:])\n        f3 = torch.cat([f1, f2, f3], dim=1)\n        f3 = self.conv1(f3)\n\n        Hf3 = self.Hattn(f3)\n        Wf3 = self.Wattn(f3)\n\n        f3 = self.conv2(Hf3 + Wf3)\n        f3 = self.conv3(f3)\n        f3 = self.conv4(f3)\n        out = self.conv5(f3)\n\n        return f3, out\n","AFTER":"        for i, f in enumerate(feat_maps):\n            if f.shape[-2:] != shape:\n                feat_maps[i] = self.upsample(f, shape)\n                \n        x = torch.cat(feat_maps, dim=1)\n        x = self.conv1(x)\n\n        Hx = self.Hattn(x)\n        Wx = self.Wattn(x)\n\n        x = self.conv2(Hx + Wx)\n        x = self.conv3(x)\n        x = self.conv4(x)\n        out = self.conv5(x)\n\n        return x, out\n"}