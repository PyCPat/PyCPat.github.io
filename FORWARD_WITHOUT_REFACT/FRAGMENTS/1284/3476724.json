{"BEFORE":"    def __init__(self, in_size, out_size, normalize=True, dropout=0.0):\n        super(UnetDown, self).__init__()\n        layers = [nn.Conv2d(in_size, out_size, 4, 2, 1, bias=False)]\n        if normalize:\n            layers.append(nn.InstanceNorm2d(out_size))\n        layers.append(nn.LeakyReLU(0.2))\n        if dropout:\n            layers.append(nn.Dropout(dropout))\n        self.model = nn.Sequential(*layers)\n","AFTER":"    def __init__(self, in_size, out_size):\n        super(UnetDown, self).__init__()\n        layers = [Conv3(in_size, out_size), nn.MaxPool2d(2)]\n"}