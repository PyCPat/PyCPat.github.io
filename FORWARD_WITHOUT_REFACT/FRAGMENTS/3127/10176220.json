{"BEFORE":"        z_flattened = z.view(-1, self.codebook_dim)\n\n        # distances from z to embeddings e_j\n        d = torch.cdist(z_flattened.unsqueeze(0), self.embedding.weight.unsqueeze(0)).squeeze(0)\n","AFTER":"        z_flattened = z.view(-1, self.codebook_dim)\n\n        # distances from z to embeddings e_j (z - e)^2 = z^2 + e^2 - 2 e * z\n        d = torch.sum(z_flattened.pow(2), dim=1, keepdim=True) + \\\n            torch.sum(self.embedding.weight.pow(2), dim=1) - 2 * \\\n            torch.einsum('bd,nd->bn', z_flattened, self.embedding.weight)\n"}