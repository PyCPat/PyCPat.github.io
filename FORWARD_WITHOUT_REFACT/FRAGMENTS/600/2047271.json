{"BEFORE":"        self.root._forward_edge(*args)\n        assert len(self.output_leaves) > 0\n\n        if len(self.output_leaves) == 1:\n            return self.output_leaves[0].outs\n        else:\n            return (output_leaf.outs for output_leaf in self.output_leaves)\n","AFTER":"        if len(self.inputs) == 1:\n            self.inputs[0]._forward_edge(*args)\n        else:\n            assert len(args) == 1, \"Pass multiple inputs in a tuple!\"\n            assert len(args[0]) == len(self.inputs), \"Numbers of inputs don't match!\"\n            for root, arg in zip(self.inputs, args[0]):\n                if isinstance(arg, tuple):\n                    root._forward_edge(*arg)\n                else:\n                    root._forward_edge(arg)\n\n        if len(self.outputs) == 1:\n            return self.outputs[0].outs\n        else:\n            return tuple(output_leaf.outs for output_leaf in self.outputs)\n"}