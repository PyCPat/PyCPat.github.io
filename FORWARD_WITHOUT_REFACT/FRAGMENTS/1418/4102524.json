{"BEFORE":"        x = x.transpose(1, 2) # (B, n_in, N)\n        for conv in self.conv[:-1]:\n            x = self.dropout(F.leaky_relu(conv(x)))\n        x = self.conv[-1](x) # (B, n_out, N)\n        return x.transpose(1, 2).view(B, N, -1) # (B, N, n_out)\n","AFTER":"        x = x.transpose(1, 2) # (B, n_in, N)\n        y = self.net(x)\n        return y.transpose(1, 2).view(B, N, -1) # (B, N, n_out)\n"}