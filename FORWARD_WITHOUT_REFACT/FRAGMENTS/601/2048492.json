{"BEFORE":"        scores, feats = self.mpd(x)\n        score_sd, feats_sd = self.sd(x)\n        return scores + [score_sd], feats + [feats_sd]\n","AFTER":"    def forward(self, x, x_hat=None):\n        \"\"\"\n        Args:\n            x (Tensor): ground truth waveform.\n            x_hat (Tensor): predicted waveform.\n\n        Returns:\n            List[Tensor]: discriminator scores.\n            List[List[Tensor]]: list of list of features from each layers of each discriminator.\n        \"\"\"\n        x_scores = []\n        x_hat_scores = [] if x_hat is not None else None\n        x_feats = []\n        x_hat_feats = [] if x_hat is not None else None\n        for net in self.nets:\n            x_score, x_feat = net(x)\n            x_scores.append(x_score)\n            x_feats.append(x_feat)\n            if x_hat is not None:\n                x_hat_score, x_hat_feat = net(x_hat)\n                x_hat_scores.append(x_hat_score)\n                x_hat_feats.append(x_hat_feat)\n        return x_scores, x_feats, x_hat_scores, x_hat_feats\n"}