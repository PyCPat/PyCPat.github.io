{"BEFORE":"        loss = {}\n        for i in range(n_classes):\n            pi = proba[:, i] * (targets == i) + (1 - proba[:, i]) * (targets != i)\n            ai = self.alpha[i]\n            loss += -ai * (1 - pi) ** self.gamma * torch.log(pi)\n","AFTER":"        proba = self.softmax(logits)\n        n_classes = proba.size(1)\n        loss = torch.zeros_like(targets).type(torch.float)\n        for i in range(n_classes):\n            pi = proba[:, i] * (targets == i) + (1 - proba[:, i]) * (targets != i)\n            ai = self.alpha[i]\n            loss += -ai * (1 - pi) ** self.gamma * torch.log(pi + self.eps)\n"}