{"BEFORE":"        f = self.fe(flatten)\n        return self.policy(f), self.value(f).squeeze(-1)\n","AFTER":"        f = self.fe(flatten)\n        if self.distribution in ['TanhNormal', 'Normal']:\n            mean = self.policy(f)\n            log_std = self.actor_log_std.expand_as(mean)\n            policy = torch.cat((mean, log_std), -1)\n        else:\n            policy = self.policy(f)\n        value = self.value(f).squeeze(-1)\n        return policy, value\n"}