{"BEFORE":"        outs = []\n        if self.has_padding:\n            for i in range(len(inputs[0])):\n                outs.append(self.encoders[i]([inputs[0][i],inputs[1][i]], training=training))\n        else:\n            for i in range(len(inputs)):\n                outs.append(self.encoders[i](inputs[i], training=training))\n        '''\n        if classifier:\n            out = self.fuse(outs, training=training)\n            return self.head(out, training=training)\n        else:\n            out1, out2 = self.contrast(outs[0], outs[1], inputs[2])\n            return out1, out2 \n        '''\n\n        out = self.fuse(outs, training=training)\n        out1, out2 = self.contrast(outs[0], outs[1], inputs[2])\n\n        return self.head(out, training=training), out1, out2    \n","AFTER":"        outs = []\n        if self.has_padding:\n            for i in range(len(inputs[0])):\n                outs.append(self.encoders[i]([inputs[0][i],inputs[1][i]], training=training))\n        else:\n            for i in range(len(inputs)):\n                outs.append(self.encoders[i](inputs[i], training=training))\n        \n        if classifier:\n            #out = self.fuse(outs, training=training)\n            return self.head(outs[1], training=training)\n        else:\n            out1, out2 = self.contrast(outs[0], outs[1], inputs[2])\n            return out1, out2 \n        '''\n"}