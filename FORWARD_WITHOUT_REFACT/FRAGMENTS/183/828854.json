{"BEFORE":"        freqs = torch.fft.rfft(x, dim = 1)\n\n        # get amplitudes\n\n        amp = freqs.abs()\n        amp = self.dropout(amp)\n\n        # topk amplitudes - for seasonality, branded as attention\n\n        _, topk_amp_indices = amp.topk(k = self.K, dim = 1)\n\n        # scatter back\n\n        topk_freqs = torch.zeros_like(freqs).scatter(1, topk_amp_indices, freqs)\n","AFTER":"        freqs = torch.fft.rfft(x, dim = 1)\n\n        # get amplitudes\n\n        amp = freqs.abs()\n        amp = self.dropout(amp)\n\n        # topk amplitudes - for seasonality, branded as attention\n\n        topk_amp, _ = amp.topk(k = self.K, dim = 1, sorted = True)\n\n        # mask out all freqs with lower amplitudes than the lowest value of the topk above\n\n        topk_freqs = freqs.masked_fill(amp < topk_amp[:, -1:], 0.+0.j)\n"}