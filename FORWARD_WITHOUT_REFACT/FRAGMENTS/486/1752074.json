{"BEFORE":"        all_losses = []\n        all_indices = []\n\n        for layer in self.layers:\n            quantized, indices, loss = layer(residual)\n            residual = residual - quantized\n            quantized_out = quantized_out + quantized\n\n            all_indices.append(indices)\n            all_losses.append(loss)\n\n        out_losses, out_indices = map(torch.stack, (all_losses, all_indices))\n        return quantized_out, sum(out_losses), out_indices.permute(1, 0, 2)\n","AFTER":"        all_losses = []\n        all_indices = []\n\n        for layer in self.layers:\n            quantized, indices, loss = layer(residual)\n            residual = residual - quantized\n            quantized_out = quantized_out + quantized\n\n            all_indices.append(indices)\n            all_losses.append(loss)\n\n        out_losses = torch.stack(all_losses, 0).sum()\n        all_indices = torch.stack(all_indices, 1)\n        return quantized_out, out_losses, all_indices\n"}