{"BEFORE":"        if len(node_embeddings.shape)==2:\n            node_num = node_embeddings.shape[0]\n            supports = F.softmax(F.relu(torch.mm(node_embeddings, node_embeddings.transpose(0, 1))), dim=1)\n        else:\n            node_num = node_embeddings.shape[1]\n            supports = F.softmax(F.relu(torch.einsum('bnc,bmc->nm', node_embeddings, node_embeddings)), dim=1)            \n        support_set = [torch.eye(node_num).to(supports.device), supports]\n        for k in range(2, self.cheb_k):\n            support_set.append(torch.matmul(2 * supports, support_set[-1]) - support_set[-2]) \n        x_g = []\n","AFTER":"        support_set = []\n        for support in supports:\n            support_ks = [torch.eye(support.shape[0]).to(support.device), support]\n            for k in range(2, self.cheb_k):\n                support_ks.append(torch.matmul(2 * support, support_ks[-1]) - support_ks[-2]) \n            support_set.extend(support_ks)\n        for support in support_set:\n"}