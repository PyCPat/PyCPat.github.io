{"BEFORE":"        print(sample[..., None].shape)\n        print(self._codebook[:, None, None, ...].shape)\n        exit()\n        return (sample[..., None] * self._codebook[:, None, None, ...]).sum(-2)\n","AFTER":"        quantizeds = list()\n        for i in range(len(self._codebook)):\n            # [n, h, w, k]\n            oneHot = sample[:, i]\n            # [n, h, w, k] @ [k, d] -> [n, h, w, d]\n            quantized = oneHot @ self._codebook[i]\n            quantizeds.append(quantized)\n        # m * [n, h, w, d] -> [n, h, w, c] -> [n, c, h, w]\n        return torch.cat(quantizeds, -1).permute(0, 3, 1, 2)\n"}