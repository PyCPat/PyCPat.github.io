{"BEFORE":"        b, c, h, w = x.shape\n        qkv = self.to_qkv(x).chunk(3, dim = 1)\n        q, k, v = map(lambda t: rearrange(t, 'b (h c) x y -> b h c (x y)', h = self.heads), qkv)\n\n        q = q * self.scale\n\n        sim = einsum('b h d i, b h d j -> b h i j', q, k)\n        attn = sim.softmax(dim = -1)\n        out = einsum('b h i j, b h d j -> b h i d', attn, v)\n\n        out = rearrange(out, 'b h (x y) d -> b (h d) x y', x = h, y = w)\n","AFTER":"        x = self.norm(x)\n\n        qkv = self.to_qkv(x).chunk(3, dim = -1)\n        q, k, v = map(lambda t: rearrange(t, 'b n (h d) -> b h n d', h = self.heads), qkv)\n\n        q = q * self.scale\n\n        sim = einsum('b h i d, b h j d -> b h i j', q, k)\n\n        attn = sim.softmax(dim = -1)\n        attn = self.attn_dropout(attn)\n\n        out = einsum('b h i j, b h j d -> b h i d', attn, v)\n\n        out = rearrange(out, 'b h n d -> b n (h d)')\n"}