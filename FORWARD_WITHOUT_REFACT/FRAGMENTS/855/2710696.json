{"BEFORE":"        b = bh \/\/ h\n\n        Wsq = expand_dim(self.linear_sort_q, 0, b).reshape(bh, dim, dim_sort)\n        Wsk = expand_dim(self.linear_sort_k, 0, b).reshape(bh, dim, dim_sort)\n        nsk = expand_dim(self.null_sort_k, 0, b).reshape(bh, 1, dim_sort)\n\n        q_r = torch.cat((cumavg(q, dim=1), q), dim=-1)\n        k_r = torch.cat((cumavg(k, dim=1), k), dim=-1)\n\n        b_q = bucket(buckets, q_r)\n        b_k = bucket(buckets, k_r)\n\n        b_qi = b_q.mean(dim=2)\n        b_ki = b_k[:, :, 0]\n\n        sq = b_qi @ Wsq\n        sk = b_ki @ Wsk\n        sk = torch.cat((nsk, sk), dim=1)\n","AFTER":"        b = bh \/\/ h\n\n        Wsq, Wsk, pos_q, pos_k = map(partial(expand_batch_and_merge_head, b), (self.linear_sort_q, self.linear_sort_k, self.q_pos_emb, self.k_pos_emb))\n\n        k_r = torch.cat((cumavg(k, dim=1), k), dim=-1)\n        k_r = bucket(buckets, k_r)\n\n        b_q_r = b_k_r = k_r[:, :, 0]\n\n        b_qi = torch.cat((b_q_r, pos_q), dim=-1)\n        b_ki = torch.cat((b_k_r, pos_k), dim=-1)\n\n        sq = b_qi @ Wsq\n        sk = b_ki @ Wsk\n\n        sk = F.pad(sk, (0, 0, 1, 0))\n"}