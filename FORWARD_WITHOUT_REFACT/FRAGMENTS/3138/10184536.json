{"BEFORE":"        elif mask is not None:\n            mask = rearrange(mask, 'b i -> b i ()') * rearrange(mask, 'b j -> b () j')\n            mask = ~mask\n\n        # go through layers\n\n        for attn, ff in self.layers:\n            x = attn(x, mask = mask, use_triton = use_triton) + x\n            x = ff(x, use_triton = use_triton) + x\n\n        x = self.norm(x)\n        return self.to_logits(x)\n","AFTER":"        elif exists(mask):\n            mask = rearrange(mask, 'b i -> b i ()') * rearrange(mask, 'b j -> b () j')\n            mask = ~mask\n\n        # go through layers\n\n        for attn, ff in self.layers:\n            x = attn(x, mask = mask, use_triton = use_triton) + x\n            x = ff(x, use_triton = use_triton) + x\n\n        x = self.norm(x)\n        logits = self.to_logits(x)\n\n        if not exists(labels):\n            return logits\n\n        logits = rearrange(logits, 'b n c -> b c n')\n        return self.loss_fn(logits, labels)\n"}