{"BEFORE":"        B, D, H, W, C = x.shape\n\n        # padding\n        pad_input = (H % 2 == 1) or (W % 2 == 1)\n        if pad_input:\n            x = F.pad(x, (0, 0, 0, W % 2, 0, H % 2))\n\n        x0 = x[:, :, 0::2, 0::2, :]  # B D H\/2 W\/2 C\n","AFTER":"        H, W = self.input_resolution\n        B, L, C = x.shape\n        assert L == H * W, \"input feature has wrong size\"\n        assert H % 2 == 0 and W % 2 == 0, f\"x size ({H}*{W}) are not even.\"\n\n        x = x.view(B, H, W, C)\n\n        x0 = x[:, 0::2, 0::2, :]  # B H\/2 W\/2 C\n        x1 = x[:, 1::2, 0::2, :]  # B H\/2 W\/2 C\n        x2 = x[:, 0::2, 1::2, :]  # B H\/2 W\/2 C\n        x3 = x[:, 1::2, 1::2, :]  # B H\/2 W\/2 C\n        x = torch.cat([x0, x1, x2, x3], -1)  # B H\/2 W\/2 4*C\n        x = x.view(B, -1, 4 * C)  # B H\/2*W\/2 4*C\n"}