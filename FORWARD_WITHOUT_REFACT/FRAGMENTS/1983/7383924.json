{"BEFORE":"        print (pool_indices.keys())\n        for k_layer in range(self.n_layers):\n            key = 'layer_{}'.format(k_layer)\n            key_inverse = 'layer_{}'.format(self.n_layers - k_layer - 1)\n            pool_index = pool_indices[key_inverse]\n            x_current = self.norms[key](self.convolutions[key](self.pools[key](x_current, pool_index)))\n","AFTER":"        x_current = x\n        for k_layer in range(self.n_layers):\n            key = 'layer_{}'.format(k_layer)\n            key_inverse = 'layer_{}'.format(self.n_layers - k_layer - 1)\n            pool_index = pool_indices[key_inverse]\n            if key in self.norms:\n                x_current = self.norms[key](self.convolutions[key](self.pools[key](x_current, pool_index)))\n            else:\n                x_current = self.convolutions[key](self.pools[key](x_current, pool_index))\n\n        return x_current\n"}