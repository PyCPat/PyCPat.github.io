{"BEFORE":"        basis_real, basis_imag = torch.cos(omega.unsqueeze(dim=1) * time_seq.unsqueeze(dim=0)), torch.sin(omega.unsqueeze(dim=1) * time_seq.unsqueeze(dim=0))\n","AFTER":"        omega_n = omega.unsqueeze(dim=1) * n.unsqueeze(dim=0)\n        if self.trainable_phase:\n            phi = self.phase\n            basis_real, basis_imag = torch.cos(omega_n + phi.unsqueeze(dim=1)), torch.sin(omega_n + phi.unsqueeze(dim=1))\n        else:\n            basis_real, basis_imag = torch.cos(omega_n), torch.sin(omega_n)\n        basis_real, basis_imag = basis_real.unsqueeze(dim=1), basis_imag.unsqueeze(dim=1)\n"}