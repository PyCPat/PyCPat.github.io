{"BEFORE":"        device = self.lin1.weight.device\n        if self.action_range.device != device:\n            self.action_range = self.action_range.to(device)\n\n        x = F.relu(self.lin1(states))\n        x = F.relu(self.lin2(x))\n        mean = self.action_range * torch.tanh(self.mean_layer(x))\n        cholesky_vector = F.softplus(self.cholesky_layer(x))\n        cholesky = torch.eye(self.action_shape)[None, ...].repeat(cholesky_vector.size(0), 1, 1).to(device) @ cholesky_vector[..., None]\n","AFTER":"        B = states.size(0)\n\n        device = self.lin1.weight.device\n        if self.action_range.device != device:\n            self.action_range = self.action_range.to(device)\n        if self.action_shape_eye.device != device:\n            self.action_shape_eye = self.action_shape_eye.to(device)\n\n        x = F.relu(self.lin1(states))\n        x = F.relu(self.lin2(x))\n        mean = self.action_range * torch.tanh(self.mean_layer(x))\n        cholesky_vector = F.softplus(self.cholesky_layer(x))\n        cholesky = self.action_shape_eye[None, ...].repeat(B, 1, 1) @ cholesky_vector[..., None]\n"}