{"BEFORE":"        return self.decoder.generate(torch.LongTensor([self.args.bos_token]*len(x)).to(x.device),\n                                     self.args.max_seq_len, eos_token=self.args.eos_token, context=self.encoder(x))\n","AFTER":"    def forward(self, x: torch.Tensor, tgt_seq: torch.Tensor, **kwargs):\n        encoded = self.encoder(x)\n        out = self.decoder(tgt_seq, context=encoded, **kwargs)\n        return out\n"}