{"BEFORE":"    def __init__(self, input_feat_len:int):\n        super(FFEnsembleMember, self).__init__()\n\n        self.input_feat_len = input_feat_len\n\n        self.net = nn.Sequential(\n            nn.Linear(self.input_feat_len, self.input_feat_len*3),\n            nn.ReLU(),\n            nn.Linear(self.input_feat_len*3, self.input_feat_len*3),\n            nn.ReLU(),\n            nn.Linear(self.input_feat_len*3, self.input_feat_len),\n            nn.ReLU(),\n            nn.Linear(self.input_feat_len, 1)\n        )\n","AFTER":"    def __init__(self, input_feat_len:int=128, num_layers:int=10, width:int=20):\n        super(FFEnsembleMember, self).__init__()\n\n        self.input_feat_len = input_feat_len\n        self.num_layers = num_layers\n        self.width = width\n\n        self.linears = nn.ModuleList([nn.Linear(self.input_feat_len, width)])\n        self.linears.extend([nn.Linear(width, width) for i in range(1, self.num_layers-1)])\n        self.output = nn.Linear(width, 1)\n"}