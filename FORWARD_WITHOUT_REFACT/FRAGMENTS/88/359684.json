{"BEFORE":"        x_neighbors = x[batch_index,neighbor_index,:].view(bsize, num_pts, num_neighbor, feats)\n        x_neighbors = x_neighbors.permute(1, 0, 3, 2).contiguous()\n\n        adjweightBase = self.softmax(self.mlp(t_vertex))\n        adjweight = torch.einsum('nb,bkt->nkt', adjweightBase, self.adjweight)\n        x_neighbors = torch.bmm(x_neighbors.view(num_pts, bsize*feats, num_neighbor), adjweight)\n        x_neighbors = x_neighbors.view(num_pts, bsize, feats, num_neighbor).permute(1, 0, 3, 2).contiguous()\n","AFTER":"        x_neighbors = x[batch_index,neighbor_index,:].view(bsize, num_pts, num_neighbor, feats)\n\n        tmpt = torch.sigmoid(self.tmptmlp(t_vertex))*(0.1 - 1.0\/self.temp_factor) + 1.0\/self.temp_factor \n        adjweightBase = self.softmax(self.mlp(t_vertex)\/tmpt)\n        adjweight = torch.einsum('ns,skt->nkt', adjweightBase, self.adjweight)[None].repeat(bsize, 1, 1, 1)\n        x_neighbors = torch.einsum('bnkf,bnkt->bnft', x_neighbors, adjweight)\n"}