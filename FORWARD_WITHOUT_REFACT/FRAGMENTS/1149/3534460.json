{"BEFORE":"        n_dims = target.dim()\n\n        assert n_dims in [2, 3, 4], \"Only 2D or 3D or 4D tensor is acceptable, but given {}D tensor.\".format(n_dims)\n\n        loss = weighted_sdr(input, target, source_dim=self.source_dim, eps=self.eps)\n\n        if self.reduction:\n            if n_dims == 3:\n                if self.reduction == 'mean':\n                    loss = loss.mean(dim=1)\n                elif self.reduction == 'sum':\n                    loss = loss.sum(dim=1)\n            elif n_dims == 4:\n                if self.reduction == 'mean':\n                    loss = loss.mean(dim=(1, 2))\n                elif self.reduction == 'sum':\n                    loss = loss.sum(dim=(1, 2))\n\n        if batch_mean:\n","AFTER":"        if self.reduction:\n            if self.reduction_dim:\n                reduction_dim = self.reduction_dim\n            else:\n                n_dims = loss.dim()\n                reduction_dim = tuple(range(1, n_dims))\n            \n            if self.reduction == 'mean':\n                loss = loss.mean(dim=reduction_dim)\n            elif self.reduction == 'sum':\n                loss = loss.sum(dim=reduction_dim)\n\n        if batch_mean:\n"}