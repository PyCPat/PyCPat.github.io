{"BEFORE":"        fea = self.neck(x)\n\n        for (i, (x, l, c)) in enumerate(zip(fea, self.loc, self.conf)):\n","AFTER":"        fea = list()\n        loc = list()\n        conf = list()\n\n        x = self.backbone(x)\n        fp = self.neck(x)\n\n        for (x, l, c, d) in zip(fp, self.loc, self.conf, self.dist):\n            fea.append(d(x).permute(0, 2, 3, 1).contiguous())\n            loc.append(l(x).permute(0, 2, 3, 1).contiguous())\n            conf.append(c(x).permute(0, 2, 3, 1).contiguous())\n\n        fea = torch.cat([o.view(o.size(0), -1) for o in fea], 1)\n        loc = torch.cat([o.view(o.size(0), -1) for o in loc], 1)\n        conf = torch.cat([o.view(o.size(0), -1) for o in conf], 1)\n        return (\n            loc.view(loc.size(0), -1, 4), \n            conf.view(conf.size(0), -1, self.num_classes), \n            fea.view(conf.size(0), -1, self.fea_channel),\n"}