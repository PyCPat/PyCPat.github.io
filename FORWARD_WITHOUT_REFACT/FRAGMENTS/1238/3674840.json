{"BEFORE":"        if self.use_embedding and exists(embedding):\n            h = self.cross_attend(h, context=embedding) + h\n\n        # Compute scale and shift from time context\n        scale_shift = None\n        if exists(self.to_time_embedding) and exists(t):\n            time_embedding = self.to_time_embedding(t)\n            time_embedding = rearrange(time_embedding, \"b c -> b c 1\")\n            scale_shift = time_embedding.chunk(2, dim=1)\n\n        h = self.block2(h, scale_shift=scale_shift)\n","AFTER":"        assert_message = \"context mapping required if context_mapping_features > 0\"\n        assert not (self.use_mapping ^ exists(mapping)), assert_message\n\n        h = self.block1(x)\n\n        if self.use_embedding:\n            h = self.cross_attend(h, context=embedding) + h\n\n        scale_shift = None\n        if self.use_mapping:\n            scale_shift = self.to_scale_shift(mapping)\n\n        h = self.block2(h, scale_shift=scale_shift)\n"}