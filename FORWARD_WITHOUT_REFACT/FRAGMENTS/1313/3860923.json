{"BEFORE":"    def forward(self):\n        pass\n","AFTER":"    def forward(self, query, key, value, mask):\n        score = torch.bmm(query, key.transpose(1, 2)) \/ np.sqrt(self.dim)\n\n        if mask is not None:\n            score.masked_fill_(mask, -float('inf'))\n\n        attn = F.softmax(score, -1)\n        context = torch.bmm(attn, value)\n        return context, attn\n"}