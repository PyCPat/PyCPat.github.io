{"BEFORE":"        self.weights = self.weights.to(self._float_tensor)\n\n        if incremental_state is not None:\n            # positions is the same for every token when decoding a single step\n            pos = (timestep.int() + 1).long() if timestep is not None else seq_len\n            if self.onnx_trace:\n                return self.weights[self.padding_idx + pos, :].unsqueeze(1).repeat(bsz, 1, 1)\n","AFTER":"        self.weights = self.weights.to(self._float_tensor)\n\n        if incremental_state is not None:\n            # positions is the same for every token when decoding a single step\n            pos = timestep.view(-1)[0] + 1 if timestep is not None else seq_len\n            if self.onnx_trace:\n                return self.weights.index_select(index=self.padding_idx + pos, dim=0).unsqueeze(1).repeat(bsz, 1, 1)\n"}