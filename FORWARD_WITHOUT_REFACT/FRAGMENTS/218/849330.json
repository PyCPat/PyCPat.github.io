{"BEFORE":"        if not jacobian:\n            assert(derivative == 1)\n\n        size = pos.shape\n","AFTER":"        nbatch = size[0]\n\n        r = self.extract_tri_up(self.edist(pos))\n        jast = self._get_jastrow_elements(r)\n\n        if derivative == 0:\n            return jast.prod(1).view(nbatch, 1)\n\n        elif derivative == 1:\n            dr = self.extract_tri_up(self.edist(\n                pos, derivative=1)).view(nbatch, 3, -1)\n            return self._jastrow_derivative(r, dr, jast, jacobian)\n\n        elif derivative == 2:\n\n            dr = self.extract_tri_up(self.edist(\n                pos, derivative=1)).view(nbatch, 3, -1)\n            d2r = self.extract_tri_up(self.edist(\n                pos, derivative=2)).view(nbatch, 3, -1)\n\n            return self._jastrow_second_derivative(r, dr, d2r, jast)\n\n        elif derivative == [0, 1, 2]:\n\n            dr = self.extract_tri_up(self.edist(\n                pos, derivative=1)).view(nbatch, 3, -1)\n            d2r = self.extract_tri_up(self.edist(\n                pos, derivative=2)).view(nbatch, 3, -1)\n\n            return(jast.prod(1).view(nbatch, 1),\n                   self._jastrow_derivative(r, dr, jast, jacobian),\n                   self._jastrow_second_derivative(r, dr, d2r, jast))\n"}