{"BEFORE":"        tf_emb_i = self.linear_tf_z_i(tf)\n        tf_emb_j = self.linear_tf_z_j(tf)\n\n        # [*, N_res, N_res, c_z]\n        pair_emb = tf_emb_i[..., None, :] + tf_emb_j[..., None, :, :]\n        pair_emb = pair_emb + self.relpos(ri.type(pair_emb.dtype))\n","AFTER":"        inplace_safe = not (self.training or torch.is_grad_enabled())\n        \n        # [*, N_res, c_z]\n        tf_emb_i = self.linear_tf_z_i(tf)\n        tf_emb_j = self.linear_tf_z_j(tf)\n\n        # [*, N_res, N_res, c_z]\n        pair_emb = self.relpos(ri.type(tf_emb_i.dtype))\n        pair_emb = add(pair_emb, \n            tf_emb_i[..., None, :], \n            inplace=inplace_safe\n        )\n        pair_emb = add(pair_emb, \n            tf_emb_j[..., None, :, :], \n            inplace=inplace_safe\n        )\n"}