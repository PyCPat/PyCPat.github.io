{"BEFORE":"        spec = self.mask(spec, m, atten_lim)  # [B, 1, T, F, 2]\n        lsnr, _ = self.lsnr_net(x_rnn)\n        out_specs = [spec]\n        # re\/im into channel axis\n        spec_f = spec.squeeze(1)[:, :, : self.df_bins].permute(0, 3, 1, 2)  # [B, 2, T, F_df]\n        h_conv: Optional[Tensor] = None\n        for stage, _lim in zip(self.refinement_stages, self.refinement_snr_max):\n","AFTER":"        spec = self.mask(spec, m, atten_lim)  # [B, 1, T, F, 2]\n        lsnr, _ = self.lsnr_net(x_rnn)\n        out_specs = [spec.squeeze(1)] * (len(self.refinement_stages) + 1)\n        # re\/im into channel axis\n        spec_f = spec.squeeze(1)[:, :, : self.df_bins].permute(0, 3, 1, 2)  # [B, 2, T, F_df]\n        h_conv: Optional[Tensor] = None\n        for i, (stage, _lim) in enumerate(zip(self.refinement_stages, self.refinement_snr_max)):\n            refinement, h_conv, _ = stage(spec_f, h_conv)\n            spec_f = spec_f + refinement\n            out_specs[i + 1][..., : self.df_bins, :] = spec_f.permute(0, 2, 3, 1)\n"}