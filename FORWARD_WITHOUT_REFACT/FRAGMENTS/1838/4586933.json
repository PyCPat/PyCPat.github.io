{"BEFORE":"        if config['lw'] == '':\r\n            lw = [1, ] * len(config['loss'])\r\n        else:\r\n            lw = [float(w) for w in config['lw'].split(',')]\r\n        assert len(config['loss']) == len(lw), 'Length of loss and loss_weight should be equal.'\r\n        \r\n        self.losses = config['loss']\r\n        self.lw = lw\r\n","AFTER":"        self.loss_cluster = {}\r\n        for out_name, loss_casket in loss_config.items():\r\n            self.loss_cluster[out_name] = loss_worker(loss_casket[0], loss_casket[1:])\r\n            print('{} loss for output \\\"{}\\\".'.format(self.loss_cluster[out_name].loss_print, out_name))\r\n        \r\n    def forward(self, preds, target, config):\r\n"}