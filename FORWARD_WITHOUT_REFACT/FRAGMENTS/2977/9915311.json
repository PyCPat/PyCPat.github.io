{"BEFORE":"        z = Variable(torch.rand(batch_size, self.z_dim), requires_grad = False).to(self.device) if z is None else z\n        x = F.softplus(self.bn1(self.fc1(z)) + self.bn1_b)\n        x = F.softplus(self.bn2(self.fc2(x)) + self.bn2_b)\n        x = F.softplus(self.fc3(x))\n        return x\n","AFTER":"        z = Variable(torch.rand(batch_size, self.z_dim), requires_grad = False).to(self.device) if z is None else z\n        for _ in range(self.num_hidden):\n            z = self.activations[_](self.bn_layers[_](self.layers[_](z)) + self.bn_b[_])\n        if len(self.activations)==self.num_hidden+1:\n            z = self.activations[self.num_hidden](self.fc(z))\n        return z\n"}