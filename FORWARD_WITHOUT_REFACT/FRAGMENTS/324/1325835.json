{"BEFORE":"    if self.action_space_type is 'Continuous':\r\n        std = torch.exp(self.log_std)\r\n        policy = Normal(self.actor(state), std)\r\n    else:\r\n        policy = Categorical(logits=self.actor(state))\r\n    return policy\r\n","AFTER":"    std = torch.exp(self.log_std)\r\n    mu = self.actor(state)\r\n    normal = Independent(Normal(mu, std), 1)\r\n    #policy = TransformedDistribution(normal, [TanhTransform(), AffineTransform(loc=self.loc, scale=self.scale)])\r\n    return normal\r\n"}