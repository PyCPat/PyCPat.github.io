{"BEFORE":"        self.bn1 = nn.BatchNorm2d(planes)\n        self.relu = nn.ReLU(inplace=True)\n        self.conv2 = conv3x3(planes, planes)\n        self.bn2 = nn.BatchNorm2d(planes)\n","AFTER":"                 normalize=dict(type='GN')):\n        super(BasicBlock, self).__init__()\n        self.conv1 = conv3x3(inplanes, planes, stride, dilation)\n\n        norm_layers = []\n        norm_layers.append(build_norm_layer(normalize, planes))\n        norm_layers.append(build_norm_layer(normalize, planes))\n        self.norm_names = (['gn1', 'gn2'] if normalize['type'] == 'GN'\n                           else ['bn1', 'bn2'])\n        for name, layer in zip(self.norm_names, norm_layers):\n            self.add_module(name, layer)\n\n        self.relu = nn.ReLU(inplace=True)\n"}