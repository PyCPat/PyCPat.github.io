{"BEFORE":"        self.out_format = out_format\n\n        assert 1 <= self.mfcc_order and self.mfcc_order < n_channel\n        assert is_in(self.out_format, [\"y\", \"yE\", \"yc\", \"y,E\", \"y,c\"])\n","AFTER":"        if out_format == 0 or out_format == \"y\":\n            self.format_func = lambda y, c, E: y\n        elif out_format == 1 or out_format == \"yE\":\n            self.format_func = lambda y, c, E: torch.cat((y, E), dim=-1)\n        elif out_format == 2 or out_format == \"yc\":\n            self.format_func = lambda y, c, E: torch.cat((y, c), dim=-1)\n        elif out_format == 3 or out_format == \"ycE\":\n            self.format_func = lambda y, c, E: torch.cat((y, c, E), dim=-1)\n        else:\n            raise ValueError(f\"out_format {out_format} is not supported\")\n\n        self.fbank = MelFilterBankAnalysis(\n"}