{"BEFORE":"            use_memory = layer_num in self.memory_layers\n\n            memories = None\n            if use_memory:\n                memories = (next(mem_iter), next(cmem_iter))\n\n            x, (mem_out, cmem_out), layer_aux_loss = attn(x, memories = memories, calc_memory = use_memory, input_mask = mask, pos_emb = pos_emb)\n            x, = ff(x)\n\n            if use_memory:\n                next_mem.append(mem_out)\n                next_cmem.append(cmem_out)\n\n            aux_loss = aux_loss + layer_aux_loss\n","AFTER":"            use_memory = layer_num in self.memory_layers\n            memories = (next(mem_iter), next(cmem_iter)) if use_memory else None\n\n            x, (mem_out, cmem_out), layer_aux_loss = attn(x, memories = memories, calc_memory = use_memory, input_mask = mask, pos_emb = pos_emb)\n            x,  = ff(x)\n\n            aux_loss = aux_loss + layer_aux_loss\n\n            if not use_memory:\n                continue\n\n            next_mem.append(mem_out)\n            next_cmem.append(cmem_out)\n"}