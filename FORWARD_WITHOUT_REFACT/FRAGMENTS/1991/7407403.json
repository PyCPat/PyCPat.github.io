{"BEFORE":"        recon_loss = F.mse_loss(fmap, img)\n\n        # generator loss\n\n        labels = torch.cat((torch.zeros(batch, device = device), torch.ones(batch, device = device)), dim = 0)\n        real_or_fake = self.disc(torch.cat((fmap, img), dim = 0))\n        gen_loss = F.binary_cross_entropy(real_or_fake.sigmoid(), labels)\n","AFTER":"        return_discr_loss = False\n    ):\n        batch, device = img.shape[0], img.device\n        fmap = img.clone()\n\n        fmap, indices, commit_loss = self.encode(img)\n\n        for dec in self.decoders:\n            fmap = dec(fmap)\n\n        if not return_loss:\n            return fmap\n\n\n        # generator loss\n\n        labels = torch.cat((torch.zeros(batch, device = device), torch.ones(batch, device = device)), dim = 0)\n\n        if return_discr_loss:\n            labels = torch.flip(labels, (0,))\n\n        real_or_fake = self.disc(torch.cat((fmap, img), dim = 0))\n        gan_loss = F.binary_cross_entropy(real_or_fake, labels)\n\n        if return_discr_loss:\n            return gan_loss\n\n        # reconstruction loss\n\n        recon_loss = F.mse_loss(fmap, img)\n"}