{"BEFORE":"        logit = self._logistic(x)\n        n, _, h, w = logit.shape\n        # [n, m, h, w, k]\n        posterior = OneHotCategoricalStraightThrough(logits=logit.reshape(n, self._m, self._k, h, w).permute(0, 1, 3, 4, 2))\n        # [n, m, h, w, k]\n        quantized = posterior.rsample(())\n        # [n, m, h, w]\n        code = quantized.argmax(-1)\n        #      [n, m * k, h, w]\n        return quantized.permute(0, 1, 4, 2, 3).reshape(n, -1, h, w), code, logit\n","AFTER":"        sample, logit = self._sample(x)\n        # [n, m, h, w]\n        code = sample.argmax(-1)\n        #      [n, m, h, w, k]\n        return sample, code, logit\n"}