{"BEFORE":"        x = torch.reshape(x, (B*N, C)) # (B*N, C)\n        for fc in self.fc[:-1]:\n            x = F.relu(fc(x))\n            x = self.dropout(x)\n        x = self.fc[-1](x) # (B*N, 1)\n        x = torch.reshape(x, (B, N)) # (B, N)\n        return x\n","AFTER":"        if self.context > 1:\n            z = [x]\n            for d in range(1, self.context \/\/ 2 + 1):\n                z_u = torch.zeros_like(x)\n                z_u[:, d:, :] = x[:, :-d, :] # i-d\n                z.append(z_u)\n                z_d = torch.zeros_like(x)\n                z_d[:, :-d, :] = x[:, d:, :] # i+d\n                z.append(z_d)\n            x = torch.cat(z, dim=2) # (B, N, C*width)\n\n        x = x.view(B*N, -1) # (B*N, C*width)\n        for fc in self.fc[:-1]:\n            x = F.relu(fc(x))\n            x = self.dropout(x)\n        x = self.fc[-1](x) # (B*N, n_out)\n        return x.view(B, N, -1) # (B, N, n_out)\n"}