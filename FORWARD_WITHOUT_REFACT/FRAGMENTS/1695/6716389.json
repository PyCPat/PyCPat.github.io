{"BEFORE":"        if len(noise_level.shape) > 1:\n            noise_level = noise_level.squeeze(-1)\n        half_dim = self.n_channels \/\/ 2\n        exponents = torch.arange(half_dim, dtype=torch.float32).to(\n            noise_level) \/ float(half_dim)\n        exponents = 1e-4 ** exponents\n        exponents = LINEAR_SCALE * \\\n            noise_level.unsqueeze(1) * exponents.unsqueeze(0)\n        return torch.cat([exponents.sin(), exponents.cos()], dim=-1)\n","AFTER":"        count = self.dim \/\/ 2\n        step = torch.arange(count, dtype=noise_level.dtype,\n                            device=noise_level.device) \/ count\n        encoding = noise_level.unsqueeze(\n            1) * torch.exp(-math.log(1e4) * step.unsqueeze(0))\n        encoding = torch.cat(\n            [torch.sin(encoding), torch.cos(encoding)], dim=-1)\n        return encoding\n"}