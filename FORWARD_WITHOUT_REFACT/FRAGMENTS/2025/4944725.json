{"BEFORE":"        conv = []\n        for m, k in zip(filters, ksize):\n            conv += [ \n                nn.Conv2d(n_in, m, k, padding=k\/\/2), \n                nn.GroupNorm(1, m),\n                nn.CELU(), \n                nn.Dropout(p=dropout_rate) ]\n            n_in = m\n        self.conv = nn.Sequential(*conv)\n","AFTER":"    def __init__(self, n_in, n_out=1, filters=(), ksize=(), fc_layers=(), dropout_rate=0.0, resnet=True):\n        super(PairedLayer, self).__init__()\n\n        self.resnet = resnet        \n        while len(filters) > len(ksize):\n            ksize = tuple(ksize) + (ksize[-1],)\n\n        self.conv = []\n        for m, k in zip(filters, ksize):\n            self.conv.append(\n                nn.Sequential( \n                    nn.Conv2d(n_in, m, k, padding=k\/\/2), \n                    nn.GroupNorm(1, m),\n                    nn.CELU(), \n                    nn.Dropout(p=dropout_rate) ) )\n"}