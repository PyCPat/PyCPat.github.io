{"BEFORE":"        c1 = c[..., 1:] * self.ramp\n        c1 = c1.flip(-1)\n\n        h = torch.empty(\n            (*(c.shape[:-1]), self.impulse_response_length), device=c.device\n        )\n        h[..., 0] = torch.exp(c0)\n        for n in range(1, self.impulse_response_length):\n            s = n - self.cep_order\n            h[..., n] = (\n                torch.einsum(\n                    \"...d,...d->...\",\n                    h[..., max(0, s) : n].clone(),\n                    c1[..., max(0, -s) :],\n                )\n","AFTER":"        c1 = (c[..., 1:] * self.ramp).flip(-1)\n\n        h = torch.empty(\n            (*(c.shape[:-1]), self.impulse_response_length), device=c.device\n        )\n        h[..., 0] = torch.exp(c0)\n        for n in range(1, self.impulse_response_length):\n            s = n - self.cep_order\n            h[..., n] = (h[..., max(0, s) : n].clone() * c1[..., max(0, -s) :]).sum(\n                -1\n            ) \/ n\n"}