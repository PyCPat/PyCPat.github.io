{"BEFORE":"        Ph, Pw = self.patch_size\n        assert H == self.img_size[0] and W == self.img_size[1], \\\n            f\"Input image size ({H}*{W}) doesn't match model ({self.img_size[0]}*{self.img_size[1]}).\"\n        if self.flatten_channels_last:\n            # flatten patches with channels last like the paper (likely using TF)\n            x = x.unfold(2, Ph, Ph).unfold(3, Pw, Pw).permute(0, 2, 3, 4, 5, 1).reshape(B, -1, Ph * Pw * C)\n        else:\n            x = x.permute(0, 2, 3, 1).unfold(1, Ph, Ph).unfold(2, Pw, Pw).reshape(B, -1, C * Ph * Pw)\n        x = self.proj(x)\n","AFTER":"        x = self.proj(x).flatten(2).transpose(1, 2)\n"}