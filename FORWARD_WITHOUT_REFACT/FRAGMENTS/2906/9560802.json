{"BEFORE":"        in_shape = src.shape\n        if self.reshape:\n            src = src.reshape(\n                in_shape[0], in_shape[1], in_shape[2] * in_shape[3]\n            )\n\n        output, self_attn = self.self_att(\n            src,\n            src,\n            src,\n            attn_mask=src_mask,\n            key_padding_mask=src_key_padding_mask,\n        )\n\n        # add & norm\n        src = src + self.dropout1(output)\n        src = self.norm1(src)\n\n        output = self.pos_ffn(src)\n\n        # add & norm\n        output = src + self.dropout2(output)\n        output = self.norm2(output)\n","AFTER":"        if self.normalize_before:\n            src1 = self.norm1(src)\n        else:\n            src1 = src\n\n        output, self_attn = self.self_att(\n            src1,\n            src1,\n            src1,\n            attn_mask=src_mask,\n            key_padding_mask=src_key_padding_mask,\n        )\n\n        # add & norm\n        src = src + self.dropout1(output)\n        if not self.normalize_before:\n            src = self.norm1(src)\n\n        if self.normalize_before:\n            src1 = self.norm2(src)\n        else:\n            src1 = src\n        output = self.pos_ffn(src1)\n\n        # add & norm\n        output = src + self.dropout2(output)\n        if not self.normalize_before:\n            output = self.norm2(output)\n\n        return output, self_attn\n"}