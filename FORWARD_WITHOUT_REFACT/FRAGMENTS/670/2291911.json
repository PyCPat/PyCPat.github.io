{"BEFORE":"    def __init__(self, mode='LoG'):\n        super(Laplacian, self).__init__()\n        self.mode = mode\n        assert self.mode in ['LoG', 'DoG',]\n        grayscale = nn.Conv2d(3, 1, kernel_size=1, stride=1, padding=0, bias=False)\n        grayscale.weight.data.fill_(1.0 \/ 3.0)\n        laplacian_filter = nn.Conv2d(1, 1, kernel_size=5, stride=1, padding=2, bias=False)\n","AFTER":"    def __init__(self,\n                 mode='LoG',\n                 use_threshold=False,\n                 to_grayscale=True):\n        super(Laplacian, self).__init__()\n        self.mode = mode\n        self.use_threshold = use_threshold\n        assert self.mode in ['LoG', 'DoG',]\n        if to_grayscale:\n            grayscale = nn.Conv2d(\n                in_channels=3, out_channels=1, kernel_size=1, bias=False)\n            grayscale.weight.data.fill_(1.0 \/ 3.0)\n        else:\n            grayscale = nn.Identity()\n        laplacian_filter = nn.Conv2d(\n"}