{"BEFORE":"        self.model = model\n        input_names = [ \"actual_input_1\" ]\n        torch.onnx.export(self.model, dummy_inputs, \"model.onnx\", verbose=True, input_names=input_names, opset_version=12)\n        SymbolicShapeInference.infer_shapes(\"model.onnx\", \"shape_infer.onnx\")\n\n        onnx_model = onnx.load(\".\/shape_infer.onnx\")\n        self.dace_model = ONNXModel(\"dace_model\", onnx_model)\n        self.sdfg = self.dace_model.sdfg\n        self.sdfg.validate()\n        self.sdfg.save(\".\/model.sdfg\")\n","AFTER":"        self.sdfg = None\n        if dummy_inputs is not None:\n            self.initialize_sdfg(dummy_inputs)\n\n    def initialize_sdfg(self, dummy_inputs):\n"}