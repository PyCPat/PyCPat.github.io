{"BEFORE":"        sim = einsum('b c h w, b n c i j -> b h w n i j', query_q, supports_k)\n        sim = rearrange(sim, 'b h w n i j -> b h w (n i j)')\n\n        attn = sim.softmax(dim = -1)\n        attn = rearrange(attn, 'b h w (n i j) -> b h w n i j', i = h, j = w)\n\n        out = einsum('b h w n i j, b n c i j -> b c h w', attn, supports_v)\n","AFTER":"        b, k, *_ = img_supports.shape\n\n        query_repr = model(img_query)\n        *_, h, w = query_repr.shape\n\n        img_supports = rearrange(img_supports, 'b k n c h w -> (b k n) c h w', b = b)\n        supports_repr = model(img_supports)\n\n        query_q, query_v = self.to_qk(query_repr), self.to_v(query_repr)\n\n        supports_k, supports_v = self.to_qk(supports_repr), self.to_v(supports_repr)\n        supports_k, supports_v = map(lambda t: rearrange(t, '(b k n) c h w -> b k n c h w', b = b, k = k), (supports_k, supports_v))\n\n        sim = einsum('b c h w, b k n c i j -> b k h w n i j', query_q, supports_k)\n        sim = rearrange(sim, 'b k h w n i j -> b k h w (n i j)')\n\n        attn = sim.softmax(dim = -1)\n        attn = rearrange(attn, 'b k h w (n i j) -> b k h w n i j', i = h, j = w)\n\n        out = einsum('b k h w n i j, b k n c i j -> b k c h w', attn, supports_v)\n\n        out = rearrange(out, 'b k c h w -> b k (c h w)')\n        query_v = rearrange(query_v, 'b c h w -> b () (c h w)')\n"}