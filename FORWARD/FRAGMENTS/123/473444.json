{"BEFORE":"    def forward(self, x: Tensor) -> Tensor:\n        identity = x\n\n        out = self.conv1(x)\n        out = self.bn1(out)\n        out = self.relu(out)\n\n        out = self.conv2(out)\n        out = self.bn2(out)\n        out = self.relu(out)\n\n        out = self.conv3(out)\n        out = self.bn3(out)\n\n        if self.downsample is not None:\n            identity = self.downsample(x)\n\n        out += identity\n        out = self.relu(out)\n\n        return out\n","AFTER":"    def forward(self, x):\n        bottleneck = self.conv_reduce.forward(x)\n        bottleneck = self.act(self.bn_reduce.forward(bottleneck))\n        bottleneck = self.conv_conv.forward(bottleneck)\n        bottleneck = self.act(self.bn.forward(bottleneck))\n        bottleneck = self.conv_expand.forward(bottleneck)\n        bottleneck = self.bn_expand.forward(bottleneck)\n        residual = self.shortcut.forward(x)\n        return self.act(residual + bottleneck)\n"}