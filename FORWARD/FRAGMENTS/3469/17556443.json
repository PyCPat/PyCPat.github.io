{"BEFORE":"        positive_mask = ~negative_mask\n        positives = logits_scores.diag().view(-1, 1).expand_as(logits_scores)\n        diff = positives - logits_scores\n        loss = F.sigmoid(diff)\n        logit_softmax = torch.softmax(logits_scores, dim = 1)\n        loss = logit_softmax * loss\n        reg = logit_softmax * (logits_scores**2)\n        # set to zeros the diff scores of positive targets present in the same session\n        loss = loss.masked_fill(positive_mask, 0)\n        reg = reg.masked_fill(positive_mask, 0)\n        # Average over the nb of negative sample per\n        loss = -torch.log(loss.sum(1)) + self.lambda_ * reg.sum(1)\n        return torch.mean(loss)\n","AFTER":"        loss = loss.sum(1) \/ negative_mask.sum(1)\n        return -torch.mean(loss)\n"}