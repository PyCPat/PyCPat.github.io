{"BEFORE":"        mel_loss = mse_loss(mel, mel_target, mel_length)\r\n        mel_postnet_loss = mse_loss(mel_postnet, mel_target, mel_length)\r\n\r\n        d_loss = mae_loss(d_predicted, d_target.float(), src_length)\r\n        p_loss = mae_loss(p_predicted, p_target, mel_length)\r\n        e_loss = mae_loss(e_predicted, e_target, mel_length)\r\n","AFTER":"        log_d_predicted = log_d_predicted.masked_select(src_mask)\r\n        log_d_target = log_d_target.masked_select(src_mask)\r\n        p_predicted = p_predicted.masked_select(mel_mask)\r\n        p_target = p_target.masked_select(mel_mask)\r\n        e_predicted = e_predicted.masked_select(mel_mask)\r\n        e_target = e_target.masked_select(mel_mask)\r\n\r\n        mel = mel.masked_select(mel_mask.unsqueeze(-1))\r\n        mel_postnet = mel_postnet.masked_select(mel_mask.unsqueeze(-1))\r\n        mel_target = mel_target.masked_select(mel_mask.unsqueeze(-1))\r\n\r\n        mel_loss = self.mse_loss(mel, mel_target)\r\n        mel_postnet_loss = self.mse_loss(mel_postnet, mel_target)\r\n\r\n        d_loss = self.mae_loss(log_d_predicted, log_d_target)\r\n        p_loss = self.mae_loss(p_predicted, p_target)\r\n        e_loss = self.mae_loss(e_predicted, e_target)\r\n"}