{"BEFORE":"        T = x.size(-1)\n        # (B, hid_features*K, T_in)\n        # Concat conv1d bank outputs\n        outs = []\n        for conv1d in self.conv1d_banks:\n            out = conv1d(x)\n            out = out[:, :, :T]\n            outs.append(out)\n        x = torch.cat(outs, dim=1)\n        assert x.size(1) == self.conv_bank_features * len(self.conv1d_banks)\n        x = self.max_pool1d(x)[:, :, :T]\n","AFTER":"        x = torch.cat(outs, dim=1)\n        assert x.size(1) == self.conv_bank_features * len(self.conv1d_banks)\n        x = nn.functional.pad(x, [0, 1])\n        x = self.max_pool1d(x)\n"}