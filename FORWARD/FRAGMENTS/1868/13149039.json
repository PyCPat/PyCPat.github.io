{"BEFORE":"            dots.masked_fill_(mask, float('-inf'))\n","AFTER":"        k = F.normalize(qk, 2, dim=-1)\n\n        dots = torch.einsum('bhnid,bhnjd->bhnij', q, k) * (d ** -0.5)\n        dots = dots + self.rel_pos(q)\n\n        mask_value = max_neg_value(dots)\n\n        if self.causal:\n            mask = torch.ones(self.window_size, self.window_size, device=device).byte().triu_(1).bool()\n            dots.masked_fill_(mask, mask_value)\n"}