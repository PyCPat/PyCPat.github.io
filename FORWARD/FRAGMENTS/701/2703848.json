{"BEFORE":"    def forward(self, inputs):\n        embedded = self.embedding(inputs)\n        embedded *= self.sqrt_dim\n        embedded += self.pe[:embedded.size(0), :]\n","AFTER":"    def forward(self, embedded: torch.Tensor, step: Optional[int] = None):\n        if step is None:\n            embedded += self.pe[:, :embedded.size(1)]\n        else:\n            embedded += self.pe[:, step]\n            \n        return self.dropout(embedded)\n"}