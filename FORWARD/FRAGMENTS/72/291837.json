{"BEFORE":"        l_pos = torch.einsum('nc,nc->n', [q, k]).unsqueeze(-1)\n        # negative logits: NxK\n        l_neg = torch.einsum('nc,ck->nk', [q, self.queue.clone().detach()])\n\n        # logits: Nx(1+K)\n        logits = torch.cat([l_pos, l_neg], dim=1)\n\n        # apply temperature\n        logits \/= self.T\n\n        # labels: positive key indicators\n        labels = torch.zeros(logits.shape[0], dtype=torch.long).cuda()\n\n\n        ## densecl logits\n        d_pos = torch.einsum('ncm,ncm->nm', dense_q, dense_k_norm).unsqueeze(1)\n        d_neg = torch.einsum('ncm,ck->nkm', dense_q, self.queue_dense.clone().detach())\n        logits_dense = torch.cat([d_pos, d_neg], dim=1)\n        logits_dense = logits_dense \/ self.T\n        labels_dense = torch.zeros((n, h*w), dtype=torch.long).cuda()\n\n        # dequeue and enqueue\n        self._dequeue_and_enqueue(k, dense_k)\n\n        return logits, labels, logits_dense, labels_dense\n","AFTER":"        l_pos = torch.einsum('nc,nc->n', [q, k]).unsqueeze(-1)\n        # negative logits: NxK\n        l_neg = torch.einsum('nc,ck->nk', [q, self.queue.clone().detach()])\n\n        l_pos, l_neg = l_pos \/ self.T, l_neg \/ self.T\n\n        #  # logits: Nx(1+K)\n        #  logits = torch.cat([l_pos, l_neg], dim=1)\n        #\n        #  # apply temperature\n        #  logits \/= self.T\n        #\n        #  # labels: positive key indicators\n        #  labels = torch.zeros(logits.shape[0], dtype=torch.long).cuda()\n\n\n        ## densecl logits\n        d_pos = torch.einsum('ncm,ncm->nm', dense_q, dense_k_norm).unsqueeze(1)\n        d_neg = torch.einsum('ncm,ck->nkm', dense_q, self.queue_dense.clone().detach())\n\n        d_pos, d_neg = d_pos \/ self.T, d_neg \/ self.T\n\n        #  logits_dense = torch.cat([d_pos, d_neg], dim=1)\n        #  logits_dense = logits_dense \/ self.T\n        #  labels_dense = torch.zeros((n, h*w), dtype=torch.long).cuda()\n\n        # dequeue and enqueue\n        self._dequeue_and_enqueue(k, dense_k)\n\n        return [l_pos, l_neg], [d_pos, d_neg]\n"}