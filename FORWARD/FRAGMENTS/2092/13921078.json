{"BEFORE":"        context_mask = self.w_k(x).view(N, 1, -1).unsqueeze(-1)\n        context_mask = nn.functional.softmax(context_mask, dim=2)\n        # (N, 1, C, D_j) * (N, 1, D_j, 1) -> (N, 1, C, 1) -> (N, C, 1)\n        context = torch.matmul(input_x, context_mask).reshape(N, C, 1)\n\n        out = self.w_v1(context)\n        out = self.ln(out)\n        out = self.relu(out)\n        transform = self.w_v2(out)\n        # (N, C, 1) -> (N, C, **)\n        transform = self._expand(transform, N, C)\n","AFTER":"        context_mask = self.w_k(x).view(N, 1, -1)\n        # (N, 1, D_j) -> (N, 1, D_j, 1)\n        context_mask = nn.functional.softmax(context_mask, dim=2).unsqueeze(-1)\n        # (N, 1, C, D_j) * (N, 1, D_j, 1) -> (N, 1, C, 1) -> (N, C) -> (N, C, **)\n        context = torch.matmul(input_x, context_mask).reshape(N, C).reshape(N, C, *([1] * self.dimension))\n"}