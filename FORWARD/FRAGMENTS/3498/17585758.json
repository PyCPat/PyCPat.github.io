{"BEFORE":"        c = output.size()[-1]\n        log_preds = F.log_softmax(output, dim=-1)\n        loss = reduce_loss(-log_preds.sum(dim=-1), self.reduction)\n        nll = F.nll_loss(log_preds, target, reduction=self.reduction)\n        # (1-ε)* H(q,p) + ε*H(u,p)\n        return (1-self.eps)*nll + self.eps*(loss\/c) \n","AFTER":"        c = output.size()[-1]\n        log_preds = F.log_softmax(output, dim=-1)\n        if self.reduction=='sum':\n            loss = -log_preds.sum()\n        else:\n            loss = -log_preds.sum(dim=-1)\n            if self.reduction=='mean':\n                loss = loss.mean()\n        return loss*self.eps\/c + (1-self.eps) * F.nll_loss(log_preds, target, reduction=self.reduction)\n"}