{"BEFORE":"        target = rearrange(target, \"b c (h p1) (w p2) -> b (h w) c (p1 p2) \", p1 = p, p2 = p)\n\n        channel_bins = torch.tensor([0.333, 0.666, 1.0])\n        target = torch.bucketize(target, channel_bins, right=True)\n        target = target.float().mean(dim=3)\n\n        predicted_patches = predicted_patches[mask]\n        target = target[mask]\n\n        loss = F.mse_loss(predicted_patches, target)\n","AFTER":"        target = rearrange(target, \"b c (h p1) (w p2) -> b (h w) c (p1 p2) \", p1 = p, p2 = p)\n\n        avg_target = target.mean(dim=3)\n\n        channel_bins = torch.tensor([0.333, 0.666, 1.0])\n        descritized_target = torch.bucketize(avg_target, channel_bins, right=True)\n        descritized_target = F.one_hot(descritized_target, self.output_channel_bits)\n        c, bi = self.channels, self.output_channel_bits\n        descritized_target = rearrange(descritized_target, \"b n c bi -> b n (c bi)\", c = c, bi = bi)\n\n        predicted_patches = predicted_patches[mask]\n        descritized_target = descritized_target[mask]\n\n        loss = F.mse_loss(predicted_patches, descritized_target)\n"}