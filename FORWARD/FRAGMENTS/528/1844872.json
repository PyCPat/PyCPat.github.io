{"BEFORE":"        shape = x.shape\n        if len(shape) == 4:\n            randShape = (x.shape[0], *self.grids)\n        else:\n            randShape = self.grids\n        h, w = shape[-2], shape[-1]\n        notEraseArea = tf.interpolate((torch.rand(randShape, device=x.device) > self.p).float(), (h, w))\n        return x * notEraseArea\n","AFTER":"        randIdx = torch.randperm(len(self.permutePattern), device=x.device)\n        self.permutePattern.copy_(self.permutePattern[randIdx])\n        permutePattern = self.permutePattern.reshape(self.grids)\n        eraseArea = tf.interpolate(permutePattern, (h, w))\n        return x * eraseArea\n"}