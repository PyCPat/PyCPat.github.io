{"BEFORE":"    def forward(self, x, kwargs):\n        if x.shape[0] != 3:\n            raise ValueError(f'Wrong dimensions of inputs, expeted 3 but input {x.shape}.')\n        out_1 = torch.matmul(x, self.V).pow(2).sum(1, keepdim=True) #S_1^2\n        out_2 = torch.matmul(x.pow(2), self.V.pow(2)).sum(1, keepdim=True) # S_2\n\n        out_inter = 0.5 *( out_1 - out_2)\n        out_lin = self.lin(x)\n        out = out_inter + out_lin\n","AFTER":"        if len(inputs.shape) != 3:\n            raise ValueError(f'Wrong dimensions of inputs, expected 3 but input {len(inputs.shape)}.')\n        fm_input = inputs\n        square_of_sum = torch.pow(torch.sum(fm_input, dim=1, keepdim=True), 2)\n        sum_of_square = torch.sum(fm_input * fm_input, dim=1, keepdim=True)\n        cross_term = square_of_sum - sum_of_square\n        cross_term = 0.5 * torch.sum(cross_term, dim=2, keepdim=False)\n"}