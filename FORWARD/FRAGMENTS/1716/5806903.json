{"BEFORE":"    def forward(self, graph: dgl.DGLGraph):\n        graph.apply_nodes(self.input_node_func)\n\n        for mp_layer in self.mp_layers:\n            mp_layer(graph)\n\n    def input_node_func(self, nodes):\n","AFTER":"    def forward(self, g, h, e, snorm_n):\n        h = self.embedding_h(h)\n        h = self.in_feat_dropout(h)\n        if self.edge_feat:\n            e = self.embedding_e(e)\n\n        for i, mp_layer in enumerate(self.layers):\n            h_t = mp_layer(g, h, e, snorm_n)\n            if self.gru_enable and i != len(self.layers) - 1:\n                h_t = self.gru(h, h_t)\n            h = h_t\n\n        g.ndata['feat'] = h\n        return g, h\n"}