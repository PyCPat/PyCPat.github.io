{"BEFORE":"        conv_res = [self.activation(conv(input)) for conv in self.convs] #[b, o, lout]\n\n        tmp = [F.max_pool1d(input=x, kernel_size=x.size(2)).squeeze(2) for x in conv_res]\n","AFTER":"        conv_res = [self.activation(conv(input)) for conv in self.convs] #[b, o, lout]\n\n        #import pdb;pdb.set_trace()\n        tmp = []\n        for i in range(len(conv_res)):\n            dim = conv_res[i].size(2)\n            if isinstance(dim, torch.Tensor):\n                #trace 无法识别tuple的操作，会转成tensor\n                dim = dim.tolist()\n            max_out = F.max_pool1d(conv_res[i], kernel_size=dim)\n            tmp.append(max_out.squeeze(2))\n\n        return torch.cat(tmp, dim=-1)\n"}