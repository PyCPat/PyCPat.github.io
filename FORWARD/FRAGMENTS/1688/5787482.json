{"BEFORE":"        x = x.permute(0, 2, 1)  # Permute to channel first\n        o = self.network(x)\n        o = o.permute(0, 2, 1)  # Permute to channel last\n        return o\n","AFTER":"        batch_size, time_steps, _ = x.size()\n        out = torch.zeros((batch_size, time_steps, self.num_channels))\n        for cur_time in range(time_steps):\n            cur_x = x[:, : cur_time + 1, :]\n            cur_x = cur_x.permute(0, 2, 1)  # Permute to channel first\n            o = self.network(cur_x)\n            o = o.permute(0, 2, 1)  # Permute to channel last\n            out[:, cur_time, :] = torch.mean(o, dim=1)\n        return out\n"}