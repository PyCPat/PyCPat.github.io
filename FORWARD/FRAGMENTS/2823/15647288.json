{"BEFORE":"        self.n_nodes = x.shape[0]\n        if self.msg_kind == 'gin':\n            if self.id_scope == 'global':\n                identifiers_ii, identifiers = self.central_node_id_encoder(identifiers, \n                                                                           self.n_nodes)\n            else:\n                identifiers_ii, identifiers = self.central_node_id_encoder(identifiers, \n                                                           self.n_nodes)\n","AFTER":"        n_nodes = x.shape[0]\n        if self.msg_kind == 'gin':\n            if self.id_scope == 'global':\n                identifiers_ii == identifiers\n            else:\n                identifiers_ii, identifiers = self.central_node_id_encoder(identifiers, n_nodes)\n            self_msg = torch.cat((x, identifiers_ii), -1)\n                \n            out = self.update_fn((1 + self.eps) * self_msg + \n                                 self.propagate(edge_index=edge_index, x=x, identifiers=identifiers)) \n                \n        elif self.msg_kind == 'general':\n            out = self.update_fn(torch.cat((x, self.propagate(edge_index=edge_index, x=x, identifiers=identifiers)), -1))\n        \n        else:\n            raise NotImplementedError(\"Message kind {} is not currently supported.\".format(self.msg_kind))\n"}