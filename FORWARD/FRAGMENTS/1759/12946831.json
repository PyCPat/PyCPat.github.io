{"BEFORE":"        labels = batch[\"targets\"].to(device)\n        inputs = F.softmax(predict, dim=1)  \n\n        tp = torch.sum(labels*inputs, dim=(2, 3))\n        fn = torch.sum(labels*(1-inputs), dim=(2, 3))\n        fp = torch.sum((1-labels)*inputs, dim=(2, 3))\n\n        dice_score = (tp + 1e-6) \/ (tp +  fn + fp + 1e-6)\n        dice_score = torch.sum(1 - dice_score, dim=-1)\n\n        loss = dice_score \/ labels.shape[1]\n        loss = loss.mean()\n","AFTER":"        targets = batch[\"targets\"].to(device)\n        prediction = F.softmax(predict, dim=1)  \n\n        # have to use contiguous since they may from a torch.view op\n        iflat = prediction.contiguous().view(-1)\n        tflat = targets.contiguous().view(-1)\n        intersection = (iflat * tflat).sum()\n        union = prediction.sum() + targets.sum()\n\n        dice = (2.*intersection + self.eps)\/(union + self.eps)  \n        loss =  1 - dice\n"}