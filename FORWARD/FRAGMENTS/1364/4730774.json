{"BEFORE":"    def forward(self, y, cb, cr):\n        \"\"\"\n        Args:\n            y(tensor): y channel image\n            cb(tensor): cb channel\n            cr(tensor): cr channel\n        Returns:\n            Tensor: batch x height x width x 3\n        \"\"\"\n\n        def repeat(x, k=2):\n            height, width = x.shape[1:3]\n            x = x.unsqueeze(-1)\n            x = x.repeat(1, 1, k, k)\n            x = x.view(-1, height * k, width * k)\n            return x\n\n        cb = repeat(cb)\n        cr = repeat(cr)\n        return torch.cat([y.unsqueeze(3), cb.unsqueeze(3), cr.unsqueeze(3)], dim=3)\n","AFTER":"    def forward(self, x: torch.Tensor) -> torch.Tensor:\n        height, _ = x.shape[1:3]\n        batch_size = x.shape[0]\n        x_reshaped = x.view(batch_size, height \/\/ self.k, self.k, -1, self.k)\n        x_transposed = x_reshaped.permute(0, 1, 3, 2, 4)\n        out = x_transposed.contiguous().view(batch_size, -1, self.k, self.k)\n\n        return out\n"}