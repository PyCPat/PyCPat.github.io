{"BEFORE":"        x = self.ff(x) + x\n\n        return x, self.to_halt_logits(x)\n","AFTER":"        x = self.ff(x) + x\n\n        if self.causal:\n            denom = torch.arange(x.shape[-2], device = x.device)\n            denom = rearrange(denom, 'n -> () n ()')\n            halt_input = x.cumsum(dim = -1) \/ (denom + 1)\n        else:\n            halt_input = x\n\n        halt_logits = self.to_halt_logits(halt_input)\n\n        return x, halt_logits\n"}