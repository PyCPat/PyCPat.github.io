{"BEFORE":"        h = self.block1(x)\n\n        # Compute scale and shift from time_context\n        scale_shift = None\n        if exists(self.to_time_embedding) and exists(time_context):\n            time_embedding = self.to_time_embedding(time_context)\n            time_embedding = rearrange(time_embedding, \"b c -> b c 1\")\n            scale_shift = time_embedding.chunk(2, dim=1)\n\n        h = self.block2(h, scale_shift=scale_shift)\n\n        return h + self.to_out(x)\n","AFTER":"        if self.use_pre_downsample:\n            x = self.downsample(x)\n\n        skips = []\n        for block in self.blocks:\n            x = block(x, t)\n            skips += [x]\n\n        if self.use_attention:\n            x = self.transformer(x)\n            skips += [x]\n\n        if not self.use_pre_downsample:\n            x = self.downsample(x)\n\n        return x, skips\n"}