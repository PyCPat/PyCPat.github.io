{"BEFORE":"        x = self.conv_in(x)           # (bs, 2, 5, 50) --> (bs, 64, 5, 50)\n        # feature_in = x\n        x = self.conv_up_scale(x)\n        # (bs, 2, 5, 50) --> (bs, 64, 5, 50)\n        # identical = x\n        x = self.conv_stage(x)\n        # x += identical\n\n        x = self.conv_down_scale(x)   # (bs, 2, 5, 50) --> (bs, 64, 5, 50)\n        # x += feature_in\n\n        x = self.conv_out(x)          # (bs, 2, 5, 50) --> (bs, 64, 5, 50)\n        x = x.squeeze(1)              # (bs, 2, 5, 50) --> (bs, 64, 5, 50)\n        x = x.squeeze()               # (bs, 2, 5, 50) --> (bs, 64, 5, 50)\n","AFTER":"        x_in_2 = self.init_input_conv2d(x).squeeze(dim=2)\n        # x = x_in_1 + x_in_2\n        x = x_in_2\n        # stage 1: \n        x_1 = x\n        x = self.conv1d_up2_s2_1(x)       # (bs, 1024, 180ï¼‰  \n        x_shortcut_1 = self.shortcut_1(x_1)\n        x += x_shortcut_1\n        # stage 2:\n        # x_2 = x\n        x = self.con1d_stage(x)\n        # x += x_2\n        # stage 3:\n        x_3 = x\n        x = self.conv1d_up2_s2_2(x)       # (bs, 2048, 90)\n        x_shortcut = self.shortcut_2(x_3)\n        x += x_shortcut\n        # stage 4:\n        # x_4 = x\n        x = self.conv1d_s2(x)             # (bs, 2048, 45)\n        # x_shortcut_3 = self.shortcut_3(x_4)\n        # x_shortcut_4 = self.shortcut_4(x_2)\n        # x = (x + x_shortcut_3 + x_shortcut_4) \/ 3\n        # x += x_shortcut_3\n        # regressor\n        x = self.avgpool(x)\n        x = torch.flatten(x, 1)           # (bs, 2048)\n        x = self.regressor(x)             # (bs, 5)\n"}