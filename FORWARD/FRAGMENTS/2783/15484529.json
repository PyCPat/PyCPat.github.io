{"BEFORE":"        x_mean = x.mean(dim=2, keepdim=True).detach()\n        x_std = x.std(dim=2, keepdim=True).detach()\n        # make sure x_std is not zero\n        x_std += self.div_guard\n        return (x - x_mean) \/ x_std\n","AFTER":"        mask = x.abs() > 0.0\n        num_elements = mask.sum(dim=2, keepdim=True).detach()\n        x_mean = x.sum(dim=2, keepdim=True).detach() \/ num_elements\n        numerator = (x - x_mean).pow(2).sum(dim=2, keepdim=True).detach()\n        x_std = (numerator \/ num_elements).sqrt()\n        # make sure x_std is not zero\n        x_std += self.div_guard\n        result = (x - x_mean) \/ x_std\n        return torch.masked_fill(result, ~mask, 0.0)\n"}