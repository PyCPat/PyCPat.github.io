{"BEFORE":"        c = Variable(torch.zeros(batch_size, 32, row, col))\r\n\r\n        if self.use_GPU:\r\n            h = h.cuda()\r\n            c = c.cuda()\r\n\r\n        x_list = []\r\n        for i in range(self.iteration):\r\n            x = torch.cat((input, x), 1)\r\n            x = self.conv0(x)\r\n\r\n            x = torch.cat((x, h), 1)\r\n            i = self.conv_i(x)\r\n            f = self.conv_f(x)\r\n            g = self.conv_g(x)\r\n            o = self.conv_o(x)\r\n            c = f * c + i * g\r\n            h = o * torch.tanh(c)\r\n\r\n            x = h\r\n            resx = x\r\n            x = F.relu(self.res_conv1(x) + resx)\r\n            resx = x\r\n            x = F.relu(self.res_conv2(x) + resx)\r\n            resx = x\r\n            x = F.relu(self.res_conv3(x) + resx)\r\n            resx = x\r\n            x = F.relu(self.res_conv4(x) + resx)\r\n            resx = x\r\n            x = F.relu(self.res_conv5(x) + resx)\r\n            x = self.conv(x)\r\n\r\n            x = x + input\r\n","AFTER":"        c = Variable(torch.zeros(batch_size, 32, row, col))\r\n\r\n        h = h.to(device)\r\n        c = c.to(device)\r\n\r\n        x_list = []\r\n        for i in range(self.iteration):\r\n            x = torch.cat((input, x), 1)\r\n            x = self.conv0(x)\r\n\r\n            x = torch.cat((x, h), 1)\r\n            i = self.conv_i(x)\r\n            f = self.conv_f(x)\r\n            g = self.conv_g(x)\r\n            o = self.conv_o(x)\r\n            c = f * c + i * g\r\n            h = o * torch.tanh(c)\r\n\r\n            x = h\r\n            resx = x\r\n            x = F.relu(self.res_conv1(x) + resx)\r\n            resx = x\r\n            x = F.relu(self.res_conv2(x) + resx)\r\n            resx = x\r\n            x = F.relu(self.res_conv3(x) + resx)\r\n            resx = x\r\n            x = F.relu(self.res_conv4(x) + resx)\r\n            resx = x\r\n            x = F.relu(self.res_conv5(x) + resx)\r\n            x = self.conv(x)\r\n\r\n            if self.use_Contrast:\r\n                x = self.mix(fea1 = input, fea2 = x) # input: rain image, x: derained image\r\n            else:\r\n                x = x + input\r\n\r\n            x_list.append(x)\r\n"}