{"BEFORE":"        x1 = self.c1(x)\n        x = self.c2(x1)\n        x = self.c3(x)\n        x4 = self.c4(x)\n\n        x = self.c5(x4)\n        x = self.c6(x)\n        x7 = self.c7(x)\n\n        x = self.c8(safe_concat(x1, x7))\n        x = self.c9(x)\n        x10 = self.c10(x)\n\n        x = self.c11(safe_concat(x4, x10))\n        x = self.c12(x)\n        x = self.c13(x)\n\n        return self.out(x)\n","AFTER":"        a1_ = self.A1_(x)\n        a1_dwn = F.max_pool2d(a1_, kernel_size=2, stride=2)\n\n        a2_ = self.A2_(a1_dwn)\n        a2_dwn = F.max_pool2d(a2_, kernel_size=2, stride=2)\n\n        a3_ = self.A3_(a2_dwn)\n        a3_dwn = F.max_pool2d(a3_, kernel_size=2, stride=2)\n\n        a4_ = self.A4_(a3_dwn)\n        # a4_ = F.dropout(a4_, p=0.2)\n        a4_dwn = F.max_pool2d(a4_, kernel_size=2, stride=2)\n\n        a_mid = self.A_mid(a4_dwn)\n\n        a4_up = self.A4_up(a_mid)\n        _a4 = self._A4(UNet.match_and_concat(a4_, a4_up))\n        # _a4 = F.dropout(_a4, p=0.2)\n\n        a3_up = self.A3_up(_a4)\n        _a3 = self._A3(UNet.match_and_concat(a3_, a3_up))\n\n        a2_up = self.A2_up(_a3)\n        _a2 = self._A2(UNet.match_and_concat(a2_, a2_up))\n        # _a2 = F.dropout(_a2, p=0.2)\n\n        a1_up = self.A1_up(_a2)\n        _a1 = self._A1(UNet.match_and_concat(a1_, a1_up))\n\n        final = self.final(_a1)\n        return final\n"}