{"BEFORE":"        mel_outputs = mel_outputs.view(B, -1, self.mel_dim)\n\n        linear_outputs = self.postnet(mel_outputs)\n        linear_outputs = self.last_linear(linear_outputs)\n\n        return mel_outputs, linear_outputs, alignments\n","AFTER":"        B = characters.size(0)\n\n        inputs = self.embedding(characters)\n        # (B, T', in_dim)\n        encoder_outputs = self.encoder(inputs)\n\n        # (B, T', mel_dim*r)\n        mel_outputs, alignments, stop_outputs = self.decoder(\n            encoder_outputs, mel_specs)\n\n        # Post net processing below\n\n        # Reshape\n        # (B, T, mel_dim)\n        mel_outputs = mel_outputs.view(B, -1, self.mel_dim)\n        stop_outputs = stop_outputs.view(B, -1)\n\n        linear_outputs = self.postnet(mel_outputs)\n        linear_outputs = self.last_linear(linear_outputs)\n\n        return mel_outputs, linear_outputs, alignments, stop_outputs\n"}