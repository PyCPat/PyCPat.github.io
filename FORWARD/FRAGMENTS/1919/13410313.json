{"BEFORE":"        x = input.permute(0, 2, 1).contiguous() # (batch_size, n_frames, n_bins)\n        x, _ = self.rnn(x)\n        x = self.fc(x) # (batch_size, n_frames, n_bins*embed_dim)\n        x = x.view(batch_size, n_frames, n_bins, embed_dim)\n        x = x.permute(0, 3, 2, 1).contiguous() # (batch_size, embed_dim, n_bins, n_frames)\n","AFTER":"        eps = self.eps\n\n        batch_size, _, _, n_frames = input.size()\n\n        if self.take_log:\n            x = torch.log(input + eps)\n        elif self.take_db:\n            x = 20 * torch.log10(input + eps)\n        else:\n            x = input\n\n        x = x.squeeze(dim=1).permute(0, 2, 1) # (batch_size, n_frames, n_bins)\n        x, _ = self.rnn(x)\n        x = self.fc(x) # (batch_size, n_frames, n_bins * embed_dim)\n        x = x.view(batch_size, n_frames, n_bins, embed_dim)\n        x = x.permute(0, 2, 1, 3).contiguous() # (batch_size, n_bins, n_frames, embed_dim)\n"}