{"BEFORE":"        h_0 = h\n        for layer in self.f:\n            h = layer(g, h)\n        if self.stage_type == 'skipsum':\n            h = h + h_0\n        elif self.stage_type == 'skipconcat':\n            h = torch.cat((h_0, h), 1)\n        else:\n            raise ValueError('stage_type must in [skipsum, skipconcat]')\n        h = self.act(h)\n        return h\n","AFTER":"        h_0 = h\n        for layer in self.f:\n            h = layer(g, h)\n        out_h = {}\n        for key, value in h_0.items():\n\n            if self.stage_type == 'skipsum':\n                out_h[key] = self.act(h[key] + h_0[key])\n            elif self.stage_type == 'skipconcat':\n                out_h[key] = self.act(torch.cat((h[key], h_0[key]), 1))\n            else:\n                raise ValueError('stage_type must in [skipsum, skipconcat]')\n\n        return out_h\n"}