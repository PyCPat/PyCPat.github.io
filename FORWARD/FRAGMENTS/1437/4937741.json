{"BEFORE":"        quantizeds = list()\n        samples = list()\n        logits = list()\n        for x, net, codebook, k in zip(latents, self._prob, self._codebook, self._k):\n            n, c, h, w = x.shape\n            # [n, c, h, w] -> [h, w, n, c] -> [h*w, n, c]\n            x = self._encoder(x.permute(2, 3, 0, 1).reshape(-1, n, c))\n            # [h*w, n, k] -> [n, h*w, k]\n            logit = net(x).permute(1, 0, 2)\n            sample = F.gumbel_softmax(logit * self._d, temperature, hard)\n            # [N, h*w, c] <- [N, h*w, k] @ [k, C]\n            quantized = codebook(sample)\n            # [n, h*w, c] -> [h*w, n, c] -> [n, h*w, c] -> [n, h, w, c]\n            deTransformed = self._decoder(quantized.permute(1, 0, 2)).permute(1, 0, 2).reshape(n, h, w, c)\n            # [n, c, h, w]\n            quantizeds.append(deTransformed.permute(0, 3, 1, 2))\n            samples.append(sample)\n            logits.append(logit.reshape(n, h, w, k).permute(0, 3, 1, 2))\n\n        return quantizeds, samples, logits\n","AFTER":"        quantizeds = list()\n        samples = list()\n        logits = list()\n        targets = list()\n        for xRaw, net, codebook, k in zip(latents, self._prob, self._codebook, self._k):\n            targets.append(xRaw)\n            n, c, h, w = xRaw.shape\n            # [n, c, h, w] -> [h, w, n, c] -> [h*w, n, c]\n            encoderIn = xRaw.permute(2, 3, 0, 1).reshape(-1, n, c)\n            x = self._encoder(encoderIn)\n            # [h*w, n, k] -> [n, h*w, k]\n            logit = net(x).permute(1, 0, 2)\n            sample = F.gumbel_softmax(logit * self._d, temperature, hard)\n            # [N, h*w, c] <- [N, h*w, k] @ [k, C]\n            quantized = codebook(sample)\n            # [n, h*w, c] -> [h*w, n, c]\n            quantized = quantized.permute(1, 0, 2)\n            mixed = temperature * encoderIn \/ (temperature + 1) + quantized \/ (temperature + 1)\n            # [h*w, n, c] -> [n, h*w, c] -> [n, h, w, c]\n            deTransformed = self._decoder(mixed, quantized).permute(1, 0, 2).reshape(n, h, w, c)\n            # [n, c, h, w]\n            quantizeds.append(deTransformed.permute(0, 3, 1, 2))\n            samples.append(sample)\n            logits.append(logit.reshape(n, h, w, k).permute(0, 3, 1, 2))\n\n        return quantizeds, targets, samples, logits\n"}