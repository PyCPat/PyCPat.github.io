{"BEFORE":"        if hasattr(self, 'dbb_reparam'):\n            return self.nonlinear(self.dbb_reparam(inputs))\n\n        out = self.dbb_origin(inputs)\n        if hasattr(self, 'dbb_1x1'):\n            out += self.dbb_1x1(inputs)\n        out += self.dbb_avg(inputs)\n        out += self.dbb_1x1_kxk(inputs)\n        return self.nonlinear(out)\n","AFTER":"        x = self.cv1(x)\n        with warnings.catch_warnings():\n            warnings.simplefilter('ignore')  # suppress torch 1.9.0 max_pool2d() warning\n            y1 = self.m(x)\n            y2 = self.m(y1)\n            return self.cv2(torch.cat((x, y1, y2, self.m(y2)), 1))\n\n\nclass Transpose(nn.Module):\n"}