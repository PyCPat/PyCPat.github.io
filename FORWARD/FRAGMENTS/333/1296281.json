{"BEFORE":"        for (modality, factor) in zip(modalities, self.factors):\n            modality_withones = torch.cat((Variable(torch.ones(batch_size, 1).type(modality.dtype), requires_grad=False), modality), dim=1)\n","AFTER":"        for (modality, factor) in zip(modalities, self.factors):\n            ones = Variable(torch.ones(batch_size, 1).type(modality.dtype), requires_grad=False).cuda()\n            if self.flatten:\n                modality_withones = torch.cat((ones, torch.flatten(modality,start_dim=1)), dim=1)\n            else:\n                modality_withones = torch.cat((ones, modality), dim=1)\n            modality_factor = torch.matmul(modality_withones, factor)\n"}