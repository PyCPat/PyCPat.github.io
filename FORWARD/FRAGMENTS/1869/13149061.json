{"BEFORE":"        features = self.extract_features(input)\n\n        features = functional.adaptive_avg_pool2d(features, 1).squeeze(-1).squeeze(-1)\n\n        assert features.size(1) == self.in_features\n        pre_landmarks = self.fc(features)\n\n        return pre_landmarks\n","AFTER":"        p4, p8, p16, p32 = self.backbone(x)\n        p32 = p32.view(p32.size(0), -1)\n        output = self.fc(p32)\n        return output, p8\n"}