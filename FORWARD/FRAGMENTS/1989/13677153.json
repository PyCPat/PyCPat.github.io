{"BEFORE":"    def forward(self, x: Tensor) -> Tensor:\n        var = torch.var(x, dim=1, unbiased=False, keepdim=True)\n        mean = torch.mean(x, dim=1, keepdim=True)\n        norm = (x - mean) \/ (var + self.eps).sqrt() * self.g\n        return norm + self.b if self.bias else norm\n","AFTER":"        self, x: Tensor, scale_shift: Optional[Tuple[Tensor, Tensor]] = None\n    ) -> Tensor:\n        x = self.groupnorm(x)\n        if exists(scale_shift):\n            x = scale_and_shift(x, scale=scale_shift[0], shift=scale_shift[1])\n        x = self.activation(x)\n        return self.project(x)\n"}